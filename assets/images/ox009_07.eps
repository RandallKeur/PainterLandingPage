%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: ox009_07.eps
%%Creator: Adobe Illustrator(R) 23.1
%%For:  
%%CreationDate: 2/17/2020
%%BoundingBox: 0 0 1000 1000
%%HiResBoundingBox: 0 0 1000 1000
%%CropBox: 0 0 1000 1000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.1.0 x670 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 9138 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDC8FFCAFD05FFCACACAFFFFFFCACA
%C3CACAFFFFFFCAFD05FFCAFFFFFFCACAC3FD5EFFCAC3C3FFFFCABCC3BCC3
%C3FFCAC3BCC3BCC3CAFFFFC3BCCAFFFFBCC3FFFFC3C3BCC3BCFD5DFFCA9A
%C3FFFF9ABCA1CAC3C3CAC39AC3A8C39ABDCAFF9ABC9AFFFFBC9BFFCABC9A
%CAC3C3CAFD4CFFA8FFA8FD05FFA9FD04FFA8FFFFCABDA1A9A1C3C3FD05FF
%BCC3FFFFFFC3BCFFFFC3BCC3CAFFBCC3FFCABCC3CAFD4BFFA87DFF28537E
%535384A8FF287DFFA859537D7D59FF4C7628769ACAFD04FFC3C3C3FFFFFF
%C3BCC3FFBCC39AC3CABCA1FFCAC39AC3C3CAFD49FFA8537D532E7DA8537D
%7D7D537DFFA87D5384597D77529B7DC3C3CAFD04FFCABCCAFFFFFFCABCCA
%FFC3C3CABCCABCC3FFFFCAC3BCC3BCCAFD48FFA853FF28527D53287D7EFF
%2853537E5952535259CA4BA159C39ACAFD04FFCABC9AFFFFFF9ABCCAFF9A
%C3FFC39AC3C3FD05FF9ABCC3FD4CFFA8FFA8FD05FFA8A9A8FFFFA9FFFFCA
%C3C3FFCAC3BCFFFFCAC3FFBCC3CAFFCAC3BCFFFFC3C3FFCAC3BCC3FFFFC3
%CACAC3BCC3FD5CFFCA9AC3FFFFA1C3BCBC9AC3CACA9AC3BCBC9ACAFFFF9A
%C3FFFFA1C3C3FFA1C3BCBC9AC3CAFD5DFFCACAFFFFFFCAC3C3CACAFFFFCA
%C3C3C3CAFFFFFFCACAFFFFFFC3CAFFFFCACAC3C3CAFDFCFFFDFCFFFDFCFF
%FD32FFCAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCA
%CACAFFCACACAFFCACACAFFCACACAFFFFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFAFFFFF
%FFCAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACA
%FFCACACAFFCACACAFFCACAC3BCC3BCC3BCC3BCC3BCC3BCC3BCFD06C3CAC3
%CAC3C3C3CABCC3BCC3BCC3BCC3BCC3BCC3BCFFFFFFAF8B858B858B858B85
%8B858B858B85AF858B85AF85AF85AFAFAF85AFA9AF858B858B858B858B85
%8B85FFFFFFCAC3BCC3BCC3BCC3BCC3BCC3BCC3BCFD04C3CAC3C3BCC3C3C3
%BCC3BCC3BCC3BCC3BCC3BCC3BCC3BC9ABC9ABC9ABC9ABC9ABC9ABCC3C3A1
%CAC3CA9ACAC3C39BC3CACAA1C39ABC9ABC9ABC9ABC9ABC9ABCCAFFFFFF84
%85608584856085848560AF85AF84AFA9AFA88585AF84AFA9FF84AFA98560
%858485608584856085A9FFFFCA9ABC9ABC9ABC9ABC9ABC9ABC9ABC9ABCCA
%CA9ACAC3BCA8FF9ABC9ABC9ABC9ABC9ABC9ABC9ABC9ABCC3BCC3BCC3BCC3
%BCC3BCC3BCC3CACAC3CACAC3C3CAC3CAC3CAC3CAC3C3BCC3BCC3BCC3BCC3
%BCC3BCFFFFFFAF8B858B858B858B858B858B85AFA9AFA9AF85FF85AFA9FF
%AFAFA9AFA9AF858B858B858B858B858B85FFFFFFCAC3BCC3BCC3BCC3BCC3
%BCC3BCC3BCC3BCCAC3CAC3CAC3CACAC3BCC3BCC3BCC3BCC3BCC3BCC3BCC3
%BCCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCA
%CACAFFCACACAFFCACACAFD05FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAF
%FFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9FD05FFCACACAFFCA
%CACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACAFFCACACA
%FFCACACAFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD44FF53532E592F532EA8
%FD63FFA8FD14FF2E285360592E53A8FD0FFFA9532852282E282E2E7EA8A8
%FD48FF5352FD13FF537E2E59532F2FFD10FFA8282F28532E5A59FF282853
%59A8FD13FF53535253A8FD25FF28527D537D5253527D5253537D5284FD0F
%FF7E5A852F592E2FFD10FF7E592F8560852859FF522852282E59AFFD0CFF
%A8A8FF84052F5A59287DA8FD24FF76C3BCC3BCC34C4C9AC3BCC3BC9B7DFD
%0FFF7D2E2E2E282E28FD10FF535959858B852F53FF2828287DA8FD0EFF7D
%4CA87DA8A82E28A8535277FD22FFA9769AC3BCBC2752274C9AC3BCBC767D
%FD0FFF5928A828532E28FD10FF2752847E2E53282E7D59FD12FF52765927
%52532E7D2E534C7DFD22FFA870C3BCC32876707676289AC3BCC377FD0FFF
%53FD047D7E28FD0FFFA87628854C7DAF592E7DAFFD12FF7D4C7E2E5A2853
%7D2E289A77FD22FF7E28274C27287DA27DA84C28274C277DFD0FFFA82E52
%5276287DFD0FFF7D70532853A8FD17FF53767E2E2FA828537EA24B7DFD23
%FF52FFFFFF52FF777DA87EA8FFFF7EFD12FF4CBD4CA8FD10FF7D765359FD
%19FF7D70A92E59A82E2FFFA1767DFD23FF53282E5253FF52707D7D532853
%7DFD12FF7D7652FD11FF7D4C5A2EFD19FF53767D2E2F525353A8A2707DFD
%23FF2E52287D2EFF4C9A777E5328537EFD12FF77C352FD11FF535A8553A8
%FD18FF7D4C524C764C764C76767677FD23FF5228535352FF76767D535328
%5353FD12FF529A76A8FD10FFA8052E2884FD18FF52764B764B764B9A4B52
%4B7DFD23FF52FF7EFF28532852287D7EA8A87EFD12FF4CC39A7DFD12FF28
%A8FD19FF7D709ABCC3BCC3BCC39A7677FD22FFA82E28532E2828532E5228
%522E52287DFD11FF5205527DFD12FF7EA8FD17FFA8522852285228522852
%2852285228FD42FF774C27FD13FFA8537D5353FD66FFA8FDE1FF7DA87DA8
%7DA87D7DFD13FF7D7DA8A87D7DA8A8FD13FFA8A852A8A8A8FD14FF7DA87D
%A87DA87DA8FD28FFFD05A87DA8A8FD13FFFD07A8FD15FFA8A87DA87DFD15
%FFFD04A87DA8A8FDFCFFFDFCFFFDFCFFFDFCFFFDEFFFA87E7DA8FD46FFA8
%84A8A8A884A8A8FD1AFFA92E2EA8FD0FFFA853A9FF7DA8FD45FF28847E84
%84847E53FD19FF7E527E28FD10FF7DAFFFFFA87DFD12FF28527776765277
%767652774CFD25FF7E272E2F532E535A8528FD17FFA8537D8405A8FD10FF
%287DFFFF592EA8FD11FF27285277524C277752772752FD25FF52FF28595A
%595A595A53FD16FF7D59A88527FD12FF537DFFAF7D7DA8FD11FF5228FFFF
%FF2852FFFFFF524CFD25FF7D7DA9A8A884A9848584FD15FF527DA9852884
%FD12FF282E285228FF53FD11FF2852FFFFAF4C28FFFFFF2752FD26FFA828
%7EA8AF858B85AFFD13FF7E52FFFF85287EFD12FFA8A8A87EFF53FF53FD11
%FF524CFF85FF4C52FFFFFF5228FD28FF7E5352FFA88584FD11FF53527DFF
%A885287DFD13FF7D7EAF84A852FF52FD11FF2752A9AFA84C28AF84FF2752
%FD2AFF7EFFFFFFAFFD10FF28A14CA8AF8B537DFD14FF527E5953537EFF7E
%A8FD10FF524CFFAFFF4C52AFAFAF5228FD29FF53525284FD10FFA8289A9A
%7627852E53FD15FF53FFFF7D7D84FFA87DFD10FF2752FFFFFF5228FFA9FF
%2852FD29FF527628FD11FF52C34C52BC525353AFFD15FF2859535928FFA8
%A853A8AFFD0EFF5228FFFFFF2852FFFFFF524CFD29FF7D704CFD11FF779A
%52529A2752A8FD15FFA87DFFFFFF59FF280553007DFD0EFF27287EA8A84C
%27A8A8A82752FD29FF779B4CFD11FFA8764C77767DA8FD16FFA87EAFA9AF
%28FF52527676A8FD0EFF767076707676767076709B4CFD29FF7D7652FD12
%FF279A4C4CA8FD17FF52522E52282EA95270C34CFD0DFF8459537D527D53
%7D527D537D525328FD28FF779A27FD12FF524C53FD19FF53FFFFFFA852A8
%A876BC52FD0DFFA92E537D532E5352532E5352532E53FD29FF52A2FD12FF
%A8A8FD18FF7D7D2E7D537D5253527D4C77527DA8FDBDFFA8FFA8FFA8FFFF
%FFA8FFFFFFA8FD13FFA8FFA8FD17FFA8FFA8FFA8FD13FFA8FFA8FFA8FFA8
%FFA8FD24FF7D7D7DFD08A8FF7DA8A8FD11FF7D7D7DA8FD14FFA8A87DA8A8
%A87DA8A8FD11FFA87D7DA87DA8A8A87DA8FD25FFA8A8A8FFA8FFFD04A87D
%A8A8A8FD10FFFD05A8FD14FFA8A8A87DFD04A8FD13FFA8FFFD07A8FDFCFF
%FDFCFFFDFCFFFDFCFFFD38FF7D7E7DFD35FF2EA8FD44FF7D52A8A87E28A8
%FD14FFA2524CFD1AFFA87E5205537DFD14FFA8FD2CFF7E7EFD05FF2EFD12
%FFA94C769ABC4C52A8FD16FFA82853287D282EA8FD12FFA92E5352A8FD29
%FF28FD07FF28FD11FFA876704C4C9A4BA8FD16FFA828FD042E28A8FD12FF
%7DA8FFFF532E7DFD26FFA8A8FF7D53FF52A8CA52FD11FFA876535353289B
%7D7D52535253A8FD13FFA853282EA8FD12FF5253A8FF53A87D53FD25FFA8
%7DFF532E28527EC327FD11FFA84C527DA87D52A87D5352532E7EFD0DFFA9
%2E5228532E52282E282853FD11FF52FF7D5328FFFF597DFD24FFA87DFFFF
%53527DCABC52FD11FFA876532E7E535252A8FD12FFA877FD09C352FD10FF
%A859FFA853FF52FF7D53FD25FF28AFFF7D28A19A76527DA853FD0EFF7E9A
%4B4C27764BA8FD14FF27BC9ABC9ABC9ABC9A767DFD10FF7D525928A8A87D
%2859597DFD25FF2EFF76529AC3527E05A952FD0EFFA99AC3BCC3BC76A8FD
%15FF28FD059A767652FD11FF52A952A94C537E59608B28FD25FF7D707627
%9A4BA82E2E52527DFD0DFF849ABCBC9AC34CA8FFFF5353A8FD11FFA2A828
%7D52A8A8FD12FF5252524C9A28FFA8535A2EA8FD25FFFD042852A8537D7D
%5353FD0DFFA876C34C525276597D28842F28FD13FF53597EFF5327A8FD0F
%FFA8527D7D9ABC76A8A8287D7DA8FD25FF59AF7D537EFF28845A2F7DFD0D
%FFA89A9A52282E2E2E2F59605905FD13FF597D7D597D287EFD0EFF7D527E
%A8FF27BC4C287D84FFFF2EFD25FF592E5928FFFF7E598B2EFD0EFFA876C3
%4C775252597D27592852FD13FF53287E5959A8FD0FFFA8592E7EA85228A8
%7DFF53FFFF7EFD24FF5928525252FFFFFF5328A8FD0EFFA84C7676707627
%A8FFFF537DA9FD13FF5252535353FD11FF527E285328535252592E7DA859
%FD23FFA953FF522EA8FFFFFF7D2EA8FD10FF7D4C527DFD1AFFA85253287E
%FD12FF7DFD06FFA9A8A8A8FD25FF7E537D597D537D5953A8FD30FF84277E
%FDC2FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0DFFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FD0FFFA8FFA8FFA8FFA8FFA8FFA8FD11FFA8FFA8FFFFFFA8FD26FFFD
%04A87DFF7DA87DA8A8A87DA8FD0DFFA87DA87DA87DA8A8A87DA8A8A8FD0F
%FF7DA8A8A8FD067DA8FD11FFA8A8A87DFFA8A8A8FD25FFFD05A87DFFFD05
%A8FFA8FD0DFFFD04A87DFD08A8FD0FFFFD04A87DA87DFD04A8FD11FFA8A8
%7DFD05A8FD76FFFD0CA8FD74FFA8A87DFD05A87DA87DA8FDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFD25FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 7 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">ox003_source</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.1 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-02-17T13:14:42+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-02-17T13:14:43+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-02-17T13:14:43+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>128</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qlur3uu2xj/RmmJqC&#xA;sD6he5FuVI6AAo9a4QAhLYNV86StcGbRo7VUNLdPWWdmHFTViGjA3LfOlNuuVzJHLdzMMMRHrNH8&#xA;eXu+/wAkZZXvmSTUBFd2UcVpzlDSoeR4ivpndu+w6f2RjKV7jZnlxYBC4yJltt9/ROMtcF2KofUJ&#xA;ryGzlksrdbq6UAxW7SekHNRtzIbjt7YQqSNq/nMmMDQY4gWpK5ukl4qUY1VQsfIg8diRXp/lYJ7D&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:56941088-9760-fa4f-99cc-415b5faecf6c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:56941088-9760-fa4f-99cc-415b5faecf6c</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:34b95b45-5ce5-124c-8d6c-cb1d5a2d8b7f</stRef:instanceID>
            <stRef:documentID>xmp.did:34b95b45-5ce5-124c-8d6c-cb1d5a2d8b7f</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:cb4e6aba-8b9a-9c48-a47e-d03d4b1e01ad</stEvt:instanceID>
                  <stEvt:when>2019-10-14T11:24:24+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:56941088-9760-fa4f-99cc-415b5faecf6c</stEvt:instanceID>
                  <stEvt:when>2020-02-17T13:14:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>AIRobin</illustrator:CreatorSubTool>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1000.000000</stDim:w>
            <stDim:h>1000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -1000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
cp
clp
0 0 mo
0 1000 li
1000 1000 li
1000 0 li
0 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
160.093 458.105 mo
159.872 458.105 159.688 458.03 159.537 457.881 cv
159.388 457.73 159.313 457.545 159.313 457.326 cv
159.313 447.17 li
159.313 446.94 159.388 446.753 159.537 446.607 cv
159.688 446.463 159.872 446.391 160.093 446.391 cv
160.322 446.391 160.51 446.463 160.655 446.607 cv
160.8 446.753 160.872 446.94 160.872 447.17 cv
160.872 451.476 li
167.832 451.476 li
167.832 447.17 li
167.832 446.94 167.907 446.753 168.058 446.607 cv
168.207 446.463 168.393 446.391 168.612 446.391 cv
168.843 446.391 169.027 446.463 169.168 446.607 cv
169.308 446.753 169.378 446.94 169.378 447.17 cv
169.378 457.326 li
169.378 457.545 169.308 457.73 169.168 457.881 cv
169.027 458.03 168.843 458.105 168.612 458.105 cv
168.393 458.105 168.207 458.03 168.058 457.881 cv
167.907 457.73 167.832 457.545 167.832 457.326 cv
167.832 452.855 li
160.872 452.855 li
160.872 457.326 li
160.872 457.545 160.8 457.73 160.655 457.881 cv
160.51 458.03 160.322 458.105 160.093 458.105 cv
cp
.545098 .545098 .545098 rgb
f
177.792 456.846 mo
178.441 456.846 179.039 456.729 179.584 456.493 cv
180.129 456.258 180.602 455.934 181.002 455.518 cv
181.401 455.104 181.709 454.615 181.925 454.056 cv
182.14 453.496 182.247 452.891 182.247 452.24 cv
182.247 451.59 182.14 450.986 181.925 450.426 cv
181.709 449.865 181.401 449.378 181.002 448.963 cv
180.602 448.549 180.129 448.226 179.584 447.996 cv
179.039 447.766 178.441 447.65 177.792 447.65 cv
177.142 447.65 176.544 447.766 175.999 447.996 cv
175.454 448.226 174.984 448.549 174.59 448.963 cv
174.194 449.378 173.887 449.865 173.667 450.426 cv
173.447 450.986 173.337 451.59 173.337 452.24 cv
173.337 452.891 173.447 453.496 173.667 454.056 cv
173.887 454.615 174.194 455.104 174.59 455.518 cv
174.984 455.934 175.454 456.258 175.999 456.493 cv
176.544 456.729 177.142 456.846 177.792 456.846 cv
cp
177.792 458.256 mo
176.912 458.256 176.106 458.107 175.377 457.813 cv
174.646 457.518 174.02 457.104 173.494 456.568 cv
172.97 456.033 172.562 455.398 172.271 454.663 cv
171.981 453.928 171.837 453.121 171.837 452.24 cv
171.837 451.361 171.981 450.556 172.271 449.826 cv
172.562 449.096 172.97 448.463 173.494 447.928 cv
174.02 447.393 174.646 446.979 175.377 446.684 cv
176.106 446.389 176.912 446.24 177.792 446.24 cv
178.672 446.24 179.475 446.389 180.199 446.684 cv
180.925 446.979 181.552 447.393 182.082 447.928 cv
182.612 448.463 183.021 449.096 183.312 449.826 cv
183.602 450.556 183.747 451.361 183.747 452.24 cv
183.747 453.121 183.602 453.928 183.312 454.663 cv
183.021 455.398 182.612 456.033 182.082 456.568 cv
181.552 457.104 180.925 457.518 180.199 457.813 cv
179.475 458.107 178.672 458.256 177.792 458.256 cv
cp
f
191.097 458.346 mo
190.137 458.346 189.286 458.168 188.547 457.813 cv
187.807 457.458 187.229 456.965 186.813 456.336 cv
186.398 455.705 186.191 454.985 186.191 454.176 cv
186.191 447.17 li
186.191 446.94 186.267 446.753 186.416 446.607 cv
186.566 446.463 186.751 446.391 186.972 446.391 cv
187.201 446.391 187.389 446.463 187.534 446.607 cv
187.679 446.753 187.751 446.94 187.751 447.17 cv
187.751 454.176 li
187.751 454.715 187.894 455.193 188.179 455.607 cv
188.464 456.023 188.858 456.348 189.364 456.583 cv
189.869 456.818 190.446 456.936 191.097 456.936 cv
191.727 456.936 192.284 456.818 192.769 456.583 cv
193.254 456.348 193.634 456.023 193.909 455.607 cv
194.184 455.193 194.321 454.715 194.321 454.176 cv
194.321 447.17 li
194.321 446.94 194.396 446.753 194.547 446.607 cv
194.696 446.463 194.881 446.391 195.102 446.391 cv
195.331 446.391 195.517 446.463 195.656 446.607 cv
195.796 446.753 195.866 446.94 195.866 447.17 cv
195.866 454.176 li
195.866 454.985 195.664 455.705 195.259 456.336 cv
194.854 456.965 194.291 457.458 193.571 457.813 cv
192.852 458.168 192.026 458.346 191.097 458.346 cv
cp
f
202.586 458.256 mo
201.946 458.256 201.336 458.155 200.756 457.955 cv
200.176 457.756 199.671 457.476 199.241 457.115 cv
198.812 456.756 198.496 456.341 198.296 455.871 cv
198.196 455.66 198.198 455.465 198.304 455.285 cv
198.409 455.105 198.586 454.99 198.836 454.94 cv
199.017 454.9 199.193 454.928 199.369 455.023 cv
199.544 455.118 199.676 455.261 199.767 455.451 cv
199.886 455.701 200.084 455.931 200.358 456.141 cv
200.634 456.351 200.966 456.521 201.356 456.65 cv
201.746 456.781 202.156 456.846 202.586 456.846 cv
203.066 456.846 203.509 456.771 203.914 456.621 cv
204.318 456.471 204.646 456.253 204.896 455.968 cv
205.146 455.684 205.271 455.33 205.271 454.91 cv
205.271 454.381 205.063 453.905 204.648 453.485 cv
204.233 453.065 203.551 452.806 202.602 452.705 cv
201.361 452.586 200.386 452.221 199.676 451.61 cv
198.966 451 198.611 450.246 198.611 449.346 cv
198.611 448.686 198.796 448.125 199.166 447.666 cv
199.536 447.205 200.038 446.855 200.674 446.615 cv
201.309 446.375 202.017 446.256 202.796 446.256 cv
203.406 446.256 203.938 446.34 204.394 446.51 cv
204.849 446.681 205.246 446.916 205.586 447.215 cv
205.926 447.516 206.221 447.871 206.472 448.28 cv
206.611 448.5 206.669 448.708 206.644 448.902 cv
206.618 449.098 206.521 449.25 206.352 449.36 cv
206.161 449.48 205.956 449.506 205.736 449.436 cv
205.517 449.365 205.352 449.235 205.241 449.045 cv
205.081 448.756 204.886 448.511 204.656 448.311 cv
204.426 448.11 204.156 447.953 203.847 447.838 cv
203.536 447.723 203.171 447.666 202.751 447.666 cv
202.011 447.656 201.392 447.793 200.892 448.078 cv
200.391 448.363 200.142 448.801 200.142 449.391 cv
200.142 449.69 200.219 449.979 200.374 450.253 cv
200.528 450.528 200.813 450.766 201.229 450.965 cv
201.644 451.166 202.241 451.306 203.021 451.385 cv
204.211 451.506 205.139 451.868 205.804 452.473 cv
206.469 453.078 206.801 453.875 206.801 454.865 cv
206.801 455.436 206.684 455.931 206.448 456.351 cv
206.214 456.771 205.898 457.123 205.504 457.408 cv
205.108 457.693 204.658 457.906 204.153 458.045 cv
203.648 458.186 203.126 458.256 202.586 458.256 cv
cp
f
209.966 458.105 mo
209.745 458.105 209.561 458.03 209.41 457.881 cv
209.261 457.73 209.186 457.545 209.186 457.326 cv
209.186 447.17 li
209.186 446.94 209.261 446.753 209.41 446.607 cv
209.561 446.463 209.745 446.391 209.966 446.391 cv
216.745 446.391 li
216.976 446.391 217.16 446.458 217.301 446.593 cv
217.44 446.729 217.511 446.906 217.511 447.125 cv
217.511 447.336 217.44 447.506 217.301 447.635 cv
217.16 447.766 216.976 447.83 216.745 447.83 cv
210.745 447.83 li
210.745 451.476 li
215.051 451.476 li
215.28 451.476 215.466 451.543 215.605 451.678 cv
215.745 451.813 215.815 451.985 215.815 452.195 cv
215.815 452.405 215.745 452.578 215.605 452.713 cv
215.466 452.848 215.28 452.916 215.051 452.916 cv
210.745 452.916 li
210.745 456.666 li
216.745 456.666 li
216.976 456.666 217.16 456.73 217.301 456.86 cv
217.44 456.99 217.511 457.16 217.511 457.371 cv
217.511 457.59 217.44 457.768 217.301 457.902 cv
217.16 458.038 216.976 458.105 216.745 458.105 cv
209.966 458.105 li
cp
f
370.867 456.666 mo
373.987 456.666 li
374.447 456.666 374.853 456.586 375.202 456.426 cv
375.553 456.266 375.827 456.031 376.027 455.721 cv
376.228 455.41 376.327 455.025 376.327 454.565 cv
376.327 454.136 376.228 453.781 376.027 453.5 cv
375.827 453.221 375.553 453.008 375.202 452.863 cv
374.853 452.719 374.447 452.646 373.987 452.646 cv
370.867 452.646 li
370.867 456.666 li
cp
370.867 451.205 mo
373.673 451.205 li
374.242 451.205 374.71 451.065 375.075 450.785 cv
375.44 450.506 375.623 450.08 375.623 449.51 cv
375.623 448.94 375.44 448.518 375.075 448.243 cv
374.71 447.969 374.242 447.83 373.673 447.83 cv
370.867 447.83 li
370.867 451.205 li
cp
370.088 458.105 mo
369.867 458.105 369.683 458.03 369.532 457.881 cv
369.383 457.73 369.308 457.545 369.308 457.326 cv
369.308 447.17 li
369.308 446.94 369.383 446.753 369.532 446.607 cv
369.683 446.463 369.867 446.391 370.088 446.391 cv
373.673 446.391 li
374.353 446.391 374.95 446.523 375.465 446.788 cv
375.98 447.053 376.385 447.42 376.68 447.891 cv
376.975 448.361 377.123 448.9 377.123 449.51 cv
377.123 450 376.99 450.443 376.726 450.838 cv
376.46 451.232 376.098 451.545 375.638 451.775 cv
376.298 451.936 376.827 452.25 377.228 452.721 cv
377.628 453.19 377.827 453.806 377.827 454.565 cv
377.827 455.256 377.665 455.865 377.34 456.396 cv
377.015 456.926 376.563 457.344 375.982 457.648 cv
375.402 457.953 374.737 458.105 373.987 458.105 cv
370.088 458.105 li
cp
f
387.157 458.105 mo
387.018 458.105 386.89 458.076 386.774 458.016 cv
386.66 457.955 386.563 457.86 386.482 457.73 cv
383.782 453.381 li
385.297 452.945 li
387.758 456.905 li
387.938 457.195 387.962 457.468 387.832 457.723 cv
387.702 457.979 387.478 458.105 387.157 458.105 cv
cp
381.712 452.15 mo
383.633 452.15 li
384.092 452.15 384.497 452.063 384.848 451.889 cv
385.197 451.713 385.473 451.468 385.672 451.152 cv
385.872 450.838 385.973 450.48 385.973 450.08 cv
385.973 449.641 385.872 449.25 385.672 448.91 cv
385.473 448.57 385.197 448.306 384.848 448.115 cv
384.497 447.926 384.092 447.83 383.633 447.83 cv
381.712 447.83 li
381.712 452.15 li
cp
380.933 458.105 mo
380.712 458.105 380.527 458.03 380.377 457.881 cv
380.228 457.73 380.152 457.545 380.152 457.326 cv
380.152 447.17 li
380.152 446.94 380.228 446.753 380.377 446.607 cv
380.527 446.463 380.712 446.391 380.933 446.391 cv
383.633 446.391 li
384.383 446.391 385.047 446.548 385.627 446.863 cv
386.207 447.178 386.66 447.611 386.984 448.16 cv
387.31 448.711 387.473 449.351 387.473 450.08 cv
387.473 450.761 387.31 451.365 386.984 451.896 cv
386.66 452.426 386.207 452.84 385.627 453.141 cv
385.047 453.44 384.383 453.59 383.633 453.59 cv
381.712 453.59 li
381.712 457.326 li
381.712 457.545 381.64 457.73 381.495 457.881 cv
381.35 458.03 381.162 458.105 380.933 458.105 cv
cp
f
394.537 458.346 mo
393.577 458.346 392.727 458.168 391.987 457.813 cv
391.247 457.458 390.669 456.965 390.254 456.336 cv
389.839 455.705 389.632 454.985 389.632 454.176 cv
389.632 447.17 li
389.632 446.94 389.707 446.753 389.856 446.607 cv
390.007 446.463 390.191 446.391 390.412 446.391 cv
390.642 446.391 390.829 446.463 390.975 446.607 cv
391.119 446.753 391.191 446.94 391.191 447.17 cv
391.191 454.176 li
391.191 454.715 391.334 455.193 391.619 455.607 cv
391.904 456.023 392.299 456.348 392.805 456.583 cv
393.31 456.818 393.887 456.936 394.537 456.936 cv
395.167 456.936 395.725 456.818 396.209 456.583 cv
396.694 456.348 397.074 456.023 397.35 455.607 cv
397.624 455.193 397.762 454.715 397.762 454.176 cv
397.762 447.17 li
397.762 446.94 397.837 446.753 397.987 446.607 cv
398.137 446.463 398.321 446.391 398.542 446.391 cv
398.771 446.391 398.957 446.463 399.097 446.607 cv
399.236 446.753 399.307 446.94 399.307 447.17 cv
399.307 454.176 li
399.307 454.985 399.104 455.705 398.699 456.336 cv
398.294 456.965 397.731 457.458 397.012 457.813 cv
396.292 458.168 395.467 458.346 394.537 458.346 cv
cp
f
406.026 458.256 mo
405.387 458.256 404.776 458.155 404.196 457.955 cv
403.616 457.756 403.111 457.476 402.682 457.115 cv
402.252 456.756 401.937 456.341 401.736 455.871 cv
401.637 455.66 401.639 455.465 401.744 455.285 cv
401.85 455.105 402.026 454.99 402.276 454.94 cv
402.457 454.9 402.634 454.928 402.81 455.023 cv
402.984 455.118 403.116 455.261 403.207 455.451 cv
403.326 455.701 403.524 455.931 403.799 456.141 cv
404.074 456.351 404.406 456.521 404.797 456.65 cv
405.187 456.781 405.597 456.846 406.026 456.846 cv
406.507 456.846 406.949 456.771 407.354 456.621 cv
407.759 456.471 408.087 456.253 408.337 455.968 cv
408.587 455.684 408.712 455.33 408.712 454.91 cv
408.712 454.381 408.504 453.905 408.089 453.485 cv
407.674 453.065 406.991 452.806 406.042 452.705 cv
404.802 452.586 403.826 452.221 403.116 451.61 cv
402.406 451 402.052 450.246 402.052 449.346 cv
402.052 448.686 402.236 448.125 402.606 447.666 cv
402.977 447.205 403.479 446.855 404.114 446.615 cv
404.749 446.375 405.457 446.256 406.236 446.256 cv
406.847 446.256 407.379 446.34 407.834 446.51 cv
408.289 446.681 408.687 446.916 409.026 447.215 cv
409.366 447.516 409.661 447.871 409.912 448.28 cv
410.052 448.5 410.109 448.708 410.084 448.902 cv
410.059 449.098 409.962 449.25 409.792 449.36 cv
409.602 449.48 409.396 449.506 409.177 449.436 cv
408.957 449.365 408.792 449.235 408.682 449.045 cv
408.521 448.756 408.326 448.511 408.097 448.311 cv
407.866 448.11 407.597 447.953 407.287 447.838 cv
406.977 447.723 406.611 447.666 406.191 447.666 cv
405.451 447.656 404.832 447.793 404.332 448.078 cv
403.831 448.363 403.582 448.801 403.582 449.391 cv
403.582 449.69 403.659 449.979 403.814 450.253 cv
403.969 450.528 404.254 450.766 404.669 450.965 cv
405.084 451.166 405.682 451.306 406.462 451.385 cv
407.651 451.506 408.579 451.868 409.244 452.473 cv
409.909 453.078 410.241 453.875 410.241 454.865 cv
410.241 455.436 410.124 455.931 409.889 456.351 cv
409.654 456.771 409.339 457.123 408.944 457.408 cv
408.549 457.693 408.099 457.906 407.594 458.045 cv
407.089 458.186 406.566 458.256 406.026 458.256 cv
cp
f
413.407 458.105 mo
413.187 458.105 413.002 458.03 412.852 457.881 cv
412.702 457.73 412.627 457.545 412.627 457.326 cv
412.627 447.17 li
412.627 446.94 412.702 446.753 412.852 446.607 cv
413.002 446.463 413.187 446.391 413.407 446.391 cv
413.637 446.391 413.824 446.463 413.97 446.607 cv
414.114 446.753 414.187 446.94 414.187 447.17 cv
414.187 451.476 li
421.146 451.476 li
421.146 447.17 li
421.146 446.94 421.222 446.753 421.372 446.607 cv
421.521 446.463 421.707 446.391 421.927 446.391 cv
422.157 446.391 422.342 446.463 422.482 446.607 cv
422.622 446.753 422.692 446.94 422.692 447.17 cv
422.692 457.326 li
422.692 457.545 422.622 457.73 422.482 457.881 cv
422.342 458.03 422.157 458.105 421.927 458.105 cv
421.707 458.105 421.521 458.03 421.372 457.881 cv
421.222 457.73 421.146 457.545 421.146 457.326 cv
421.146 452.855 li
414.187 452.855 li
414.187 457.326 li
414.187 457.545 414.114 457.73 413.97 457.881 cv
413.824 458.03 413.637 458.105 413.407 458.105 cv
cp
f
584.537 456.726 mo
586.473 456.726 li
587.313 456.726 588.055 456.533 588.7 456.148 cv
589.345 455.764 589.853 455.232 590.223 454.559 cv
590.593 453.883 590.777 453.11 590.777 452.24 cv
590.777 451.361 590.593 450.586 590.223 449.916 cv
589.853 449.246 589.345 448.721 588.7 448.34 cv
588.055 447.961 587.313 447.771 586.473 447.771 cv
584.537 447.771 li
584.537 456.726 li
cp
583.758 458.105 mo
583.537 458.105 583.353 458.03 583.202 457.881 cv
583.053 457.73 582.978 457.545 582.978 457.326 cv
582.978 447.17 li
582.978 446.94 583.053 446.753 583.202 446.607 cv
583.353 446.463 583.537 446.391 583.758 446.391 cv
586.473 446.391 li
587.332 446.391 588.115 446.533 588.82 446.818 cv
589.525 447.104 590.138 447.508 590.657 448.033 cv
591.178 448.559 591.577 449.176 591.857 449.885 cv
592.138 450.596 592.277 451.381 592.277 452.24 cv
592.277 453.101 592.138 453.889 591.857 454.604 cv
591.577 455.318 591.178 455.938 590.657 456.463 cv
590.138 456.988 589.525 457.393 588.82 457.678 cv
588.115 457.963 587.332 458.105 586.473 458.105 cv
583.758 458.105 li
cp
f
601.728 458.105 mo
601.588 458.105 601.46 458.076 601.345 458.016 cv
601.23 457.955 601.133 457.86 601.053 457.73 cv
598.353 453.381 li
599.867 452.945 li
602.328 456.905 li
602.508 457.195 602.532 457.468 602.402 457.723 cv
602.272 457.979 602.048 458.105 601.728 458.105 cv
cp
596.282 452.15 mo
598.203 452.15 li
598.662 452.15 599.067 452.063 599.418 451.889 cv
599.768 451.713 600.043 451.468 600.242 451.152 cv
600.442 450.838 600.543 450.48 600.543 450.08 cv
600.543 449.641 600.442 449.25 600.242 448.91 cv
600.043 448.57 599.768 448.306 599.418 448.115 cv
599.067 447.926 598.662 447.83 598.203 447.83 cv
596.282 447.83 li
596.282 452.15 li
cp
595.503 458.105 mo
595.282 458.105 595.098 458.03 594.947 457.881 cv
594.798 457.73 594.723 457.545 594.723 457.326 cv
594.723 447.17 li
594.723 446.94 594.798 446.753 594.947 446.607 cv
595.098 446.463 595.282 446.391 595.503 446.391 cv
598.203 446.391 li
598.953 446.391 599.617 446.548 600.197 446.863 cv
600.777 447.178 601.23 447.611 601.555 448.16 cv
601.88 448.711 602.043 449.351 602.043 450.08 cv
602.043 450.761 601.88 451.365 601.555 451.896 cv
601.23 452.426 600.777 452.84 600.197 453.141 cv
599.617 453.44 598.953 453.59 598.203 453.59 cv
596.282 453.59 li
596.282 457.326 li
596.282 457.545 596.21 457.73 596.065 457.881 cv
595.92 458.03 595.732 458.105 595.503 458.105 cv
cp
f
604.982 458.105 mo
604.762 458.105 604.577 458.03 604.427 457.881 cv
604.277 457.73 604.202 457.545 604.202 457.326 cv
604.202 447.17 li
604.202 446.94 604.277 446.753 604.427 446.607 cv
604.577 446.463 604.762 446.391 604.982 446.391 cv
605.212 446.391 605.399 446.463 605.545 446.607 cv
605.689 446.753 605.762 446.94 605.762 447.17 cv
605.762 457.326 li
605.762 457.545 605.689 457.73 605.545 457.881 cv
605.399 458.03 605.212 458.105 604.982 458.105 cv
cp
f
609.526 458.105 mo
609.307 458.105 609.124 458.03 608.979 457.881 cv
608.834 457.73 608.762 457.545 608.762 457.326 cv
608.762 447.17 li
608.762 446.951 608.837 446.766 608.986 446.615 cv
609.137 446.465 609.316 446.391 609.526 446.391 cv
609.746 446.391 609.932 446.465 610.082 446.615 cv
610.231 446.766 610.307 446.951 610.307 447.17 cv
610.307 456.545 li
615.736 456.545 li
615.957 456.545 616.142 456.621 616.292 456.771 cv
616.441 456.92 616.517 457.105 616.517 457.326 cv
616.517 457.545 616.441 457.73 616.292 457.881 cv
616.142 458.03 615.957 458.105 615.736 458.105 cv
609.526 458.105 li
cp
f
619.156 458.105 mo
618.937 458.105 618.754 458.03 618.609 457.881 cv
618.464 457.73 618.392 457.545 618.392 457.326 cv
618.392 447.17 li
618.392 446.951 618.467 446.766 618.616 446.615 cv
618.767 446.465 618.946 446.391 619.156 446.391 cv
619.376 446.391 619.562 446.465 619.712 446.615 cv
619.861 446.766 619.937 446.951 619.937 447.17 cv
619.937 456.545 li
625.366 456.545 li
625.587 456.545 625.771 456.621 625.922 456.771 cv
626.071 456.92 626.146 457.105 626.146 457.326 cv
626.146 457.545 626.071 457.73 625.922 457.881 cv
625.771 458.03 625.587 458.105 625.366 458.105 cv
619.156 458.105 li
cp
f
788.742 458.105 mo
788.522 458.105 788.337 458.03 788.188 457.881 cv
788.037 457.73 787.962 457.545 787.962 457.326 cv
787.962 446.391 li
789.522 446.391 li
789.522 457.326 li
789.522 457.545 789.447 457.73 789.297 457.881 cv
789.147 458.03 788.962 458.105 788.742 458.105 cv
cp
784.723 447.83 mo
784.513 447.83 784.34 447.764 784.205 447.628 cv
784.07 447.493 784.002 447.32 784.002 447.11 cv
784.002 446.9 784.07 446.729 784.205 446.593 cv
784.34 446.458 784.513 446.391 784.723 446.391 cv
792.747 446.391 li
792.957 446.391 793.13 446.458 793.265 446.593 cv
793.399 446.729 793.468 446.9 793.468 447.11 cv
793.468 447.32 793.399 447.493 793.265 447.628 cv
793.13 447.764 792.957 447.83 792.747 447.83 cv
784.723 447.83 li
cp
f
799.857 456.846 mo
800.507 456.846 801.104 456.729 801.649 456.493 cv
802.194 456.258 802.667 455.934 803.067 455.518 cv
803.467 455.104 803.774 454.615 803.99 454.056 cv
804.205 453.496 804.313 452.891 804.313 452.24 cv
804.313 451.59 804.205 450.986 803.99 450.426 cv
803.774 449.865 803.467 449.378 803.067 448.963 cv
802.667 448.549 802.194 448.226 801.649 447.996 cv
801.104 447.766 800.507 447.65 799.857 447.65 cv
799.207 447.65 798.609 447.766 798.064 447.996 cv
797.52 448.226 797.05 448.549 796.655 448.963 cv
796.26 449.378 795.952 449.865 795.732 450.426 cv
795.513 450.986 795.402 451.59 795.402 452.24 cv
795.402 452.891 795.513 453.496 795.732 454.056 cv
795.952 454.615 796.26 455.104 796.655 455.518 cv
797.05 455.934 797.52 456.258 798.064 456.493 cv
798.609 456.729 799.207 456.846 799.857 456.846 cv
cp
799.857 458.256 mo
798.978 458.256 798.172 458.107 797.442 457.813 cv
796.712 457.518 796.085 457.104 795.56 456.568 cv
795.035 456.033 794.627 455.398 794.337 454.663 cv
794.047 453.928 793.902 453.121 793.902 452.24 cv
793.902 451.361 794.047 450.556 794.337 449.826 cv
794.627 449.096 795.035 448.463 795.56 447.928 cv
796.085 447.393 796.712 446.979 797.442 446.684 cv
798.172 446.389 798.978 446.24 799.857 446.24 cv
800.737 446.24 801.54 446.389 802.265 446.684 cv
802.99 446.979 803.617 447.393 804.147 447.928 cv
804.678 448.463 805.087 449.096 805.377 449.826 cv
805.667 450.556 805.813 451.361 805.813 452.24 cv
805.813 453.121 805.667 453.928 805.377 454.663 cv
805.087 455.398 804.678 456.033 804.147 456.568 cv
803.617 457.104 802.99 457.518 802.265 457.813 cv
801.54 458.107 800.737 458.256 799.857 458.256 cv
cp
f
813.372 456.846 mo
814.021 456.846 814.619 456.729 815.164 456.493 cv
815.709 456.258 816.182 455.934 816.582 455.518 cv
816.981 455.104 817.289 454.615 817.505 454.056 cv
817.72 453.496 817.827 452.891 817.827 452.24 cv
817.827 451.59 817.72 450.986 817.505 450.426 cv
817.289 449.865 816.981 449.378 816.582 448.963 cv
816.182 448.549 815.709 448.226 815.164 447.996 cv
814.619 447.766 814.021 447.65 813.372 447.65 cv
812.722 447.65 812.124 447.766 811.579 447.996 cv
811.034 448.226 810.564 448.549 810.17 448.963 cv
809.774 449.378 809.467 449.865 809.247 450.426 cv
809.027 450.986 808.917 451.59 808.917 452.24 cv
808.917 452.891 809.027 453.496 809.247 454.056 cv
809.467 454.615 809.774 455.104 810.17 455.518 cv
810.564 455.934 811.034 456.258 811.579 456.493 cv
812.124 456.729 812.722 456.846 813.372 456.846 cv
cp
813.372 458.256 mo
812.492 458.256 811.687 458.107 810.957 457.813 cv
810.227 457.518 809.6 457.104 809.074 456.568 cv
808.55 456.033 808.142 455.398 807.852 454.663 cv
807.562 453.928 807.417 453.121 807.417 452.24 cv
807.417 451.361 807.562 450.556 807.852 449.826 cv
808.142 449.096 808.55 448.463 809.074 447.928 cv
809.6 447.393 810.227 446.979 810.957 446.684 cv
811.687 446.389 812.492 446.24 813.372 446.24 cv
814.252 446.24 815.055 446.389 815.779 446.684 cv
816.505 446.979 817.132 447.393 817.662 447.928 cv
818.192 448.463 818.602 449.096 818.892 449.826 cv
819.182 450.556 819.327 451.361 819.327 452.24 cv
819.327 453.121 819.182 453.928 818.892 454.663 cv
818.602 455.398 818.192 456.033 817.662 456.568 cv
817.132 457.104 816.505 457.518 815.779 457.813 cv
815.055 458.107 814.252 458.256 813.372 458.256 cv
cp
f
822.536 458.105 mo
822.316 458.105 822.134 458.03 821.989 457.881 cv
821.844 457.73 821.771 457.545 821.771 457.326 cv
821.771 447.17 li
821.771 446.951 821.847 446.766 821.996 446.615 cv
822.146 446.465 822.326 446.391 822.536 446.391 cv
822.756 446.391 822.941 446.465 823.092 446.615 cv
823.241 446.766 823.316 446.951 823.316 447.17 cv
823.316 456.545 li
828.746 456.545 li
828.967 456.545 829.151 456.621 829.302 456.771 cv
829.451 456.92 829.526 457.105 829.526 457.326 cv
829.526 457.545 829.451 457.73 829.302 457.881 cv
829.151 458.03 828.967 458.105 828.746 458.105 cv
822.536 458.105 li
cp
f
835.121 458.256 mo
834.481 458.256 833.871 458.155 833.291 457.955 cv
832.711 457.756 832.206 457.476 831.776 457.115 cv
831.347 456.756 831.031 456.341 830.831 455.871 cv
830.731 455.66 830.733 455.465 830.839 455.285 cv
830.944 455.105 831.121 454.99 831.371 454.94 cv
831.552 454.9 831.729 454.928 831.904 455.023 cv
832.079 455.118 832.211 455.261 832.302 455.451 cv
832.421 455.701 832.619 455.931 832.894 456.141 cv
833.169 456.351 833.501 456.521 833.892 456.65 cv
834.281 456.781 834.691 456.846 835.121 456.846 cv
835.602 456.846 836.044 456.771 836.449 456.621 cv
836.854 456.471 837.182 456.253 837.432 455.968 cv
837.682 455.684 837.807 455.33 837.807 454.91 cv
837.807 454.381 837.599 453.905 837.184 453.485 cv
836.769 453.065 836.086 452.806 835.137 452.705 cv
833.896 452.586 832.921 452.221 832.211 451.61 cv
831.501 451 831.146 450.246 831.146 449.346 cv
831.146 448.686 831.331 448.125 831.701 447.666 cv
832.071 447.205 832.573 446.855 833.209 446.615 cv
833.844 446.375 834.552 446.256 835.331 446.256 cv
835.941 446.256 836.474 446.34 836.929 446.51 cv
837.384 446.681 837.781 446.916 838.121 447.215 cv
838.461 447.516 838.756 447.871 839.007 448.28 cv
839.146 448.5 839.204 448.708 839.179 448.902 cv
839.153 449.098 839.057 449.25 838.887 449.36 cv
838.696 449.48 838.491 449.506 838.271 449.436 cv
838.052 449.365 837.887 449.235 837.776 449.045 cv
837.616 448.756 837.421 448.511 837.191 448.311 cv
836.961 448.11 836.691 447.953 836.382 447.838 cv
836.071 447.723 835.706 447.666 835.286 447.666 cv
834.546 447.656 833.927 447.793 833.427 448.078 cv
832.926 448.363 832.677 448.801 832.677 449.391 cv
832.677 449.69 832.754 449.979 832.909 450.253 cv
833.063 450.528 833.349 450.766 833.764 450.965 cv
834.179 451.166 834.776 451.306 835.557 451.385 cv
836.746 451.506 837.674 451.868 838.339 452.473 cv
839.004 453.078 839.336 453.875 839.336 454.865 cv
839.336 455.436 839.219 455.931 838.983 456.351 cv
838.749 456.771 838.434 457.123 838.039 457.408 cv
837.644 457.693 837.193 457.906 836.688 458.045 cv
836.184 458.186 835.661 458.256 835.121 458.256 cv
cp
f
134.412 677.432 mo
136.633 677.432 li
137.093 677.432 137.497 677.331 137.848 677.131 cv
138.197 676.932 138.473 676.656 138.673 676.307 cv
138.872 675.956 138.973 675.557 138.973 675.105 cv
138.973 674.626 138.872 674.203 138.673 673.838 cv
138.473 673.474 138.197 673.186 137.848 672.977 cv
137.497 672.766 137.093 672.661 136.633 672.661 cv
134.412 672.661 li
134.412 677.432 li
cp
133.633 682.936 mo
133.412 682.936 133.228 682.861 133.077 682.711 cv
132.928 682.561 132.853 682.376 132.853 682.156 cv
132.853 672.001 li
132.853 671.771 132.928 671.584 133.077 671.438 cv
133.228 671.293 133.412 671.221 133.633 671.221 cv
136.633 671.221 li
137.383 671.221 138.048 671.387 138.628 671.716 cv
139.207 672.046 139.66 672.504 139.985 673.088 cv
140.31 673.674 140.473 674.346 140.473 675.105 cv
140.473 675.836 140.31 676.486 139.985 677.057 cv
139.66 677.626 139.207 678.071 138.628 678.391 cv
138.048 678.711 137.383 678.871 136.633 678.871 cv
134.412 678.871 li
134.412 682.156 li
134.412 682.376 134.34 682.561 134.195 682.711 cv
134.05 682.861 133.862 682.936 133.633 682.936 cv
cp
f
142.077 680.355 mo
142.677 679.066 li
148.557 679.066 li
149.157 680.355 li
142.077 680.355 li
cp
141.282 682.936 mo
141.002 682.936 140.787 682.816 140.637 682.576 cv
140.487 682.336 140.472 682.081 140.592 681.811 cv
144.807 671.746 li
144.957 671.396 145.202 671.221 145.542 671.221 cv
145.902 671.221 146.147 671.396 146.277 671.746 cv
150.507 681.841 li
150.617 682.121 150.6 682.373 150.454 682.599 cv
150.31 682.824 150.092 682.936 149.802 682.936 cv
149.652 682.936 149.51 682.894 149.375 682.809 cv
149.239 682.724 149.142 682.605 149.082 682.456 cv
145.362 673.216 li
145.782 673.216 li
142.002 682.456 li
141.932 682.616 141.829 682.736 141.694 682.816 cv
141.56 682.896 141.422 682.936 141.282 682.936 cv
cp
f
153.072 682.936 mo
152.852 682.936 152.667 682.861 152.517 682.711 cv
152.367 682.561 152.292 682.376 152.292 682.156 cv
152.292 672.001 li
152.292 671.771 152.367 671.584 152.517 671.438 cv
152.667 671.293 152.852 671.221 153.072 671.221 cv
153.302 671.221 153.489 671.293 153.635 671.438 cv
153.779 671.584 153.852 671.771 153.852 672.001 cv
153.852 682.156 li
153.852 682.376 153.779 682.561 153.635 682.711 cv
153.489 682.861 153.302 682.936 153.072 682.936 cv
cp
f
157.616 682.936 mo
157.396 682.936 157.214 682.861 157.069 682.711 cv
156.924 682.561 156.852 682.376 156.852 682.156 cv
156.852 672.001 li
156.852 671.771 156.924 671.584 157.069 671.438 cv
157.214 671.293 157.396 671.221 157.616 671.221 cv
157.856 671.221 158.057 671.316 158.217 671.506 cv
164.757 680.206 li
164.757 672.001 li
164.757 671.771 164.832 671.584 164.981 671.438 cv
165.132 671.293 165.316 671.221 165.536 671.221 cv
165.767 671.221 165.951 671.293 166.092 671.438 cv
166.231 671.584 166.302 671.771 166.302 672.001 cv
166.302 682.156 li
166.302 682.376 166.231 682.561 166.092 682.711 cv
165.951 682.861 165.767 682.936 165.536 682.936 cv
165.437 682.936 165.329 682.914 165.214 682.869 cv
165.099 682.824 165.007 682.756 164.937 682.666 cv
158.396 673.966 li
158.396 682.156 li
158.396 682.376 158.324 682.561 158.179 682.711 cv
158.034 682.861 157.847 682.936 157.616 682.936 cv
cp
f
172.767 682.936 mo
172.547 682.936 172.361 682.861 172.212 682.711 cv
172.062 682.561 171.986 682.376 171.986 682.156 cv
171.986 671.221 li
173.547 671.221 li
173.547 682.156 li
173.547 682.376 173.472 682.561 173.321 682.711 cv
173.172 682.861 172.986 682.936 172.767 682.936 cv
cp
168.747 672.661 mo
168.537 672.661 168.364 672.594 168.229 672.459 cv
168.095 672.324 168.026 672.15 168.026 671.941 cv
168.026 671.73 168.095 671.559 168.229 671.424 cv
168.364 671.289 168.537 671.221 168.747 671.221 cv
176.771 671.221 li
176.981 671.221 177.154 671.289 177.289 671.424 cv
177.424 671.559 177.492 671.73 177.492 671.941 cv
177.492 672.15 177.424 672.324 177.289 672.459 cv
177.154 672.594 176.981 672.661 176.771 672.661 cv
168.747 672.661 li
cp
f
190.616 682.936 mo
190.477 682.936 190.349 682.906 190.233 682.846 cv
190.119 682.786 190.021 682.691 189.941 682.561 cv
187.241 678.211 li
188.756 677.775 li
191.217 681.736 li
191.396 682.026 191.421 682.299 191.291 682.554 cv
191.161 682.809 190.937 682.936 190.616 682.936 cv
cp
185.171 676.98 mo
187.092 676.98 li
187.551 676.98 187.956 676.894 188.307 676.719 cv
188.656 676.543 188.932 676.299 189.131 675.983 cv
189.331 675.668 189.432 675.311 189.432 674.911 cv
189.432 674.471 189.331 674.081 189.131 673.741 cv
188.932 673.401 188.656 673.137 188.307 672.945 cv
187.956 672.756 187.551 672.661 187.092 672.661 cv
185.171 672.661 li
185.171 676.98 li
cp
184.392 682.936 mo
184.171 682.936 183.986 682.861 183.836 682.711 cv
183.687 682.561 183.611 682.376 183.611 682.156 cv
183.611 672.001 li
183.611 671.771 183.687 671.584 183.836 671.438 cv
183.986 671.293 184.171 671.221 184.392 671.221 cv
187.092 671.221 li
187.842 671.221 188.506 671.379 189.086 671.693 cv
189.666 672.008 190.119 672.441 190.443 672.991 cv
190.769 673.541 190.932 674.182 190.932 674.911 cv
190.932 675.592 190.769 676.196 190.443 676.727 cv
190.119 677.256 189.666 677.671 189.086 677.971 cv
188.506 678.271 187.842 678.421 187.092 678.421 cv
185.171 678.421 li
185.171 682.156 li
185.171 682.376 185.099 682.561 184.954 682.711 cv
184.809 682.861 184.621 682.936 184.392 682.936 cv
cp
f
198.506 681.676 mo
199.155 681.676 199.753 681.559 200.298 681.324 cv
200.843 681.089 201.315 680.764 201.716 680.349 cv
202.115 679.934 202.423 679.446 202.639 678.887 cv
202.854 678.326 202.961 677.721 202.961 677.07 cv
202.961 676.421 202.854 675.816 202.639 675.256 cv
202.423 674.696 202.115 674.209 201.716 673.793 cv
201.315 673.379 200.843 673.057 200.298 672.826 cv
199.753 672.596 199.155 672.48 198.506 672.48 cv
197.855 672.48 197.258 672.596 196.713 672.826 cv
196.168 673.057 195.698 673.379 195.304 673.793 cv
194.908 674.209 194.601 674.696 194.381 675.256 cv
194.161 675.816 194.051 676.421 194.051 677.07 cv
194.051 677.721 194.161 678.326 194.381 678.887 cv
194.601 679.446 194.908 679.934 195.304 680.349 cv
195.698 680.764 196.168 681.089 196.713 681.324 cv
197.258 681.559 197.855 681.676 198.506 681.676 cv
cp
198.506 683.086 mo
197.626 683.086 196.82 682.938 196.091 682.644 cv
195.36 682.349 194.733 681.934 194.208 681.398 cv
193.684 680.863 193.275 680.229 192.985 679.494 cv
192.695 678.758 192.551 677.951 192.551 677.07 cv
192.551 676.191 192.695 675.387 192.985 674.656 cv
193.275 673.926 193.684 673.293 194.208 672.758 cv
194.733 672.224 195.36 671.809 196.091 671.514 cv
196.82 671.219 197.626 671.07 198.506 671.07 cv
199.386 671.07 200.188 671.219 200.913 671.514 cv
201.639 671.809 202.266 672.224 202.796 672.758 cv
203.326 673.293 203.735 673.926 204.025 674.656 cv
204.315 675.387 204.461 676.191 204.461 677.07 cv
204.461 677.951 204.315 678.758 204.025 679.494 cv
203.735 680.229 203.326 680.863 202.796 681.398 cv
202.266 681.934 201.639 682.349 200.913 682.644 cv
200.188 682.938 199.386 683.086 198.506 683.086 cv
cp
f
207.67 682.936 mo
207.45 682.936 207.268 682.861 207.123 682.711 cv
206.978 682.561 206.905 682.376 206.905 682.156 cv
206.905 672.001 li
206.905 671.781 206.98 671.596 207.13 671.445 cv
207.28 671.296 207.46 671.221 207.67 671.221 cv
207.89 671.221 208.075 671.296 208.226 671.445 cv
208.375 671.596 208.45 671.781 208.45 672.001 cv
208.45 681.376 li
213.88 681.376 li
214.101 681.376 214.285 681.451 214.436 681.602 cv
214.585 681.751 214.66 681.936 214.66 682.156 cv
214.66 682.376 214.585 682.561 214.436 682.711 cv
214.285 682.861 214.101 682.936 213.88 682.936 cv
207.67 682.936 li
cp
f
217.3 682.936 mo
217.08 682.936 216.897 682.861 216.753 682.711 cv
216.607 682.561 216.535 682.376 216.535 682.156 cv
216.535 672.001 li
216.535 671.781 216.61 671.596 216.76 671.445 cv
216.91 671.296 217.09 671.221 217.3 671.221 cv
217.52 671.221 217.705 671.296 217.855 671.445 cv
218.005 671.596 218.08 671.781 218.08 672.001 cv
218.08 681.376 li
223.51 681.376 li
223.73 681.376 223.915 681.451 224.065 681.602 cv
224.215 681.751 224.29 681.936 224.29 682.156 cv
224.29 682.376 224.215 682.561 224.065 682.711 cv
223.915 682.861 223.73 682.936 223.51 682.936 cv
217.3 682.936 li
cp
f
226.945 682.936 mo
226.725 682.936 226.54 682.861 226.39 682.711 cv
226.24 682.561 226.165 682.376 226.165 682.156 cv
226.165 672.001 li
226.165 671.771 226.24 671.584 226.39 671.438 cv
226.54 671.293 226.725 671.221 226.945 671.221 cv
233.725 671.221 li
233.955 671.221 234.14 671.289 234.28 671.424 cv
234.42 671.559 234.49 671.736 234.49 671.956 cv
234.49 672.166 234.42 672.336 234.28 672.466 cv
234.14 672.596 233.955 672.661 233.725 672.661 cv
227.725 672.661 li
227.725 676.307 li
232.03 676.307 li
232.26 676.307 232.445 676.373 232.585 676.508 cv
232.725 676.644 232.795 676.816 232.795 677.025 cv
232.795 677.236 232.725 677.408 232.585 677.543 cv
232.445 677.679 232.26 677.746 232.03 677.746 cv
227.725 677.746 li
227.725 681.496 li
233.725 681.496 li
233.955 681.496 234.14 681.561 234.28 681.691 cv
234.42 681.821 234.49 681.991 234.49 682.201 cv
234.49 682.421 234.42 682.599 234.28 682.733 cv
234.14 682.869 233.955 682.936 233.725 682.936 cv
226.945 682.936 li
cp
f
243.67 682.936 mo
243.53 682.936 243.402 682.906 243.287 682.846 cv
243.173 682.786 243.075 682.691 242.995 682.561 cv
240.295 678.211 li
241.81 677.775 li
244.271 681.736 li
244.45 682.026 244.475 682.299 244.345 682.554 cv
244.215 682.809 243.99 682.936 243.67 682.936 cv
cp
238.225 676.98 mo
240.146 676.98 li
240.604 676.98 241.01 676.894 241.36 676.719 cv
241.71 676.543 241.985 676.299 242.185 675.983 cv
242.385 675.668 242.485 675.311 242.485 674.911 cv
242.485 674.471 242.385 674.081 242.185 673.741 cv
241.985 673.401 241.71 673.137 241.36 672.945 cv
241.01 672.756 240.604 672.661 240.146 672.661 cv
238.225 672.661 li
238.225 676.98 li
cp
237.445 682.936 mo
237.225 682.936 237.04 682.861 236.89 682.711 cv
236.74 682.561 236.665 682.376 236.665 682.156 cv
236.665 672.001 li
236.665 671.771 236.74 671.584 236.89 671.438 cv
237.04 671.293 237.225 671.221 237.445 671.221 cv
240.146 671.221 li
240.896 671.221 241.56 671.379 242.14 671.693 cv
242.72 672.008 243.173 672.441 243.497 672.991 cv
243.822 673.541 243.985 674.182 243.985 674.911 cv
243.985 675.592 243.822 676.196 243.497 676.727 cv
243.173 677.256 242.72 677.671 242.14 677.971 cv
241.56 678.271 240.896 678.421 240.146 678.421 cv
238.225 678.421 li
238.225 682.156 li
238.225 682.376 238.152 682.561 238.008 682.711 cv
237.862 682.861 237.675 682.936 237.445 682.936 cv
cp
f
384.352 683.086 mo
383.712 683.086 383.102 682.986 382.521 682.786 cv
381.941 682.586 381.437 682.307 381.007 681.945 cv
380.577 681.586 380.262 681.172 380.062 680.701 cv
379.962 680.491 379.964 680.296 380.069 680.116 cv
380.175 679.936 380.352 679.821 380.602 679.771 cv
380.782 679.73 380.959 679.759 381.135 679.854 cv
381.31 679.949 381.441 680.092 381.532 680.281 cv
381.651 680.531 381.85 680.762 382.124 680.971 cv
382.399 681.182 382.731 681.352 383.122 681.48 cv
383.512 681.611 383.922 681.676 384.352 681.676 cv
384.832 681.676 385.274 681.602 385.68 681.451 cv
386.084 681.301 386.412 681.084 386.662 680.799 cv
386.912 680.514 387.037 680.161 387.037 679.741 cv
387.037 679.211 386.829 678.736 386.414 678.316 cv
385.999 677.896 385.316 677.637 384.367 677.536 cv
383.127 677.416 382.151 677.051 381.441 676.441 cv
380.731 675.831 380.377 675.076 380.377 674.176 cv
380.377 673.516 380.562 672.956 380.932 672.496 cv
381.302 672.036 381.804 671.686 382.439 671.445 cv
383.074 671.206 383.782 671.086 384.562 671.086 cv
385.172 671.086 385.704 671.171 386.159 671.341 cv
386.614 671.512 387.012 671.746 387.352 672.046 cv
387.691 672.346 387.986 672.701 388.237 673.111 cv
388.377 673.331 388.435 673.539 388.409 673.733 cv
388.384 673.929 388.287 674.081 388.117 674.191 cv
387.927 674.311 387.722 674.336 387.502 674.266 cv
387.282 674.196 387.117 674.066 387.007 673.876 cv
386.847 673.586 386.651 673.342 386.422 673.141 cv
386.191 672.941 385.922 672.783 385.612 672.668 cv
385.302 672.554 384.937 672.496 384.517 672.496 cv
383.776 672.486 383.157 672.623 382.657 672.908 cv
382.156 673.193 381.907 673.631 381.907 674.221 cv
381.907 674.521 381.984 674.809 382.14 675.084 cv
382.294 675.359 382.579 675.596 382.994 675.796 cv
383.409 675.996 384.007 676.137 384.787 676.216 cv
385.977 676.336 386.904 676.699 387.569 677.304 cv
388.234 677.908 388.566 678.706 388.566 679.695 cv
388.566 680.266 388.449 680.762 388.214 681.182 cv
387.979 681.602 387.664 681.953 387.27 682.238 cv
386.874 682.523 386.424 682.736 385.919 682.876 cv
385.414 683.016 384.892 683.086 384.352 683.086 cv
cp
f
391.281 680.355 mo
391.881 679.066 li
397.761 679.066 li
398.361 680.355 li
391.281 680.355 li
cp
390.486 682.936 mo
390.206 682.936 389.991 682.816 389.841 682.576 cv
389.691 682.336 389.676 682.081 389.796 681.811 cv
394.011 671.746 li
394.161 671.396 394.406 671.221 394.746 671.221 cv
395.106 671.221 395.352 671.396 395.481 671.746 cv
399.711 681.841 li
399.821 682.121 399.804 682.373 399.658 682.599 cv
399.514 682.824 399.296 682.936 399.006 682.936 cv
398.856 682.936 398.714 682.894 398.579 682.809 cv
398.443 682.724 398.346 682.605 398.286 682.456 cv
394.566 673.216 li
394.986 673.216 li
391.206 682.456 li
391.136 682.616 391.033 682.736 390.898 682.816 cv
390.764 682.896 390.626 682.936 390.486 682.936 cv
cp
f
402.786 682.936 mo
402.605 682.936 402.446 682.881 402.306 682.771 cv
402.166 682.661 402.065 682.512 402.006 682.32 cv
398.991 672.301 li
398.891 671.971 398.898 671.709 399.014 671.514 cv
399.128 671.318 399.315 671.221 399.576 671.221 cv
399.746 671.221 399.9 671.269 400.041 671.363 cv
400.181 671.459 400.281 671.605 400.341 671.807 cv
402.966 680.956 li
402.636 680.956 li
405.065 671.896 li
405.105 671.746 405.195 671.621 405.336 671.521 cv
405.476 671.422 405.636 671.371 405.815 671.371 cv
405.976 671.371 406.128 671.414 406.273 671.498 cv
406.418 671.584 406.511 671.711 406.551 671.881 cv
408.996 680.956 li
408.696 680.956 li
411.336 671.73 li
411.436 671.391 411.69 671.221 412.101 671.221 cv
412.381 671.221 412.561 671.328 412.641 671.543 cv
412.721 671.759 412.721 672.012 412.641 672.301 cv
409.626 682.307 li
409.556 682.496 409.453 682.648 409.318 682.764 cv
409.184 682.879 409.026 682.936 408.846 682.936 cv
408.656 682.936 408.493 682.876 408.358 682.756 cv
408.224 682.637 408.126 682.491 408.065 682.32 cv
405.651 672.991 li
406.011 672.991 li
403.565 682.307 li
403.496 682.496 403.394 682.648 403.259 682.764 cv
403.123 682.879 402.966 682.936 402.786 682.936 cv
cp
f
574.442 682.936 mo
574.223 682.936 574.04 682.86 573.896 682.711 cv
573.75 682.561 573.678 682.375 573.678 682.156 cv
573.678 672 li
573.678 671.781 573.753 671.596 573.902 671.445 cv
574.053 671.295 574.232 671.221 574.442 671.221 cv
574.662 671.221 574.848 671.295 574.998 671.445 cv
575.147 671.596 575.223 671.781 575.223 672 cv
575.223 681.375 li
580.652 681.375 li
580.873 681.375 581.058 681.451 581.208 681.601 cv
581.357 681.75 581.433 681.936 581.433 682.156 cv
581.433 682.375 581.357 682.561 581.208 682.711 cv
581.058 682.86 580.873 682.936 580.652 682.936 cv
574.442 682.936 li
cp
f
583.638 680.355 mo
584.237 679.065 li
590.117 679.065 li
590.718 680.355 li
583.638 680.355 li
cp
582.843 682.936 mo
582.563 682.936 582.348 682.815 582.197 682.576 cv
582.048 682.336 582.032 682.08 582.152 681.811 cv
586.367 671.746 li
586.518 671.396 586.763 671.221 587.103 671.221 cv
587.463 671.221 587.708 671.396 587.838 671.746 cv
592.067 681.84 li
592.178 682.121 592.16 682.373 592.015 682.598 cv
591.87 682.823 591.652 682.936 591.362 682.936 cv
591.213 682.936 591.07 682.893 590.936 682.809 cv
590.8 682.723 590.702 682.605 590.643 682.455 cv
586.923 673.215 li
587.343 673.215 li
583.563 682.455 li
583.492 682.615 583.39 682.736 583.255 682.815 cv
583.12 682.896 582.982 682.936 582.843 682.936 cv
cp
f
595.412 681.556 mo
597.348 681.556 li
598.188 681.556 598.93 681.363 599.575 680.979 cv
600.22 680.594 600.728 680.063 601.098 679.389 cv
601.468 678.713 601.652 677.94 601.652 677.07 cv
601.652 676.191 601.468 675.416 601.098 674.746 cv
600.728 674.076 600.22 673.551 599.575 673.17 cv
598.93 672.791 598.188 672.601 597.348 672.601 cv
595.412 672.601 li
595.412 681.556 li
cp
594.633 682.936 mo
594.412 682.936 594.228 682.86 594.077 682.711 cv
593.928 682.561 593.853 682.375 593.853 682.156 cv
593.853 672 li
593.853 671.771 593.928 671.583 594.077 671.438 cv
594.228 671.293 594.412 671.221 594.633 671.221 cv
597.348 671.221 li
598.207 671.221 598.99 671.363 599.695 671.648 cv
600.4 671.934 601.013 672.338 601.532 672.863 cv
602.053 673.389 602.452 674.006 602.732 674.715 cv
603.013 675.426 603.152 676.211 603.152 677.07 cv
603.152 677.931 603.013 678.719 602.732 679.434 cv
602.452 680.148 602.053 680.768 601.532 681.293 cv
601.013 681.818 600.4 682.223 599.695 682.508 cv
598.99 682.793 598.207 682.936 597.348 682.936 cv
594.633 682.936 li
cp
f
607.157 681.556 mo
609.093 681.556 li
609.933 681.556 610.675 681.363 611.32 680.979 cv
611.965 680.594 612.473 680.063 612.843 679.389 cv
613.213 678.713 613.397 677.94 613.397 677.07 cv
613.397 676.191 613.213 675.416 612.843 674.746 cv
612.473 674.076 611.965 673.551 611.32 673.17 cv
610.675 672.791 609.933 672.601 609.093 672.601 cv
607.157 672.601 li
607.157 681.556 li
cp
606.378 682.936 mo
606.157 682.936 605.973 682.86 605.822 682.711 cv
605.673 682.561 605.598 682.375 605.598 682.156 cv
605.598 672 li
605.598 671.771 605.673 671.583 605.822 671.438 cv
605.973 671.293 606.157 671.221 606.378 671.221 cv
609.093 671.221 li
609.952 671.221 610.735 671.363 611.44 671.648 cv
612.146 671.934 612.758 672.338 613.277 672.863 cv
613.798 673.389 614.197 674.006 614.478 674.715 cv
614.758 675.426 614.897 676.211 614.897 677.07 cv
614.897 677.931 614.758 678.719 614.478 679.434 cv
614.197 680.148 613.798 680.768 613.277 681.293 cv
612.758 681.818 612.146 682.223 611.44 682.508 cv
610.735 682.793 609.952 682.936 609.093 682.936 cv
606.378 682.936 li
cp
f
618.123 682.936 mo
617.902 682.936 617.718 682.86 617.567 682.711 cv
617.418 682.561 617.343 682.375 617.343 682.156 cv
617.343 672 li
617.343 671.771 617.418 671.583 617.567 671.438 cv
617.718 671.293 617.902 671.221 618.123 671.221 cv
624.902 671.221 li
625.133 671.221 625.317 671.288 625.458 671.423 cv
625.598 671.559 625.668 671.736 625.668 671.955 cv
625.668 672.166 625.598 672.336 625.458 672.465 cv
625.317 672.596 625.133 672.66 624.902 672.66 cv
618.902 672.66 li
618.902 676.306 li
623.208 676.306 li
623.438 676.306 623.623 676.373 623.763 676.508 cv
623.902 676.643 623.973 676.815 623.973 677.025 cv
623.973 677.235 623.902 677.408 623.763 677.543 cv
623.623 677.678 623.438 677.746 623.208 677.746 cv
618.902 677.746 li
618.902 681.496 li
624.902 681.496 li
625.133 681.496 625.317 681.561 625.458 681.69 cv
625.598 681.82 625.668 681.99 625.668 682.201 cv
625.668 682.42 625.598 682.598 625.458 682.732 cv
625.317 682.868 625.133 682.936 624.902 682.936 cv
618.123 682.936 li
cp
f
634.848 682.936 mo
634.708 682.936 634.58 682.906 634.465 682.846 cv
634.351 682.785 634.253 682.69 634.173 682.561 cv
631.473 678.211 li
632.987 677.775 li
635.448 681.735 li
635.628 682.025 635.652 682.298 635.522 682.553 cv
635.393 682.809 635.168 682.936 634.848 682.936 cv
cp
629.402 676.98 mo
631.323 676.98 li
631.782 676.98 632.188 676.893 632.538 676.719 cv
632.888 676.543 633.163 676.298 633.362 675.982 cv
633.563 675.668 633.663 675.311 633.663 674.91 cv
633.663 674.471 633.563 674.08 633.362 673.74 cv
633.163 673.4 632.888 673.136 632.538 672.945 cv
632.188 672.756 631.782 672.66 631.323 672.66 cv
629.402 672.66 li
629.402 676.98 li
cp
628.623 682.936 mo
628.402 682.936 628.218 682.86 628.067 682.711 cv
627.918 682.561 627.843 682.375 627.843 682.156 cv
627.843 672 li
627.843 671.771 627.918 671.583 628.067 671.438 cv
628.218 671.293 628.402 671.221 628.623 671.221 cv
631.323 671.221 li
632.073 671.221 632.737 671.378 633.317 671.693 cv
633.897 672.008 634.351 672.441 634.675 672.99 cv
635 673.541 635.163 674.181 635.163 674.91 cv
635.163 675.591 635 676.195 634.675 676.726 cv
634.351 677.256 633.897 677.67 633.317 677.971 cv
632.737 678.271 632.073 678.42 631.323 678.42 cv
629.402 678.42 li
629.402 682.156 li
629.402 682.375 629.33 682.561 629.186 682.711 cv
629.04 682.86 628.853 682.936 628.623 682.936 cv
cp
f
780.86 682.936 mo
780.68 682.936 780.521 682.881 780.38 682.771 cv
780.24 682.661 780.14 682.512 780.08 682.32 cv
777.065 672.301 li
776.965 671.971 776.973 671.709 777.088 671.514 cv
777.202 671.318 777.39 671.221 777.65 671.221 cv
777.82 671.221 777.975 671.269 778.115 671.363 cv
778.255 671.459 778.355 671.605 778.415 671.807 cv
781.04 680.956 li
780.71 680.956 li
783.14 671.896 li
783.18 671.746 783.27 671.621 783.41 671.521 cv
783.55 671.422 783.71 671.371 783.89 671.371 cv
784.05 671.371 784.202 671.414 784.348 671.498 cv
784.492 671.584 784.585 671.711 784.625 671.881 cv
787.07 680.956 li
786.771 680.956 li
789.41 671.73 li
789.51 671.391 789.765 671.221 790.175 671.221 cv
790.455 671.221 790.635 671.328 790.715 671.543 cv
790.795 671.759 790.795 672.012 790.715 672.301 cv
787.7 682.307 li
787.63 682.496 787.527 682.648 787.393 682.764 cv
787.258 682.879 787.101 682.936 786.92 682.936 cv
786.73 682.936 786.567 682.876 786.433 682.756 cv
786.298 682.637 786.2 682.491 786.14 682.32 cv
783.726 672.991 li
784.085 672.991 li
781.64 682.307 li
781.57 682.496 781.468 682.648 781.333 682.764 cv
781.197 682.879 781.04 682.936 780.86 682.936 cv
cp
f
793.22 682.936 mo
792.999 682.936 792.814 682.861 792.664 682.711 cv
792.515 682.561 792.439 682.376 792.439 682.156 cv
792.439 672.001 li
792.439 671.771 792.515 671.584 792.664 671.438 cv
792.814 671.293 792.999 671.221 793.22 671.221 cv
793.449 671.221 793.637 671.293 793.782 671.438 cv
793.927 671.584 793.999 671.771 793.999 672.001 cv
793.999 682.156 li
793.999 682.376 793.927 682.561 793.782 682.711 cv
793.637 682.861 793.449 682.936 793.22 682.936 cv
cp
f
797.764 682.936 mo
797.544 682.936 797.361 682.861 797.217 682.711 cv
797.071 682.561 796.999 682.376 796.999 682.156 cv
796.999 672.001 li
796.999 671.771 797.071 671.584 797.217 671.438 cv
797.361 671.293 797.544 671.221 797.764 671.221 cv
798.004 671.221 798.204 671.316 798.364 671.506 cv
804.904 680.206 li
804.904 672.001 li
804.904 671.771 804.979 671.584 805.129 671.438 cv
805.279 671.293 805.464 671.221 805.684 671.221 cv
805.914 671.221 806.099 671.293 806.239 671.438 cv
806.379 671.584 806.449 671.771 806.449 672.001 cv
806.449 682.156 li
806.449 682.376 806.379 682.561 806.239 682.711 cv
806.099 682.861 805.914 682.936 805.684 682.936 cv
805.584 682.936 805.477 682.914 805.361 682.869 cv
805.246 682.824 805.154 682.756 805.084 682.666 cv
798.544 673.966 li
798.544 682.156 li
798.544 682.376 798.472 682.561 798.326 682.711 cv
798.182 682.861 797.994 682.936 797.764 682.936 cv
cp
f
811.009 681.557 mo
812.944 681.557 li
813.784 681.557 814.526 681.363 815.172 680.979 cv
815.816 680.594 816.324 680.063 816.694 679.389 cv
817.064 678.713 817.249 677.941 817.249 677.07 cv
817.249 676.191 817.064 675.416 816.694 674.746 cv
816.324 674.076 815.816 673.551 815.172 673.171 cv
814.526 672.791 813.784 672.602 812.944 672.602 cv
811.009 672.602 li
811.009 681.557 li
cp
810.229 682.936 mo
810.009 682.936 809.824 682.861 809.674 682.711 cv
809.524 682.561 809.449 682.376 809.449 682.156 cv
809.449 672.001 li
809.449 671.771 809.524 671.584 809.674 671.438 cv
809.824 671.293 810.009 671.221 810.229 671.221 cv
812.944 671.221 li
813.804 671.221 814.587 671.363 815.292 671.648 cv
815.997 671.934 816.609 672.338 817.129 672.863 cv
817.649 673.389 818.049 674.006 818.329 674.716 cv
818.609 675.426 818.749 676.211 818.749 677.07 cv
818.749 677.932 818.609 678.719 818.329 679.434 cv
818.049 680.148 817.649 680.769 817.129 681.293 cv
816.609 681.818 815.997 682.224 815.292 682.508 cv
814.587 682.793 813.804 682.936 812.944 682.936 cv
810.229 682.936 li
cp
f
826.31 681.676 mo
826.959 681.676 827.557 681.559 828.102 681.324 cv
828.646 681.089 829.119 680.764 829.52 680.349 cv
829.919 679.934 830.227 679.446 830.442 678.887 cv
830.657 678.326 830.765 677.721 830.765 677.07 cv
830.765 676.421 830.657 675.816 830.442 675.256 cv
830.227 674.696 829.919 674.209 829.52 673.793 cv
829.119 673.379 828.646 673.057 828.102 672.826 cv
827.557 672.596 826.959 672.48 826.31 672.48 cv
825.659 672.48 825.062 672.596 824.517 672.826 cv
823.972 673.057 823.502 673.379 823.107 673.793 cv
822.712 674.209 822.404 674.696 822.185 675.256 cv
821.965 675.816 821.854 676.421 821.854 677.07 cv
821.854 677.721 821.965 678.326 822.185 678.887 cv
822.404 679.446 822.712 679.934 823.107 680.349 cv
823.502 680.764 823.972 681.089 824.517 681.324 cv
825.062 681.559 825.659 681.676 826.31 681.676 cv
cp
826.31 683.086 mo
825.43 683.086 824.624 682.938 823.895 682.644 cv
823.164 682.349 822.537 681.934 822.012 681.398 cv
821.487 680.863 821.079 680.229 820.789 679.494 cv
820.499 678.758 820.354 677.951 820.354 677.07 cv
820.354 676.191 820.499 675.387 820.789 674.656 cv
821.079 673.926 821.487 673.293 822.012 672.758 cv
822.537 672.224 823.164 671.809 823.895 671.514 cv
824.624 671.219 825.43 671.07 826.31 671.07 cv
827.189 671.07 827.992 671.219 828.717 671.514 cv
829.442 671.809 830.069 672.224 830.6 672.758 cv
831.13 673.293 831.539 673.926 831.829 674.656 cv
832.119 675.387 832.265 676.191 832.265 677.07 cv
832.265 677.951 832.119 678.758 831.829 679.494 cv
831.539 680.229 831.13 680.863 830.6 681.398 cv
830.069 681.934 829.442 682.349 828.717 682.644 cv
827.992 682.938 827.189 683.086 826.31 683.086 cv
cp
f
837.049 682.936 mo
836.868 682.936 836.709 682.881 836.568 682.771 cv
836.429 682.661 836.328 682.512 836.269 682.32 cv
833.254 672.301 li
833.153 671.971 833.161 671.709 833.276 671.514 cv
833.391 671.318 833.578 671.221 833.839 671.221 cv
834.009 671.221 834.163 671.269 834.304 671.363 cv
834.443 671.459 834.544 671.605 834.604 671.807 cv
837.229 680.956 li
836.898 680.956 li
839.328 671.896 li
839.368 671.746 839.458 671.621 839.599 671.521 cv
839.738 671.422 839.898 671.371 840.078 671.371 cv
840.238 671.371 840.391 671.414 840.536 671.498 cv
840.681 671.584 840.773 671.711 840.813 671.881 cv
843.259 680.956 li
842.959 680.956 li
845.599 671.73 li
845.698 671.391 845.953 671.221 846.363 671.221 cv
846.644 671.221 846.823 671.328 846.903 671.543 cv
846.983 671.759 846.983 672.012 846.903 672.301 cv
843.889 682.307 li
843.818 682.496 843.716 682.648 843.581 682.764 cv
843.446 682.879 843.289 682.936 843.108 682.936 cv
842.919 682.936 842.756 682.876 842.621 682.756 cv
842.486 682.637 842.389 682.491 842.328 682.32 cv
839.914 672.991 li
840.273 672.991 li
837.828 682.307 li
837.759 682.496 837.656 682.648 837.521 682.764 cv
837.386 682.879 837.229 682.936 837.049 682.936 cv
cp
f
139.071 901.766 mo
138.851 901.766 138.666 901.69 138.516 901.541 cv
138.366 901.391 138.291 901.205 138.291 900.986 cv
138.291 890.83 li
138.291 890.601 138.366 890.413 138.516 890.268 cv
138.666 890.123 138.851 890.051 139.071 890.051 cv
145.851 890.051 li
146.081 890.051 146.266 890.118 146.406 890.253 cv
146.546 890.389 146.616 890.566 146.616 890.785 cv
146.616 890.996 146.546 891.166 146.406 891.295 cv
146.266 891.426 146.081 891.49 145.851 891.49 cv
139.851 891.49 li
139.851 895.136 li
144.156 895.136 li
144.386 895.136 144.571 895.203 144.711 895.338 cv
144.851 895.473 144.921 895.646 144.921 895.855 cv
144.921 896.065 144.851 896.238 144.711 896.373 cv
144.571 896.508 144.386 896.576 144.156 896.576 cv
139.851 896.576 li
139.851 900.326 li
145.851 900.326 li
146.081 900.326 146.266 900.391 146.406 900.521 cv
146.546 900.65 146.616 900.82 146.616 901.031 cv
146.616 901.25 146.546 901.428 146.406 901.563 cv
146.266 901.698 146.081 901.766 145.851 901.766 cv
139.071 901.766 li
cp
f
149.556 901.766 mo
149.336 901.766 149.153 901.69 149.009 901.541 cv
148.863 901.391 148.791 901.205 148.791 900.986 cv
148.791 890.83 li
148.791 890.611 148.866 890.426 149.016 890.275 cv
149.166 890.125 149.346 890.051 149.556 890.051 cv
149.775 890.051 149.961 890.125 150.111 890.275 cv
150.261 890.426 150.336 890.611 150.336 890.83 cv
150.336 900.205 li
155.766 900.205 li
155.986 900.205 156.171 900.281 156.321 900.431 cv
156.471 900.58 156.546 900.766 156.546 900.986 cv
156.546 901.205 156.471 901.391 156.321 901.541 cv
156.171 901.69 155.986 901.766 155.766 901.766 cv
149.556 901.766 li
cp
f
159.201 901.766 mo
158.98 901.766 158.796 901.69 158.646 901.541 cv
158.496 901.391 158.421 901.205 158.421 900.986 cv
158.421 890.83 li
158.421 890.601 158.496 890.413 158.646 890.268 cv
158.796 890.123 158.98 890.051 159.201 890.051 cv
165.98 890.051 li
166.211 890.051 166.396 890.118 166.536 890.253 cv
166.676 890.389 166.746 890.566 166.746 890.785 cv
166.746 890.996 166.676 891.166 166.536 891.295 cv
166.396 891.426 166.211 891.49 165.98 891.49 cv
159.98 891.49 li
159.98 895.136 li
164.286 895.136 li
164.516 895.136 164.701 895.203 164.841 895.338 cv
164.98 895.473 165.051 895.646 165.051 895.855 cv
165.051 896.065 164.98 896.238 164.841 896.373 cv
164.701 896.508 164.516 896.576 164.286 896.576 cv
159.98 896.576 li
159.98 900.326 li
165.98 900.326 li
166.211 900.326 166.396 900.391 166.536 900.521 cv
166.676 900.65 166.746 900.82 166.746 901.031 cv
166.746 901.25 166.676 901.428 166.536 901.563 cv
166.396 901.698 166.211 901.766 165.98 901.766 cv
159.201 901.766 li
cp
f
174.171 901.916 mo
173.361 901.916 172.604 901.764 171.898 901.458 cv
171.193 901.153 170.578 900.729 170.054 900.184 cv
169.528 899.639 169.118 899 168.823 898.271 cv
168.528 897.541 168.381 896.75 168.381 895.9 cv
168.381 895.061 168.528 894.278 168.823 893.553 cv
169.118 892.828 169.528 892.193 170.054 891.648 cv
170.578 891.104 171.19 890.676 171.891 890.365 cv
172.591 890.056 173.351 889.9 174.171 889.9 cv
174.94 889.9 175.604 890 176.158 890.201 cv
176.714 890.4 177.271 890.73 177.831 891.19 cv
177.911 891.25 177.974 891.313 178.019 891.378 cv
178.063 891.443 178.094 891.508 178.108 891.573 cv
178.123 891.639 178.131 891.716 178.131 891.806 cv
178.131 891.996 178.063 892.153 177.929 892.278 cv
177.793 892.403 177.631 892.473 177.44 892.488 cv
177.251 892.503 177.065 892.441 176.886 892.301 cv
176.516 891.98 176.134 891.736 175.738 891.565 cv
175.343 891.396 174.821 891.311 174.171 891.311 cv
173.581 891.311 173.025 891.431 172.506 891.67 cv
171.985 891.91 171.528 892.24 171.134 892.66 cv
170.738 893.08 170.431 893.568 170.211 894.123 cv
169.991 894.678 169.881 895.271 169.881 895.9 cv
169.881 896.541 169.991 897.139 170.211 897.693 cv
170.431 898.248 170.738 898.736 171.134 899.156 cv
171.528 899.576 171.985 899.903 172.506 900.139 cv
173.025 900.373 173.581 900.49 174.171 900.49 cv
174.681 900.49 175.163 900.403 175.618 900.229 cv
176.073 900.053 176.511 899.811 176.931 899.5 cv
177.111 899.371 177.288 899.313 177.464 899.328 cv
177.639 899.344 177.786 899.413 177.906 899.538 cv
178.026 899.663 178.086 899.836 178.086 900.056 cv
178.086 900.156 178.065 900.254 178.026 900.348 cv
177.985 900.443 177.926 900.531 177.846 900.611 cv
177.306 901.041 176.729 901.365 176.113 901.586 cv
175.498 901.806 174.851 901.916 174.171 901.916 cv
cp
f
184.041 901.766 mo
183.821 901.766 183.636 901.69 183.486 901.541 cv
183.336 901.391 183.261 901.205 183.261 900.986 cv
183.261 890.051 li
184.821 890.051 li
184.821 900.986 li
184.821 901.205 184.746 901.391 184.596 901.541 cv
184.446 901.69 184.261 901.766 184.041 901.766 cv
cp
180.021 891.49 mo
179.812 891.49 179.639 891.424 179.504 891.288 cv
179.369 891.153 179.301 890.98 179.301 890.771 cv
179.301 890.561 179.369 890.389 179.504 890.253 cv
179.639 890.118 179.812 890.051 180.021 890.051 cv
188.046 890.051 li
188.256 890.051 188.429 890.118 188.563 890.253 cv
188.698 890.389 188.767 890.561 188.767 890.771 cv
188.767 890.98 188.698 891.153 188.563 891.288 cv
188.429 891.424 188.256 891.49 188.046 891.49 cv
180.021 891.49 li
cp
f
197.496 901.766 mo
197.356 901.766 197.229 901.736 197.113 901.676 cv
196.999 901.615 196.901 901.521 196.821 901.391 cv
194.121 897.041 li
195.636 896.605 li
198.097 900.565 li
198.276 900.855 198.301 901.128 198.171 901.383 cv
198.041 901.639 197.816 901.766 197.496 901.766 cv
cp
192.051 895.811 mo
193.972 895.811 li
194.431 895.811 194.836 895.723 195.187 895.549 cv
195.536 895.373 195.812 895.128 196.011 894.813 cv
196.211 894.498 196.312 894.141 196.312 893.74 cv
196.312 893.301 196.211 892.91 196.011 892.57 cv
195.812 892.23 195.536 891.966 195.187 891.775 cv
194.836 891.586 194.431 891.49 193.972 891.49 cv
192.051 891.49 li
192.051 895.811 li
cp
191.271 901.766 mo
191.051 901.766 190.866 901.69 190.716 901.541 cv
190.566 901.391 190.491 901.205 190.491 900.986 cv
190.491 890.83 li
190.491 890.601 190.566 890.413 190.716 890.268 cv
190.866 890.123 191.051 890.051 191.271 890.051 cv
193.972 890.051 li
194.722 890.051 195.386 890.208 195.966 890.523 cv
196.546 890.838 196.999 891.271 197.323 891.82 cv
197.648 892.371 197.812 893.011 197.812 893.74 cv
197.812 894.421 197.648 895.025 197.323 895.556 cv
196.999 896.086 196.546 896.5 195.966 896.801 cv
195.386 897.101 194.722 897.25 193.972 897.25 cv
192.051 897.25 li
192.051 900.986 li
192.051 901.205 191.979 901.391 191.834 901.541 cv
191.688 901.69 191.501 901.766 191.271 901.766 cv
cp
f
200.751 901.766 mo
200.53 901.766 200.346 901.69 200.195 901.541 cv
200.046 901.391 199.971 901.205 199.971 900.986 cv
199.971 890.83 li
199.971 890.601 200.046 890.413 200.195 890.268 cv
200.346 890.123 200.53 890.051 200.751 890.051 cv
200.98 890.051 201.168 890.123 201.313 890.268 cv
201.458 890.413 201.53 890.601 201.53 890.83 cv
201.53 900.986 li
201.53 901.205 201.458 901.391 201.313 901.541 cv
201.168 901.69 200.98 901.766 200.751 901.766 cv
cp
f
209.78 901.916 mo
208.971 901.916 208.213 901.764 207.508 901.458 cv
206.803 901.153 206.188 900.729 205.663 900.184 cv
205.138 899.639 204.728 899 204.433 898.271 cv
204.138 897.541 203.99 896.75 203.99 895.9 cv
203.99 895.061 204.138 894.278 204.433 893.553 cv
204.728 892.828 205.138 892.193 205.663 891.648 cv
206.188 891.104 206.8 890.676 207.5 890.365 cv
208.2 890.056 208.96 889.9 209.78 889.9 cv
210.55 889.9 211.213 890 211.768 890.201 cv
212.323 890.4 212.88 890.73 213.44 891.19 cv
213.521 891.25 213.583 891.313 213.628 891.378 cv
213.673 891.443 213.703 891.508 213.718 891.573 cv
213.732 891.639 213.74 891.716 213.74 891.806 cv
213.74 891.996 213.673 892.153 213.538 892.278 cv
213.402 892.403 213.24 892.473 213.05 892.488 cv
212.86 892.503 212.675 892.441 212.495 892.301 cv
212.125 891.98 211.743 891.736 211.348 891.565 cv
210.952 891.396 210.431 891.311 209.78 891.311 cv
209.19 891.311 208.635 891.431 208.115 891.67 cv
207.595 891.91 207.138 892.24 206.743 892.66 cv
206.348 893.08 206.04 893.568 205.82 894.123 cv
205.601 894.678 205.49 895.271 205.49 895.9 cv
205.49 896.541 205.601 897.139 205.82 897.693 cv
206.04 898.248 206.348 898.736 206.743 899.156 cv
207.138 899.576 207.595 899.903 208.115 900.139 cv
208.635 900.373 209.19 900.49 209.78 900.49 cv
210.29 900.49 210.772 900.403 211.228 900.229 cv
211.683 900.053 212.12 899.811 212.54 899.5 cv
212.721 899.371 212.897 899.313 213.073 899.328 cv
213.248 899.344 213.396 899.413 213.516 899.538 cv
213.636 899.663 213.695 899.836 213.695 900.056 cv
213.695 900.156 213.675 900.254 213.636 900.348 cv
213.595 900.443 213.535 900.531 213.455 900.611 cv
212.915 901.041 212.338 901.365 211.723 901.586 cv
211.107 901.806 210.46 901.916 209.78 901.916 cv
cp
f
216.966 901.766 mo
216.745 901.766 216.561 901.69 216.41 901.541 cv
216.261 901.391 216.186 901.205 216.186 900.986 cv
216.186 890.83 li
216.186 890.601 216.261 890.413 216.41 890.268 cv
216.561 890.123 216.745 890.051 216.966 890.051 cv
217.195 890.051 217.383 890.123 217.528 890.268 cv
217.673 890.413 217.745 890.601 217.745 890.83 cv
217.745 900.986 li
217.745 901.205 217.673 901.391 217.528 901.541 cv
217.383 901.69 217.195 901.766 216.966 901.766 cv
cp
f
224.21 901.766 mo
223.99 901.766 223.805 901.69 223.655 901.541 cv
223.505 901.391 223.43 901.205 223.43 900.986 cv
223.43 890.051 li
224.99 890.051 li
224.99 900.986 li
224.99 901.205 224.915 901.391 224.765 901.541 cv
224.615 901.69 224.43 901.766 224.21 901.766 cv
cp
220.19 891.49 mo
219.98 891.49 219.808 891.424 219.673 891.288 cv
219.538 891.153 219.47 890.98 219.47 890.771 cv
219.47 890.561 219.538 890.389 219.673 890.253 cv
219.808 890.118 219.98 890.051 220.19 890.051 cv
228.215 890.051 li
228.425 890.051 228.598 890.118 228.732 890.253 cv
228.867 890.389 228.936 890.561 228.936 890.771 cv
228.936 890.98 228.867 891.153 228.732 891.288 cv
228.598 891.424 228.425 891.49 228.215 891.49 cv
220.19 891.49 li
cp
f
234.17 901.766 mo
233.96 901.766 233.78 901.69 233.63 901.541 cv
233.48 901.391 233.405 901.205 233.405 900.986 cv
233.405 897.49 li
229.4 891.266 li
229.271 891.056 229.22 890.858 229.25 890.674 cv
229.28 890.488 229.367 890.338 229.513 890.223 cv
229.657 890.108 229.825 890.051 230.016 890.051 cv
230.186 890.051 230.32 890.088 230.42 890.163 cv
230.52 890.238 230.615 890.346 230.705 890.486 cv
234.516 896.531 li
233.915 896.531 li
237.785 890.426 li
237.865 890.306 237.96 890.213 238.07 890.148 cv
238.18 890.083 238.315 890.051 238.476 890.051 cv
238.655 890.051 238.805 890.113 238.925 890.238 cv
239.045 890.363 239.115 890.518 239.135 890.703 cv
239.155 890.889 239.105 891.076 238.985 891.266 cv
234.95 897.49 li
234.95 900.986 li
234.95 901.205 234.875 901.391 234.726 901.541 cv
234.575 901.69 234.39 901.766 234.17 901.766 cv
cp
f
350.856 900.386 mo
352.792 900.386 li
353.632 900.386 354.374 900.193 355.02 899.809 cv
355.664 899.424 356.172 898.893 356.542 898.219 cv
356.912 897.543 357.097 896.771 357.097 895.9 cv
357.097 895.021 356.912 894.246 356.542 893.576 cv
356.172 892.906 355.664 892.381 355.02 892 cv
354.374 891.621 353.632 891.431 352.792 891.431 cv
350.856 891.431 li
350.856 900.386 li
cp
350.077 901.766 mo
349.856 901.766 349.672 901.69 349.521 901.541 cv
349.372 901.391 349.297 901.205 349.297 900.986 cv
349.297 890.83 li
349.297 890.601 349.372 890.413 349.521 890.268 cv
349.672 890.123 349.856 890.051 350.077 890.051 cv
352.792 890.051 li
353.651 890.051 354.435 890.193 355.14 890.479 cv
355.845 890.764 356.457 891.168 356.977 891.693 cv
357.497 892.219 357.896 892.836 358.177 893.545 cv
358.457 894.256 358.597 895.041 358.597 895.9 cv
358.597 896.761 358.457 897.549 358.177 898.264 cv
357.896 898.979 357.497 899.598 356.977 900.123 cv
356.457 900.648 355.845 901.053 355.14 901.338 cv
354.435 901.623 353.651 901.766 352.792 901.766 cv
350.077 901.766 li
cp
f
366.157 900.506 mo
366.807 900.506 367.404 900.389 367.949 900.153 cv
368.494 899.918 368.967 899.594 369.367 899.178 cv
369.767 898.764 370.074 898.275 370.29 897.716 cv
370.505 897.156 370.612 896.551 370.612 895.9 cv
370.612 895.25 370.505 894.646 370.29 894.086 cv
370.074 893.525 369.767 893.038 369.367 892.623 cv
368.967 892.209 368.494 891.886 367.949 891.656 cv
367.404 891.426 366.807 891.311 366.157 891.311 cv
365.507 891.311 364.909 891.426 364.364 891.656 cv
363.819 891.886 363.35 892.209 362.955 892.623 cv
362.56 893.038 362.252 893.525 362.032 894.086 cv
361.813 894.646 361.702 895.25 361.702 895.9 cv
361.702 896.551 361.813 897.156 362.032 897.716 cv
362.252 898.275 362.56 898.764 362.955 899.178 cv
363.35 899.594 363.819 899.918 364.364 900.153 cv
364.909 900.389 365.507 900.506 366.157 900.506 cv
cp
366.157 901.916 mo
365.277 901.916 364.472 901.768 363.742 901.473 cv
363.012 901.178 362.385 900.764 361.859 900.229 cv
361.335 899.693 360.927 899.059 360.637 898.323 cv
360.347 897.588 360.202 896.781 360.202 895.9 cv
360.202 895.021 360.347 894.216 360.637 893.486 cv
360.927 892.756 361.335 892.123 361.859 891.588 cv
362.385 891.053 363.012 890.639 363.742 890.344 cv
364.472 890.049 365.277 889.9 366.157 889.9 cv
367.037 889.9 367.84 890.049 368.564 890.344 cv
369.29 890.639 369.917 891.053 370.447 891.588 cv
370.978 892.123 371.387 892.756 371.677 893.486 cv
371.967 894.216 372.112 895.021 372.112 895.9 cv
372.112 896.781 371.967 897.588 371.677 898.323 cv
371.387 899.059 370.978 899.693 370.447 900.229 cv
369.917 900.764 369.29 901.178 368.564 901.473 cv
367.84 901.768 367.037 901.916 366.157 901.916 cv
cp
f
379.672 900.506 mo
380.321 900.506 380.919 900.389 381.464 900.153 cv
382.009 899.918 382.481 899.594 382.882 899.178 cv
383.281 898.764 383.589 898.275 383.805 897.716 cv
384.02 897.156 384.127 896.551 384.127 895.9 cv
384.127 895.25 384.02 894.646 383.805 894.086 cv
383.589 893.525 383.281 893.038 382.882 892.623 cv
382.481 892.209 382.009 891.886 381.464 891.656 cv
380.919 891.426 380.321 891.311 379.672 891.311 cv
379.021 891.311 378.424 891.426 377.879 891.656 cv
377.334 891.886 376.864 892.209 376.47 892.623 cv
376.074 893.038 375.767 893.525 375.547 894.086 cv
375.327 894.646 375.217 895.25 375.217 895.9 cv
375.217 896.551 375.327 897.156 375.547 897.716 cv
375.767 898.275 376.074 898.764 376.47 899.178 cv
376.864 899.594 377.334 899.918 377.879 900.153 cv
378.424 900.389 379.021 900.506 379.672 900.506 cv
cp
379.672 901.916 mo
378.792 901.916 377.986 901.768 377.257 901.473 cv
376.526 901.178 375.899 900.764 375.374 900.229 cv
374.85 899.693 374.441 899.059 374.151 898.323 cv
373.861 897.588 373.717 896.781 373.717 895.9 cv
373.717 895.021 373.861 894.216 374.151 893.486 cv
374.441 892.756 374.85 892.123 375.374 891.588 cv
375.899 891.053 376.526 890.639 377.257 890.344 cv
377.986 890.049 378.792 889.9 379.672 889.9 cv
380.552 889.9 381.354 890.049 382.079 890.344 cv
382.805 890.639 383.432 891.053 383.962 891.588 cv
384.492 892.123 384.901 892.756 385.191 893.486 cv
385.481 894.216 385.627 895.021 385.627 895.9 cv
385.627 896.781 385.481 897.588 385.191 898.323 cv
384.901 899.059 384.492 899.693 383.962 900.229 cv
383.432 900.764 382.805 901.178 382.079 901.473 cv
381.354 901.768 380.552 901.916 379.672 901.916 cv
cp
f
395.076 901.766 mo
394.937 901.766 394.809 901.736 394.693 901.676 cv
394.579 901.615 394.481 901.521 394.401 901.391 cv
391.701 897.041 li
393.216 896.605 li
395.677 900.565 li
395.856 900.855 395.881 901.128 395.751 901.383 cv
395.621 901.639 395.396 901.766 395.076 901.766 cv
cp
389.631 895.811 mo
391.552 895.811 li
392.011 895.811 392.416 895.723 392.767 895.549 cv
393.116 895.373 393.392 895.128 393.591 894.813 cv
393.791 894.498 393.892 894.141 393.892 893.74 cv
393.892 893.301 393.791 892.91 393.591 892.57 cv
393.392 892.23 393.116 891.966 392.767 891.775 cv
392.416 891.586 392.011 891.49 391.552 891.49 cv
389.631 891.49 li
389.631 895.811 li
cp
388.852 901.766 mo
388.631 901.766 388.446 901.69 388.296 901.541 cv
388.146 901.391 388.071 901.205 388.071 900.986 cv
388.071 890.83 li
388.071 890.601 388.146 890.413 388.296 890.268 cv
388.446 890.123 388.631 890.051 388.852 890.051 cv
391.552 890.051 li
392.302 890.051 392.966 890.208 393.546 890.523 cv
394.126 890.838 394.579 891.271 394.903 891.82 cv
395.229 892.371 395.392 893.011 395.392 893.74 cv
395.392 894.421 395.229 895.025 394.903 895.556 cv
394.579 896.086 394.126 896.5 393.546 896.801 cv
392.966 897.101 392.302 897.25 391.552 897.25 cv
389.631 897.25 li
389.631 900.986 li
389.631 901.205 389.559 901.391 389.414 901.541 cv
389.269 901.69 389.081 901.766 388.852 901.766 cv
cp
f
402.71 901.766 mo
402.49 901.766 402.308 901.69 402.163 901.541 cv
402.018 901.391 401.945 901.205 401.945 900.986 cv
401.945 890.83 li
401.945 890.611 402.021 890.426 402.17 890.275 cv
402.32 890.125 402.5 890.051 402.71 890.051 cv
402.93 890.051 403.115 890.125 403.266 890.275 cv
403.415 890.426 403.49 890.611 403.49 890.83 cv
403.49 900.205 li
408.92 900.205 li
409.141 900.205 409.325 900.281 409.476 900.431 cv
409.625 900.58 409.7 900.766 409.7 900.986 cv
409.7 901.205 409.625 901.391 409.476 901.541 cv
409.325 901.69 409.141 901.766 408.92 901.766 cv
402.71 901.766 li
cp
f
415.94 900.506 mo
416.59 900.506 417.188 900.389 417.732 900.153 cv
418.277 899.918 418.75 899.594 419.15 899.178 cv
419.55 898.764 419.857 898.275 420.073 897.716 cv
420.288 897.156 420.396 896.551 420.396 895.9 cv
420.396 895.25 420.288 894.646 420.073 894.086 cv
419.857 893.525 419.55 893.038 419.15 892.623 cv
418.75 892.209 418.277 891.886 417.732 891.656 cv
417.188 891.426 416.59 891.311 415.94 891.311 cv
415.29 891.311 414.692 891.426 414.147 891.656 cv
413.603 891.886 413.133 892.209 412.738 892.623 cv
412.343 893.038 412.035 893.525 411.815 894.086 cv
411.596 894.646 411.485 895.25 411.485 895.9 cv
411.485 896.551 411.596 897.156 411.815 897.716 cv
412.035 898.275 412.343 898.764 412.738 899.178 cv
413.133 899.594 413.603 899.918 414.147 900.153 cv
414.692 900.389 415.29 900.506 415.94 900.506 cv
cp
415.94 901.916 mo
415.061 901.916 414.255 901.768 413.525 901.473 cv
412.795 901.178 412.168 900.764 411.643 900.229 cv
411.118 899.693 410.71 899.059 410.42 898.323 cv
410.13 897.588 409.985 896.781 409.985 895.9 cv
409.985 895.021 410.13 894.216 410.42 893.486 cv
410.71 892.756 411.118 892.123 411.643 891.588 cv
412.168 891.053 412.795 890.639 413.525 890.344 cv
414.255 890.049 415.061 889.9 415.94 889.9 cv
416.82 889.9 417.623 890.049 418.348 890.344 cv
419.073 890.639 419.7 891.053 420.23 891.588 cv
420.761 892.123 421.17 892.756 421.46 893.486 cv
421.75 894.216 421.896 895.021 421.896 895.9 cv
421.896 896.781 421.75 897.588 421.46 898.323 cv
421.17 899.059 420.761 899.693 420.23 900.229 cv
419.7 900.764 419.073 901.178 418.348 901.473 cv
417.623 901.768 416.82 901.916 415.94 901.916 cv
cp
f
429.29 901.916 mo
428.48 901.916 427.723 901.764 427.018 901.458 cv
426.313 901.153 425.697 900.729 425.173 900.184 cv
424.647 899.639 424.237 899 423.942 898.271 cv
423.647 897.541 423.5 896.75 423.5 895.9 cv
423.5 895.061 423.647 894.278 423.942 893.553 cv
424.237 892.828 424.647 892.193 425.173 891.648 cv
425.697 891.104 426.31 890.676 427.01 890.365 cv
427.71 890.056 428.47 889.9 429.29 889.9 cv
430.06 889.9 430.723 890 431.277 890.201 cv
431.833 890.4 432.39 890.73 432.95 891.19 cv
433.03 891.25 433.093 891.313 433.138 891.378 cv
433.183 891.443 433.213 891.508 433.228 891.573 cv
433.242 891.639 433.25 891.716 433.25 891.806 cv
433.25 891.996 433.183 892.153 433.048 892.278 cv
432.912 892.403 432.75 892.473 432.56 892.488 cv
432.37 892.503 432.185 892.441 432.005 892.301 cv
431.635 891.98 431.253 891.736 430.857 891.565 cv
430.462 891.396 429.94 891.311 429.29 891.311 cv
428.7 891.311 428.145 891.431 427.625 891.67 cv
427.104 891.91 426.647 892.24 426.253 892.66 cv
425.857 893.08 425.55 893.568 425.33 894.123 cv
425.11 894.678 425 895.271 425 895.9 cv
425 896.541 425.11 897.139 425.33 897.693 cv
425.55 898.248 425.857 898.736 426.253 899.156 cv
426.647 899.576 427.104 899.903 427.625 900.139 cv
428.145 900.373 428.7 900.49 429.29 900.49 cv
429.8 900.49 430.282 900.403 430.737 900.229 cv
431.192 900.053 431.63 899.811 432.05 899.5 cv
432.23 899.371 432.407 899.313 432.583 899.328 cv
432.758 899.344 432.905 899.413 433.025 899.538 cv
433.146 899.663 433.205 899.836 433.205 900.056 cv
433.205 900.156 433.185 900.254 433.146 900.348 cv
433.104 900.443 433.045 900.531 432.965 900.611 cv
432.425 901.041 431.848 901.365 431.232 901.586 cv
430.617 901.806 429.97 901.916 429.29 901.916 cv
cp
f
436.476 901.766 mo
436.266 901.766 436.083 901.69 435.928 901.541 cv
435.772 901.391 435.695 901.205 435.695 900.986 cv
435.695 890.83 li
435.695 890.611 435.772 890.426 435.928 890.275 cv
436.083 890.125 436.266 890.051 436.476 890.051 cv
436.695 890.051 436.88 890.125 437.03 890.275 cv
437.181 890.426 437.255 890.611 437.255 890.83 cv
437.255 895.33 li
442.221 890.365 li
442.34 890.246 442.45 890.163 442.551 890.118 cv
442.65 890.073 442.755 890.051 442.865 890.051 cv
443.115 890.051 443.295 890.125 443.405 890.275 cv
443.516 890.426 443.556 890.604 443.525 890.809 cv
443.495 891.014 443.4 891.201 443.24 891.371 cv
439.415 895.211 li
443.315 900.521 li
443.436 900.691 443.485 900.873 443.465 901.068 cv
443.445 901.264 443.375 901.428 443.255 901.563 cv
443.136 901.698 442.976 901.766 442.775 901.766 cv
442.495 901.766 442.28 901.656 442.13 901.436 cv
438.335 896.291 li
437.255 897.371 li
437.255 900.986 li
437.255 901.205 437.181 901.391 437.03 901.541 cv
436.88 901.69 436.695 901.766 436.476 901.766 cv
cp
f
564.115 896.261 mo
566.336 896.261 li
566.796 896.261 567.2 896.16 567.551 895.961 cv
567.9 895.761 568.176 895.486 568.376 895.136 cv
568.575 894.785 568.676 894.386 568.676 893.936 cv
568.676 893.455 568.575 893.033 568.376 892.668 cv
568.176 892.303 567.9 892.016 567.551 891.806 cv
567.2 891.596 566.796 891.49 566.336 891.49 cv
564.115 891.49 li
564.115 896.261 li
cp
563.336 901.766 mo
563.115 901.766 562.931 901.69 562.78 901.541 cv
562.631 901.391 562.556 901.205 562.556 900.986 cv
562.556 890.83 li
562.556 890.601 562.631 890.413 562.78 890.268 cv
562.931 890.123 563.115 890.051 563.336 890.051 cv
566.336 890.051 li
567.086 890.051 567.751 890.216 568.331 890.545 cv
568.91 890.875 569.363 891.333 569.688 891.918 cv
570.013 892.503 570.176 893.176 570.176 893.936 cv
570.176 894.666 570.013 895.315 569.688 895.886 cv
569.363 896.455 568.91 896.9 568.331 897.221 cv
567.751 897.541 567.086 897.701 566.336 897.701 cv
564.115 897.701 li
564.115 900.986 li
564.115 901.205 564.043 901.391 563.898 901.541 cv
563.753 901.69 563.565 901.766 563.336 901.766 cv
cp
f
572.665 901.766 mo
572.445 901.766 572.263 901.69 572.118 901.541 cv
571.973 901.391 571.9 901.205 571.9 900.986 cv
571.9 890.83 li
571.9 890.611 571.976 890.426 572.125 890.275 cv
572.275 890.125 572.455 890.051 572.665 890.051 cv
572.885 890.051 573.07 890.125 573.221 890.275 cv
573.37 890.426 573.445 890.611 573.445 890.83 cv
573.445 900.205 li
578.875 900.205 li
579.096 900.205 579.28 900.281 579.431 900.431 cv
579.58 900.58 579.655 900.766 579.655 900.986 cv
579.655 901.205 579.58 901.391 579.431 901.541 cv
579.28 901.69 579.096 901.766 578.875 901.766 cv
572.665 901.766 li
cp
f
586.436 902.006 mo
585.476 902.006 584.625 901.828 583.886 901.473 cv
583.146 901.118 582.567 900.625 582.152 899.996 cv
581.737 899.365 581.53 898.646 581.53 897.836 cv
581.53 890.83 li
581.53 890.601 581.605 890.413 581.755 890.268 cv
581.905 890.123 582.09 890.051 582.311 890.051 cv
582.54 890.051 582.728 890.123 582.873 890.268 cv
583.018 890.413 583.09 890.601 583.09 890.83 cv
583.09 897.836 li
583.09 898.375 583.232 898.854 583.518 899.268 cv
583.803 899.684 584.197 900.008 584.703 900.243 cv
585.208 900.479 585.785 900.596 586.436 900.596 cv
587.065 900.596 587.623 900.479 588.107 900.243 cv
588.593 900.008 588.973 899.684 589.248 899.268 cv
589.522 898.854 589.66 898.375 589.66 897.836 cv
589.66 890.83 li
589.66 890.601 589.735 890.413 589.886 890.268 cv
590.035 890.123 590.22 890.051 590.44 890.051 cv
590.67 890.051 590.855 890.123 590.995 890.268 cv
591.135 890.413 591.205 890.601 591.205 890.83 cv
591.205 897.836 li
591.205 898.646 591.003 899.365 590.598 899.996 cv
590.192 900.625 589.63 901.118 588.91 901.473 cv
588.19 901.828 587.365 902.006 586.436 902.006 cv
cp
f
594.985 901.766 mo
594.765 901.766 594.58 901.69 594.43 901.541 cv
594.28 901.391 594.205 901.205 594.205 900.986 cv
594.205 890.83 li
594.205 890.601 594.28 890.413 594.43 890.268 cv
594.58 890.123 594.765 890.051 594.985 890.051 cv
595.285 890.051 595.515 890.191 595.675 890.471 cv
600.37 899.875 li
599.89 899.875 li
604.465 890.471 li
604.625 890.191 604.855 890.051 605.155 890.051 cv
605.375 890.051 605.561 890.123 605.71 890.268 cv
605.86 890.413 605.936 890.601 605.936 890.83 cv
605.936 900.986 li
605.936 901.205 605.857 901.391 605.702 901.541 cv
605.548 901.69 605.365 901.766 605.155 901.766 cv
604.935 901.766 604.75 901.69 604.6 901.541 cv
604.45 901.391 604.375 901.205 604.375 900.986 cv
604.375 892.99 li
604.675 892.916 li
600.745 900.926 li
600.575 901.186 600.35 901.315 600.07 901.315 cv
599.74 901.315 599.5 901.16 599.35 900.851 cv
595.465 893.065 li
595.765 892.99 li
595.765 900.986 li
595.765 901.205 595.69 901.391 595.54 901.541 cv
595.39 901.69 595.205 901.766 594.985 901.766 cv
cp
f
610.494 900.326 mo
613.614 900.326 li
614.074 900.326 614.479 900.246 614.829 900.086 cv
615.18 899.926 615.454 899.691 615.654 899.381 cv
615.854 899.07 615.954 898.686 615.954 898.226 cv
615.954 897.796 615.854 897.441 615.654 897.16 cv
615.454 896.881 615.18 896.668 614.829 896.523 cv
614.479 896.379 614.074 896.306 613.614 896.306 cv
610.494 896.306 li
610.494 900.326 li
cp
610.494 894.865 mo
613.3 894.865 li
613.869 894.865 614.337 894.726 614.702 894.445 cv
615.067 894.166 615.25 893.74 615.25 893.17 cv
615.25 892.601 615.067 892.178 614.702 891.903 cv
614.337 891.629 613.869 891.49 613.3 891.49 cv
610.494 891.49 li
610.494 894.865 li
cp
609.715 901.766 mo
609.494 901.766 609.31 901.69 609.159 901.541 cv
609.01 901.391 608.935 901.205 608.935 900.986 cv
608.935 890.83 li
608.935 890.601 609.01 890.413 609.159 890.268 cv
609.31 890.123 609.494 890.051 609.715 890.051 cv
613.3 890.051 li
613.979 890.051 614.577 890.184 615.092 890.448 cv
615.607 890.713 616.012 891.08 616.307 891.551 cv
616.602 892.021 616.75 892.561 616.75 893.17 cv
616.75 893.66 616.617 894.104 616.353 894.498 cv
616.087 894.893 615.725 895.205 615.265 895.436 cv
615.925 895.596 616.454 895.91 616.854 896.381 cv
617.255 896.851 617.454 897.466 617.454 898.226 cv
617.454 898.916 617.292 899.525 616.967 900.056 cv
616.642 900.586 616.189 901.004 615.609 901.309 cv
615.029 901.613 614.364 901.766 613.614 901.766 cv
609.715 901.766 li
cp
f
620.56 901.766 mo
620.339 901.766 620.154 901.69 620.004 901.541 cv
619.854 901.391 619.779 901.205 619.779 900.986 cv
619.779 890.83 li
619.779 890.601 619.854 890.413 620.004 890.268 cv
620.154 890.123 620.339 890.051 620.56 890.051 cv
620.789 890.051 620.977 890.123 621.122 890.268 cv
621.267 890.413 621.339 890.601 621.339 890.83 cv
621.339 900.986 li
621.339 901.205 621.267 901.391 621.122 901.541 cv
620.977 901.69 620.789 901.766 620.56 901.766 cv
cp
f
625.104 901.766 mo
624.884 901.766 624.701 901.69 624.557 901.541 cv
624.411 901.391 624.339 901.205 624.339 900.986 cv
624.339 890.83 li
624.339 890.601 624.411 890.413 624.557 890.268 cv
624.701 890.123 624.884 890.051 625.104 890.051 cv
625.344 890.051 625.544 890.146 625.704 890.336 cv
632.244 899.035 li
632.244 890.83 li
632.244 890.601 632.319 890.413 632.469 890.268 cv
632.619 890.123 632.804 890.051 633.023 890.051 cv
633.254 890.051 633.438 890.123 633.579 890.268 cv
633.719 890.413 633.789 890.601 633.789 890.83 cv
633.789 900.986 li
633.789 901.205 633.719 901.391 633.579 901.541 cv
633.438 901.69 633.254 901.766 633.023 901.766 cv
632.924 901.766 632.816 901.743 632.701 901.698 cv
632.586 901.653 632.494 901.586 632.424 901.496 cv
625.884 892.795 li
625.884 900.986 li
625.884 901.205 625.812 901.391 625.666 901.541 cv
625.521 901.69 625.334 901.766 625.104 901.766 cv
cp
f
645.954 900.056 mo
644.454 899.756 li
644.454 897.07 li
642.384 897.07 li
642.164 897.07 641.979 897.006 641.829 896.875 cv
641.679 896.746 641.604 896.58 641.604 896.381 cv
641.604 896.181 641.679 896.016 641.829 895.886 cv
641.979 895.756 642.164 895.69 642.384 895.69 cv
645.189 895.69 li
645.419 895.69 645.604 895.764 645.744 895.908 cv
645.884 896.053 645.954 896.24 645.954 896.471 cv
645.954 900.056 li
cp
642.039 901.916 mo
641.229 901.916 640.472 901.764 639.767 901.458 cv
639.062 901.153 638.446 900.729 637.922 900.184 cv
637.396 899.639 636.986 899 636.691 898.271 cv
636.396 897.541 636.249 896.75 636.249 895.9 cv
636.249 895.061 636.396 894.278 636.691 893.553 cv
636.986 892.828 637.396 892.193 637.922 891.648 cv
638.446 891.104 639.059 890.676 639.759 890.365 cv
640.459 890.056 641.219 889.9 642.039 889.9 cv
642.809 889.9 643.472 890 644.026 890.201 cv
644.582 890.4 645.139 890.73 645.699 891.19 cv
645.779 891.25 645.842 891.313 645.887 891.378 cv
645.932 891.443 645.962 891.508 645.977 891.573 cv
645.991 891.639 645.999 891.716 645.999 891.806 cv
645.999 891.996 645.932 892.156 645.797 892.285 cv
645.661 892.416 645.496 892.486 645.302 892.496 cv
645.106 892.506 644.924 892.441 644.754 892.301 cv
644.384 891.98 644.002 891.736 643.606 891.565 cv
643.211 891.396 642.689 891.311 642.039 891.311 cv
641.449 891.311 640.894 891.431 640.374 891.67 cv
639.854 891.91 639.396 892.24 639.002 892.66 cv
638.606 893.08 638.299 893.568 638.079 894.123 cv
637.859 894.678 637.749 895.271 637.749 895.9 cv
637.749 896.541 637.859 897.139 638.079 897.693 cv
638.299 898.248 638.606 898.736 639.002 899.156 cv
639.396 899.576 639.854 899.903 640.374 900.139 cv
640.894 900.373 641.449 900.49 642.039 900.49 cv
642.549 900.49 643.031 900.403 643.486 900.229 cv
643.941 900.053 644.379 899.811 644.799 899.5 cv
644.979 899.371 645.156 899.313 645.332 899.328 cv
645.507 899.344 645.654 899.413 645.774 899.538 cv
645.895 899.663 645.954 899.836 645.954 900.056 cv
645.954 900.156 645.937 900.254 645.901 900.348 cv
645.866 900.443 645.804 900.531 645.714 900.611 cv
645.184 901.051 644.609 901.379 643.989 901.594 cv
643.369 901.809 642.719 901.916 642.039 901.916 cv
cp
f
790.078 901.916 mo
789.269 901.916 788.511 901.764 787.806 901.458 cv
787.101 901.153 786.485 900.729 785.961 900.184 cv
785.436 899.639 785.025 899 784.73 898.271 cv
784.436 897.541 784.288 896.75 784.288 895.9 cv
784.288 895.061 784.436 894.278 784.73 893.553 cv
785.025 892.828 785.436 892.193 785.961 891.648 cv
786.485 891.104 787.098 890.676 787.798 890.365 cv
788.498 890.056 789.258 889.9 790.078 889.9 cv
790.848 889.9 791.511 890 792.065 890.201 cv
792.621 890.4 793.178 890.73 793.738 891.19 cv
793.818 891.25 793.881 891.313 793.926 891.378 cv
793.971 891.443 794.001 891.508 794.016 891.573 cv
794.03 891.639 794.038 891.716 794.038 891.806 cv
794.038 891.996 793.971 892.153 793.836 892.278 cv
793.7 892.403 793.538 892.473 793.348 892.488 cv
793.158 892.503 792.973 892.441 792.793 892.301 cv
792.423 891.98 792.041 891.736 791.646 891.565 cv
791.25 891.396 790.729 891.311 790.078 891.311 cv
789.488 891.311 788.933 891.431 788.413 891.67 cv
787.893 891.91 787.436 892.24 787.041 892.66 cv
786.646 893.08 786.338 893.568 786.118 894.123 cv
785.898 894.678 785.788 895.271 785.788 895.9 cv
785.788 896.541 785.898 897.139 786.118 897.693 cv
786.338 898.248 786.646 898.736 787.041 899.156 cv
787.436 899.576 787.893 899.903 788.413 900.139 cv
788.933 900.373 789.488 900.49 790.078 900.49 cv
790.588 900.49 791.07 900.403 791.525 900.229 cv
791.98 900.053 792.418 899.811 792.838 899.5 cv
793.019 899.371 793.195 899.313 793.371 899.328 cv
793.546 899.344 793.693 899.413 793.813 899.538 cv
793.934 899.663 793.993 899.836 793.993 900.056 cv
793.993 900.156 793.973 900.254 793.934 900.348 cv
793.893 900.443 793.833 900.531 793.753 900.611 cv
793.213 901.041 792.636 901.365 792.021 901.586 cv
791.405 901.806 790.758 901.916 790.078 901.916 cv
cp
f
801.898 900.506 mo
802.548 900.506 803.146 900.389 803.69 900.153 cv
804.235 899.918 804.708 899.594 805.108 899.178 cv
805.508 898.764 805.815 898.275 806.031 897.716 cv
806.246 897.156 806.354 896.551 806.354 895.9 cv
806.354 895.25 806.246 894.646 806.031 894.086 cv
805.815 893.525 805.508 893.038 805.108 892.623 cv
804.708 892.209 804.235 891.886 803.69 891.656 cv
803.146 891.426 802.548 891.311 801.898 891.311 cv
801.248 891.311 800.65 891.426 800.105 891.656 cv
799.561 891.886 799.091 892.209 798.696 892.623 cv
798.301 893.038 797.993 893.525 797.773 894.086 cv
797.554 894.646 797.443 895.25 797.443 895.9 cv
797.443 896.551 797.554 897.156 797.773 897.716 cv
797.993 898.275 798.301 898.764 798.696 899.178 cv
799.091 899.594 799.561 899.918 800.105 900.153 cv
800.65 900.389 801.248 900.506 801.898 900.506 cv
cp
801.898 901.916 mo
801.019 901.916 800.213 901.768 799.483 901.473 cv
798.753 901.178 798.126 900.764 797.601 900.229 cv
797.076 899.693 796.668 899.059 796.378 898.323 cv
796.088 897.588 795.943 896.781 795.943 895.9 cv
795.943 895.021 796.088 894.216 796.378 893.486 cv
796.668 892.756 797.076 892.123 797.601 891.588 cv
798.126 891.053 798.753 890.639 799.483 890.344 cv
800.213 890.049 801.019 889.9 801.898 889.9 cv
802.778 889.9 803.581 890.049 804.306 890.344 cv
805.031 890.639 805.658 891.053 806.188 891.588 cv
806.719 892.123 807.128 892.756 807.418 893.486 cv
807.708 894.216 807.854 895.021 807.854 895.9 cv
807.854 896.781 807.708 897.588 807.418 898.323 cv
807.128 899.059 806.719 899.693 806.188 900.229 cv
805.658 900.764 805.031 901.178 804.306 901.473 cv
803.581 901.768 802.778 901.916 801.898 901.916 cv
cp
f
811.063 901.766 mo
810.843 901.766 810.66 901.69 810.516 901.541 cv
810.37 901.391 810.298 901.205 810.298 900.986 cv
810.298 890.83 li
810.298 890.611 810.373 890.426 810.522 890.275 cv
810.673 890.125 810.853 890.051 811.063 890.051 cv
811.282 890.051 811.468 890.125 811.618 890.275 cv
811.768 890.426 811.843 890.611 811.843 890.83 cv
811.843 900.205 li
817.272 900.205 li
817.493 900.205 817.678 900.281 817.828 900.431 cv
817.978 900.58 818.053 900.766 818.053 900.986 cv
818.053 901.205 817.978 901.391 817.828 901.541 cv
817.678 901.69 817.493 901.766 817.272 901.766 cv
811.063 901.766 li
cp
f
824.293 900.506 mo
824.942 900.506 825.54 900.389 826.085 900.153 cv
826.63 899.918 827.103 899.594 827.503 899.178 cv
827.902 898.764 828.21 898.275 828.426 897.716 cv
828.641 897.156 828.748 896.551 828.748 895.9 cv
828.748 895.25 828.641 894.646 828.426 894.086 cv
828.21 893.525 827.902 893.038 827.503 892.623 cv
827.103 892.209 826.63 891.886 826.085 891.656 cv
825.54 891.426 824.942 891.311 824.293 891.311 cv
823.643 891.311 823.045 891.426 822.5 891.656 cv
821.955 891.886 821.485 892.209 821.091 892.623 cv
820.695 893.038 820.388 893.525 820.168 894.086 cv
819.948 894.646 819.838 895.25 819.838 895.9 cv
819.838 896.551 819.948 897.156 820.168 897.716 cv
820.388 898.275 820.695 898.764 821.091 899.178 cv
821.485 899.594 821.955 899.918 822.5 900.153 cv
823.045 900.389 823.643 900.506 824.293 900.506 cv
cp
824.293 901.916 mo
823.413 901.916 822.607 901.768 821.878 901.473 cv
821.147 901.178 820.521 900.764 819.995 900.229 cv
819.471 899.693 819.063 899.059 818.772 898.323 cv
818.482 897.588 818.338 896.781 818.338 895.9 cv
818.338 895.021 818.482 894.216 818.772 893.486 cv
819.063 892.756 819.471 892.123 819.995 891.588 cv
820.521 891.053 821.147 890.639 821.878 890.344 cv
822.607 890.049 823.413 889.9 824.293 889.9 cv
825.173 889.9 825.976 890.049 826.7 890.344 cv
827.426 890.639 828.053 891.053 828.583 891.588 cv
829.113 892.123 829.522 892.756 829.813 893.486 cv
830.103 894.216 830.248 895.021 830.248 895.9 cv
830.248 896.781 830.103 897.588 829.813 898.323 cv
829.522 899.059 829.113 899.693 828.583 900.229 cv
828.053 900.764 827.426 901.178 826.7 901.473 cv
825.976 901.768 825.173 901.916 824.293 901.916 cv
cp
f
839.697 901.766 mo
839.558 901.766 839.43 901.736 839.314 901.676 cv
839.2 901.615 839.103 901.521 839.022 901.391 cv
836.322 897.041 li
837.837 896.605 li
840.298 900.565 li
840.478 900.855 840.502 901.128 840.372 901.383 cv
840.242 901.639 840.018 901.766 839.697 901.766 cv
cp
834.252 895.811 mo
836.173 895.811 li
836.632 895.811 837.037 895.723 837.388 895.549 cv
837.737 895.373 838.013 895.128 838.212 894.813 cv
838.412 894.498 838.513 894.141 838.513 893.74 cv
838.513 893.301 838.412 892.91 838.212 892.57 cv
838.013 892.23 837.737 891.966 837.388 891.775 cv
837.037 891.586 836.632 891.49 836.173 891.49 cv
834.252 891.49 li
834.252 895.811 li
cp
833.473 901.766 mo
833.252 901.766 833.067 901.69 832.917 901.541 cv
832.768 901.391 832.692 901.205 832.692 900.986 cv
832.692 890.83 li
832.692 890.601 832.768 890.413 832.917 890.268 cv
833.067 890.123 833.252 890.051 833.473 890.051 cv
836.173 890.051 li
836.923 890.051 837.587 890.208 838.167 890.523 cv
838.747 890.838 839.2 891.271 839.524 891.82 cv
839.85 892.371 840.013 893.011 840.013 893.74 cv
840.013 894.421 839.85 895.025 839.524 895.556 cv
839.2 896.086 838.747 896.5 838.167 896.801 cv
837.587 897.101 836.923 897.25 836.173 897.25 cv
834.252 897.25 li
834.252 900.986 li
834.252 901.205 834.18 901.391 834.035 901.541 cv
833.89 901.69 833.702 901.766 833.473 901.766 cv
cp
f
770.968 919.766 mo
770.747 919.766 770.563 919.69 770.412 919.541 cv
770.263 919.391 770.188 919.205 770.188 918.986 cv
770.188 908.83 li
770.188 908.601 770.263 908.413 770.412 908.268 cv
770.563 908.123 770.747 908.051 770.968 908.051 cv
771.268 908.051 771.497 908.191 771.657 908.471 cv
776.353 917.875 li
775.872 917.875 li
780.447 908.471 li
780.607 908.191 780.838 908.051 781.138 908.051 cv
781.357 908.051 781.543 908.123 781.692 908.268 cv
781.843 908.413 781.918 908.601 781.918 908.83 cv
781.918 918.986 li
781.918 919.205 781.84 919.391 781.685 919.541 cv
781.53 919.69 781.348 919.766 781.138 919.766 cv
780.917 919.766 780.732 919.69 780.582 919.541 cv
780.433 919.391 780.357 919.205 780.357 918.986 cv
780.357 910.99 li
780.657 910.916 li
776.728 918.926 li
776.558 919.186 776.332 919.315 776.053 919.315 cv
775.723 919.315 775.482 919.16 775.332 918.851 cv
771.447 911.065 li
771.747 910.99 li
771.747 918.986 li
771.747 919.205 771.673 919.391 771.522 919.541 cv
771.372 919.69 771.188 919.766 770.968 919.766 cv
cp
f
785.247 917.186 mo
785.847 915.896 li
791.727 915.896 li
792.327 917.186 li
785.247 917.186 li
cp
784.452 919.766 mo
784.172 919.766 783.957 919.646 783.807 919.406 cv
783.657 919.166 783.642 918.91 783.762 918.641 cv
787.977 908.576 li
788.127 908.226 788.372 908.051 788.712 908.051 cv
789.072 908.051 789.317 908.226 789.447 908.576 cv
793.677 918.67 li
793.787 918.951 793.77 919.203 793.624 919.428 cv
793.479 919.653 793.262 919.766 792.972 919.766 cv
792.822 919.766 792.68 919.723 792.545 919.639 cv
792.409 919.553 792.312 919.436 792.252 919.285 cv
788.532 910.045 li
788.952 910.045 li
785.172 919.285 li
785.102 919.445 784.999 919.566 784.864 919.646 cv
784.729 919.726 784.592 919.766 784.452 919.766 cv
cp
f
797.727 919.766 mo
797.507 919.766 797.321 919.69 797.172 919.541 cv
797.021 919.391 796.946 919.205 796.946 918.986 cv
796.946 908.051 li
798.507 908.051 li
798.507 918.986 li
798.507 919.205 798.432 919.391 798.281 919.541 cv
798.132 919.69 797.946 919.766 797.727 919.766 cv
cp
793.707 909.49 mo
793.497 909.49 793.324 909.424 793.189 909.288 cv
793.055 909.153 792.986 908.98 792.986 908.771 cv
792.986 908.561 793.055 908.389 793.189 908.253 cv
793.324 908.118 793.497 908.051 793.707 908.051 cv
801.731 908.051 li
801.941 908.051 802.114 908.118 802.249 908.253 cv
802.384 908.389 802.452 908.561 802.452 908.771 cv
802.452 908.98 802.384 909.153 802.249 909.288 cv
802.114 909.424 801.941 909.49 801.731 909.49 cv
793.707 909.49 li
cp
f
808.678 919.916 mo
807.868 919.916 807.11 919.764 806.405 919.458 cv
805.7 919.153 805.085 918.729 804.561 918.184 cv
804.035 917.639 803.625 917 803.33 916.271 cv
803.035 915.541 802.888 914.75 802.888 913.9 cv
802.888 913.061 803.035 912.278 803.33 911.553 cv
803.625 910.828 804.035 910.193 804.561 909.648 cv
805.085 909.104 805.697 908.676 806.397 908.365 cv
807.098 908.056 807.857 907.9 808.678 907.9 cv
809.447 907.9 810.11 908 810.665 908.201 cv
811.221 908.4 811.777 908.73 812.338 909.19 cv
812.418 909.25 812.48 909.313 812.525 909.378 cv
812.57 909.443 812.601 909.508 812.615 909.573 cv
812.63 909.639 812.638 909.716 812.638 909.806 cv
812.638 909.996 812.57 910.153 812.436 910.278 cv
812.3 910.403 812.138 910.473 811.947 910.488 cv
811.758 910.503 811.572 910.441 811.393 910.301 cv
811.022 909.98 810.641 909.736 810.245 909.565 cv
809.85 909.396 809.328 909.311 808.678 909.311 cv
808.088 909.311 807.532 909.431 807.013 909.67 cv
806.492 909.91 806.035 910.24 805.641 910.66 cv
805.245 911.08 804.938 911.568 804.718 912.123 cv
804.498 912.678 804.388 913.271 804.388 913.9 cv
804.388 914.541 804.498 915.139 804.718 915.693 cv
804.938 916.248 805.245 916.736 805.641 917.156 cv
806.035 917.576 806.492 917.903 807.013 918.139 cv
807.532 918.373 808.088 918.49 808.678 918.49 cv
809.188 918.49 809.67 918.403 810.125 918.229 cv
810.58 918.053 811.018 917.811 811.438 917.5 cv
811.618 917.371 811.795 917.313 811.971 917.328 cv
812.146 917.344 812.293 917.413 812.413 917.538 cv
812.533 917.663 812.593 917.836 812.593 918.056 cv
812.593 918.156 812.572 918.254 812.533 918.348 cv
812.492 918.443 812.433 918.531 812.353 918.611 cv
811.813 919.041 811.235 919.365 810.62 919.586 cv
810.005 919.806 809.357 919.916 808.678 919.916 cv
cp
f
815.863 919.766 mo
815.643 919.766 815.458 919.69 815.308 919.541 cv
815.158 919.391 815.083 919.205 815.083 918.986 cv
815.083 908.83 li
815.083 908.601 815.158 908.413 815.308 908.268 cv
815.458 908.123 815.643 908.051 815.863 908.051 cv
816.093 908.051 816.28 908.123 816.426 908.268 cv
816.57 908.413 816.643 908.601 816.643 908.83 cv
816.643 913.136 li
823.603 913.136 li
823.603 908.83 li
823.603 908.601 823.678 908.413 823.828 908.268 cv
823.978 908.123 824.163 908.051 824.383 908.051 cv
824.613 908.051 824.798 908.123 824.938 908.268 cv
825.078 908.413 825.148 908.601 825.148 908.83 cv
825.148 918.986 li
825.148 919.205 825.078 919.391 824.938 919.541 cv
824.798 919.69 824.613 919.766 824.383 919.766 cv
824.163 919.766 823.978 919.69 823.828 919.541 cv
823.678 919.391 823.603 919.205 823.603 918.986 cv
823.603 914.516 li
816.643 914.516 li
816.643 918.986 li
816.643 919.205 816.57 919.391 816.426 919.541 cv
816.28 919.69 816.093 919.766 815.863 919.766 cv
cp
f
828.928 919.766 mo
828.707 919.766 828.522 919.69 828.372 919.541 cv
828.223 919.391 828.147 919.205 828.147 918.986 cv
828.147 908.83 li
828.147 908.601 828.223 908.413 828.372 908.268 cv
828.522 908.123 828.707 908.051 828.928 908.051 cv
829.157 908.051 829.345 908.123 829.49 908.268 cv
829.635 908.413 829.707 908.601 829.707 908.83 cv
829.707 918.986 li
829.707 919.205 829.635 919.391 829.49 919.541 cv
829.345 919.69 829.157 919.766 828.928 919.766 cv
cp
f
833.472 919.766 mo
833.252 919.766 833.069 919.69 832.925 919.541 cv
832.779 919.391 832.707 919.205 832.707 918.986 cv
832.707 908.83 li
832.707 908.601 832.779 908.413 832.925 908.268 cv
833.069 908.123 833.252 908.051 833.472 908.051 cv
833.712 908.051 833.912 908.146 834.072 908.336 cv
840.612 917.035 li
840.612 908.83 li
840.612 908.601 840.688 908.413 840.837 908.268 cv
840.987 908.123 841.172 908.051 841.392 908.051 cv
841.622 908.051 841.807 908.123 841.947 908.268 cv
842.087 908.413 842.157 908.601 842.157 908.83 cv
842.157 918.986 li
842.157 919.205 842.087 919.391 841.947 919.541 cv
841.807 919.69 841.622 919.766 841.392 919.766 cv
841.292 919.766 841.185 919.743 841.069 919.698 cv
840.954 919.653 840.862 919.586 840.792 919.496 cv
834.252 910.795 li
834.252 918.986 li
834.252 919.205 834.18 919.391 834.034 919.541 cv
833.89 919.69 833.702 919.766 833.472 919.766 cv
cp
f
854.322 918.056 mo
852.822 917.756 li
852.822 915.07 li
850.752 915.07 li
850.532 915.07 850.348 915.006 850.197 914.875 cv
850.047 914.746 849.973 914.58 849.973 914.381 cv
849.973 914.181 850.047 914.016 850.197 913.886 cv
850.348 913.756 850.532 913.69 850.752 913.69 cv
853.558 913.69 li
853.787 913.69 853.972 913.764 854.112 913.908 cv
854.252 914.053 854.322 914.24 854.322 914.471 cv
854.322 918.056 li
cp
850.407 919.916 mo
849.598 919.916 848.84 919.764 848.135 919.458 cv
847.43 919.153 846.814 918.729 846.29 918.184 cv
845.765 917.639 845.354 917 845.06 916.271 cv
844.765 915.541 844.617 914.75 844.617 913.9 cv
844.617 913.061 844.765 912.278 845.06 911.553 cv
845.354 910.828 845.765 910.193 846.29 909.648 cv
846.814 909.104 847.427 908.676 848.127 908.365 cv
848.827 908.056 849.587 907.9 850.407 907.9 cv
851.177 907.9 851.84 908 852.395 908.201 cv
852.95 908.4 853.507 908.73 854.067 909.19 cv
854.147 909.25 854.21 909.313 854.255 909.378 cv
854.3 909.443 854.33 909.508 854.345 909.573 cv
854.359 909.639 854.367 909.716 854.367 909.806 cv
854.367 909.996 854.3 910.156 854.165 910.285 cv
854.029 910.416 853.864 910.486 853.67 910.496 cv
853.475 910.506 853.292 910.441 853.122 910.301 cv
852.752 909.98 852.37 909.736 851.975 909.565 cv
851.579 909.396 851.058 909.311 850.407 909.311 cv
849.817 909.311 849.262 909.431 848.742 909.67 cv
848.222 909.91 847.765 910.24 847.37 910.66 cv
846.975 911.08 846.667 911.568 846.447 912.123 cv
846.228 912.678 846.117 913.271 846.117 913.9 cv
846.117 914.541 846.228 915.139 846.447 915.693 cv
846.667 916.248 846.975 916.736 847.37 917.156 cv
847.765 917.576 848.222 917.903 848.742 918.139 cv
849.262 918.373 849.817 918.49 850.407 918.49 cv
850.917 918.49 851.399 918.403 851.854 918.229 cv
852.31 918.053 852.747 917.811 853.167 917.5 cv
853.348 917.371 853.524 917.313 853.7 917.328 cv
853.875 917.344 854.022 917.413 854.143 917.538 cv
854.263 917.663 854.322 917.836 854.322 918.056 cv
854.322 918.156 854.305 918.254 854.27 918.348 cv
854.234 918.443 854.172 918.531 854.082 918.611 cv
853.552 919.051 852.978 919.379 852.357 919.594 cv
851.737 919.809 851.087 919.916 850.407 919.916 cv
cp
f
436.964 76.5146 mo
450.532 76.5146 li
450.532 144.439 li
436.964 144.439 li
436.964 76.5146 li
cp
1 .462745 .470588 rgb
f
463.826 110.798 mo
463.826 88.4307 478.218 75.3232 495.359 75.3232 cv
503.977 75.3232 510.852 79.4473 515.251 84.0313 cv
508.193 92.6475 li
504.709 89.3477 500.769 86.9639 495.634 86.9639 cv
485.367 86.9639 477.668 95.7646 477.668 110.339 cv
477.668 125.098 484.635 133.99 495.359 133.99 cv
501.226 133.99 505.719 131.239 509.385 127.298 cv
516.535 135.731 li
510.944 142.239 503.702 145.724 494.901 145.724 cv
477.759 145.724 463.826 133.439 463.826 110.798 cv
cp
f
567.327 110.248 mo
567.327 95.6719 560.91 86.9639 550.826 86.9639 cv
540.743 86.9639 534.326 95.6719 534.326 110.248 cv
534.326 124.731 540.743 133.99 550.826 133.99 cv
560.91 133.99 567.327 124.731 567.327 110.248 cv
cp
520.484 110.248 mo
520.484 88.1563 532.859 75.3232 550.826 75.3232 cv
568.794 75.3232 581.169 88.248 581.169 110.248 cv
581.169 132.248 568.794 145.724 550.826 145.724 cv
532.859 145.724 520.484 132.248 520.484 110.248 cv
cp
f
594.468 76.5146 mo
608.312 76.5146 li
628.02 112.723 li
634.803 127.39 li
635.262 127.39 li
634.618 120.331 633.52 111.348 633.52 103.647 cv
633.52 76.5146 li
646.352 76.5146 li
646.352 144.439 li
632.602 144.439 li
612.986 108.14 li
606.11 93.5645 li
605.653 93.5645 li
606.294 100.897 607.302 109.423 607.302 117.214 cv
607.302 144.439 li
594.468 144.439 li
594.468 76.5146 li
cp
f
658.644 135.823 mo
666.437 126.473 li
671.294 130.965 677.711 133.99 683.668 133.99 cv
690.729 133.99 694.485 130.965 694.485 126.198 cv
694.485 121.156 690.36 119.599 684.312 117.031 cv
675.236 113.182 li
668.36 110.339 661.486 104.84 661.486 94.9395 cv
661.486 83.8477 671.202 75.3232 684.953 75.3232 cv
692.836 75.3232 700.72 78.4395 706.219 84.0313 cv
699.345 92.5557 li
695.035 88.9814 690.544 86.9639 684.953 86.9639 cv
678.995 86.9639 675.236 89.6221 675.236 94.1143 cv
675.236 98.9727 680.003 100.715 685.778 103.006 cv
694.669 106.765 li
702.919 110.156 708.328 115.381 708.328 125.189 cv
708.328 136.281 699.069 145.724 683.394 145.724 cv
674.319 145.724 665.244 142.147 658.644 135.823 cv
cp
f
281.954 125.585 mo
281.489 125.585 281.099 125.427 280.781 125.11 cv
280.466 124.793 280.308 124.402 280.308 123.938 cv
280.308 102.497 li
280.308 102.012 280.466 101.615 280.781 101.31 cv
281.099 101.004 281.489 100.851 281.954 100.851 cv
282.44 100.851 282.836 101.004 283.142 101.31 cv
283.448 101.615 283.601 102.012 283.601 102.497 cv
283.601 111.587 li
298.297 111.587 li
298.297 102.497 li
298.297 102.012 298.455 101.615 298.771 101.31 cv
299.088 101.004 299.479 100.851 299.942 100.851 cv
300.43 100.851 300.818 101.004 301.115 101.31 cv
301.411 101.615 301.56 102.012 301.56 102.497 cv
301.56 123.938 li
301.56 124.402 301.411 124.793 301.115 125.11 cv
300.818 125.427 300.43 125.585 299.942 125.585 cv
299.479 125.585 299.088 125.427 298.771 125.11 cv
298.455 124.793 298.297 124.402 298.297 123.938 cv
298.297 114.501 li
283.601 114.501 li
283.601 123.938 li
283.601 124.402 283.448 124.793 283.142 125.11 cv
282.836 125.427 282.44 125.585 281.954 125.585 cv
cp
.109804 .160784 .278431 rgb
f
309.539 125.585 mo
309.075 125.585 308.685 125.427 308.367 125.11 cv
308.051 124.793 307.894 124.402 307.894 123.938 cv
307.894 102.497 li
307.894 102.012 308.051 101.615 308.367 101.31 cv
308.685 101.004 309.075 100.851 309.539 100.851 cv
310.025 100.851 310.421 101.004 310.728 101.31 cv
311.033 101.615 311.187 102.012 311.187 102.497 cv
311.187 123.938 li
311.187 124.402 311.033 124.793 310.728 125.11 cv
310.421 125.427 310.025 125.585 309.539 125.585 cv
cp
f
336.87 121.975 mo
333.704 121.342 li
333.704 115.673 li
329.333 115.673 li
328.868 115.673 328.478 115.535 328.161 115.261 cv
327.844 114.986 327.686 114.638 327.686 114.216 cv
327.686 113.793 327.844 113.445 328.161 113.17 cv
328.478 112.896 328.868 112.759 329.333 112.759 cv
335.256 112.759 li
335.74 112.759 336.131 112.912 336.428 113.218 cv
336.722 113.523 336.87 113.92 336.87 114.405 cv
336.87 121.975 li
cp
328.604 125.902 mo
326.895 125.902 325.295 125.58 323.807 124.936 cv
322.317 124.292 321.019 123.396 319.911 122.244 cv
318.803 121.094 317.937 119.747 317.313 118.206 cv
316.69 116.665 316.379 114.997 316.379 113.201 cv
316.379 111.428 316.69 109.776 317.313 108.246 cv
317.937 106.715 318.803 105.374 319.911 104.224 cv
321.019 103.072 322.313 102.17 323.791 101.516 cv
325.269 100.861 326.874 100.534 328.604 100.534 cv
330.23 100.534 331.629 100.744 332.801 101.167 cv
333.973 101.59 335.149 102.286 336.331 103.257 cv
336.501 103.384 336.633 103.516 336.729 103.652 cv
336.823 103.79 336.887 103.928 336.917 104.064 cv
336.95 104.202 336.966 104.366 336.966 104.556 cv
336.966 104.957 336.823 105.295 336.538 105.569 cv
336.253 105.844 335.905 105.992 335.493 106.013 cv
335.081 106.034 334.695 105.896 334.337 105.602 cv
333.556 104.926 332.748 104.408 331.913 104.049 cv
331.08 103.69 329.977 103.511 328.604 103.511 cv
327.358 103.511 326.187 103.765 325.09 104.271 cv
323.991 104.777 323.025 105.475 322.19 106.36 cv
321.357 107.248 320.707 108.277 320.243 109.448 cv
319.778 110.621 319.547 111.872 319.547 113.201 cv
319.547 114.554 319.778 115.815 320.243 116.986 cv
320.707 118.158 321.357 119.188 322.19 120.074 cv
323.025 120.962 323.991 121.653 325.09 122.149 cv
326.187 122.646 327.358 122.893 328.604 122.893 cv
329.682 122.893 330.699 122.709 331.661 122.34 cv
332.621 121.97 333.545 121.458 334.432 120.803 cv
334.813 120.528 335.187 120.407 335.557 120.438 cv
335.926 120.471 336.237 120.619 336.491 120.883 cv
336.743 121.146 336.87 121.511 336.87 121.975 cv
336.87 122.187 336.833 122.393 336.76 122.593 cv
336.687 122.794 336.555 122.978 336.364 123.146 cv
335.244 124.076 334.031 124.768 332.721 125.222 cv
331.412 125.675 330.04 125.902 328.604 125.902 cv
cp
f
343.773 125.585 mo
343.31 125.585 342.919 125.427 342.602 125.11 cv
342.286 124.793 342.128 124.402 342.128 123.938 cv
342.128 102.497 li
342.128 102.012 342.286 101.615 342.602 101.31 cv
342.919 101.004 343.31 100.851 343.773 100.851 cv
344.261 100.851 344.656 101.004 344.962 101.31 cv
345.269 101.615 345.421 102.012 345.421 102.497 cv
345.421 111.587 li
360.117 111.587 li
360.117 102.497 li
360.117 102.012 360.275 101.615 360.591 101.31 cv
360.908 101.004 361.299 100.851 361.763 100.851 cv
362.25 100.851 362.639 101.004 362.935 101.31 cv
363.231 101.615 363.38 102.012 363.38 102.497 cv
363.38 123.938 li
363.38 124.402 363.231 124.793 362.935 125.11 cv
362.639 125.427 362.25 125.585 361.763 125.585 cv
361.299 125.585 360.908 125.427 360.591 125.11 cv
360.275 124.793 360.117 124.402 360.117 123.938 cv
360.117 114.501 li
345.421 114.501 li
345.421 123.938 li
345.421 124.402 345.269 124.793 344.962 125.11 cv
344.656 125.427 344.261 125.585 343.773 125.585 cv
cp
f
371.328 125.585 mo
370.862 125.585 370.479 125.427 370.173 125.11 cv
369.866 124.793 369.713 124.402 369.713 123.938 cv
369.713 102.497 li
369.713 102.033 369.871 101.643 370.188 101.325 cv
370.505 101.009 370.884 100.851 371.328 100.851 cv
371.792 100.851 372.183 101.009 372.5 101.325 cv
372.816 101.643 372.976 102.033 372.976 102.497 cv
372.976 122.291 li
384.44 122.291 li
384.904 122.291 385.295 122.45 385.612 122.767 cv
385.928 123.083 386.086 123.474 386.086 123.938 cv
386.086 124.402 385.928 124.793 385.612 125.11 cv
385.295 125.427 384.904 125.585 384.44 125.585 cv
371.328 125.585 li
cp
f
391.692 125.585 mo
391.229 125.585 390.838 125.427 390.521 125.11 cv
390.204 124.793 390.047 124.402 390.047 123.938 cv
390.047 102.497 li
390.047 102.012 390.204 101.615 390.521 101.31 cv
390.838 101.004 391.229 100.851 391.692 100.851 cv
392.179 100.851 392.574 101.004 392.881 101.31 cv
393.187 101.615 393.34 102.012 393.34 102.497 cv
393.34 123.938 li
393.34 124.402 393.187 124.793 392.881 125.11 cv
392.574 125.427 392.179 125.585 391.692 125.585 cv
cp
f
419.023 121.975 mo
415.857 121.342 li
415.857 115.673 li
411.486 115.673 li
411.021 115.673 410.631 115.535 410.314 115.261 cv
409.997 114.986 409.84 114.638 409.84 114.216 cv
409.84 113.793 409.997 113.445 410.314 113.17 cv
410.631 112.896 411.021 112.759 411.486 112.759 cv
417.409 112.759 li
417.894 112.759 418.284 112.912 418.581 113.218 cv
418.875 113.523 419.023 113.92 419.023 114.405 cv
419.023 121.975 li
cp
410.758 125.902 mo
409.048 125.902 407.448 125.58 405.96 124.936 cv
404.471 124.292 403.172 123.396 402.064 122.244 cv
400.956 121.094 400.09 119.747 399.467 118.206 cv
398.844 116.665 398.532 114.997 398.532 113.201 cv
398.532 111.428 398.844 109.776 399.467 108.246 cv
400.09 106.715 400.956 105.374 402.064 104.224 cv
403.172 103.072 404.466 102.17 405.944 101.516 cv
407.422 100.861 409.027 100.534 410.758 100.534 cv
412.384 100.534 413.782 100.744 414.954 101.167 cv
416.126 101.59 417.303 102.286 418.484 103.257 cv
418.654 103.384 418.786 103.516 418.882 103.652 cv
418.977 103.79 419.04 103.928 419.071 104.064 cv
419.104 104.202 419.12 104.366 419.12 104.556 cv
419.12 104.957 418.977 105.295 418.691 105.569 cv
418.406 105.844 418.059 105.992 417.646 106.013 cv
417.234 106.034 416.849 105.896 416.49 105.602 cv
415.709 104.926 414.902 104.408 414.066 104.049 cv
413.233 103.69 412.13 103.511 410.758 103.511 cv
409.512 103.511 408.34 103.765 407.243 104.271 cv
406.145 104.777 405.179 105.475 404.344 106.36 cv
403.511 107.248 402.861 108.277 402.396 109.448 cv
401.932 110.621 401.7 111.872 401.7 113.201 cv
401.7 114.554 401.932 115.815 402.396 116.986 cv
402.861 118.158 403.511 119.188 404.344 120.074 cv
405.179 120.962 406.145 121.653 407.243 122.149 cv
408.34 122.646 409.512 122.893 410.758 122.893 cv
411.835 122.893 412.853 122.709 413.814 122.34 cv
414.775 121.97 415.698 121.458 416.585 120.803 cv
416.966 120.528 417.341 120.407 417.71 120.438 cv
418.079 120.471 418.391 120.619 418.645 120.883 cv
418.896 121.146 419.023 121.511 419.023 121.975 cv
419.023 122.187 418.986 122.393 418.913 122.593 cv
418.84 122.794 418.708 122.978 418.518 123.146 cv
417.397 124.076 416.185 124.768 414.874 125.222 cv
413.565 125.675 412.193 125.902 410.758 125.902 cv
cp
f
425.927 125.585 mo
425.463 125.585 425.072 125.427 424.755 125.11 cv
424.439 124.793 424.281 124.402 424.281 123.938 cv
424.281 102.497 li
424.281 102.012 424.439 101.615 424.755 101.31 cv
425.072 101.004 425.463 100.851 425.927 100.851 cv
426.414 100.851 426.81 101.004 427.115 101.31 cv
427.422 101.615 427.574 102.012 427.574 102.497 cv
427.574 111.587 li
442.271 111.587 li
442.271 102.497 li
442.271 102.012 442.429 101.615 442.744 101.31 cv
443.062 101.004 443.452 100.851 443.916 100.851 cv
444.403 100.851 444.792 101.004 445.089 101.31 cv
445.385 101.615 445.533 102.012 445.533 102.497 cv
445.533 123.938 li
445.533 124.402 445.385 124.793 445.089 125.11 cv
444.792 125.427 444.403 125.585 443.916 125.585 cv
443.452 125.585 443.062 125.427 442.744 125.11 cv
442.429 124.793 442.271 124.402 442.271 123.938 cv
442.271 114.501 li
427.574 114.501 li
427.574 123.938 li
427.574 124.402 427.422 124.793 427.115 125.11 cv
426.81 125.427 426.414 125.585 425.927 125.585 cv
cp
f
459.183 125.585 mo
458.717 125.585 458.327 125.427 458.01 125.11 cv
457.694 124.793 457.535 124.402 457.535 123.938 cv
457.535 100.851 li
460.829 100.851 li
460.829 123.938 li
460.829 124.402 460.67 124.793 460.354 125.11 cv
460.037 125.427 459.646 125.585 459.183 125.585 cv
cp
450.694 103.891 mo
450.25 103.891 449.888 103.748 449.601 103.463 cv
449.316 103.179 449.174 102.813 449.174 102.371 cv
449.174 101.927 449.316 101.563 449.601 101.277 cv
449.888 100.993 450.25 100.851 450.694 100.851 cv
467.639 100.851 li
468.082 100.851 468.446 100.993 468.731 101.277 cv
469.016 101.563 469.159 101.927 469.159 102.371 cv
469.159 102.813 469.016 103.179 468.731 103.463 cv
468.446 103.748 468.082 103.891 467.639 103.891 cv
450.694 103.891 li
cp
f
0 203 mo
0 228 li
313 228 li
313 203 li
0 203 li
cp
1 .462745 .470588 rgb
f
343.5 203 mo
343.5 228 li
656.5 228 li
656.5 203 li
343.5 203 li
cp
.545098 .85098 .94902 rgb
f
687 203 mo
687 228 li
1000 228 li
1000 203 li
687 203 li
cp
1 .462745 .470588 rgb
f
101.029 223.486 mo
100.878 223.486 100.744 223.433 100.631 223.324 cv
100.517 223.217 100.46 223.081 100.46 222.916 cv
100.46 209.217 li
100.46 209.053 100.517 208.916 100.631 208.809 cv
100.744 208.701 100.878 208.647 101.029 208.647 cv
101.194 208.647 101.33 208.701 101.438 208.809 cv
101.546 208.916 101.6 209.053 101.6 209.217 cv
101.6 222.461 li
109.408 222.461 li
109.586 222.461 109.725 222.508 109.826 222.604 cv
109.928 222.697 109.979 222.821 109.979 222.973 cv
109.979 223.125 109.928 223.249 109.826 223.344 cv
109.725 223.439 109.586 223.486 109.408 223.486 cv
101.029 223.486 li
cp
1 1 1 rgb
f
112.923 223.486 mo
112.759 223.486 112.622 223.433 112.515 223.324 cv
112.407 223.217 112.354 223.081 112.354 222.916 cv
112.354 209.217 li
112.354 209.053 112.407 208.916 112.515 208.809 cv
112.622 208.701 112.759 208.647 112.923 208.647 cv
113.088 208.647 113.224 208.701 113.332 208.809 cv
113.439 208.916 113.493 209.053 113.493 209.217 cv
113.493 222.916 li
113.493 223.081 113.439 223.217 113.332 223.324 cv
113.224 223.433 113.088 223.486 112.923 223.486 cv
cp
f
117.862 223.486 mo
117.698 223.486 117.562 223.433 117.454 223.324 cv
117.347 223.217 117.293 223.081 117.293 222.916 cv
117.293 209.217 li
117.293 209.053 117.347 208.916 117.454 208.809 cv
117.562 208.701 117.698 208.647 117.862 208.647 cv
118.04 208.647 118.186 208.711 118.3 208.838 cv
127.951 221.396 li
127.951 209.217 li
127.951 209.053 128.005 208.916 128.113 208.809 cv
128.221 208.701 128.356 208.647 128.521 208.647 cv
128.674 208.647 128.807 208.701 128.921 208.809 cv
129.034 208.916 129.092 209.053 129.092 209.217 cv
129.092 222.916 li
129.092 223.081 129.034 223.217 128.921 223.324 cv
128.807 223.433 128.674 223.486 128.521 223.486 cv
128.433 223.486 128.354 223.471 128.284 223.439 cv
128.214 223.407 128.154 223.366 128.104 223.315 cv
118.433 210.737 li
118.433 222.916 li
118.433 223.081 118.379 223.217 118.271 223.324 cv
118.163 223.433 118.027 223.486 117.862 223.486 cv
cp
f
133.461 223.486 mo
133.297 223.486 133.16 223.433 133.053 223.324 cv
132.945 223.217 132.892 223.081 132.892 222.916 cv
132.892 209.217 li
132.892 209.053 132.945 208.916 133.053 208.809 cv
133.16 208.701 133.297 208.647 133.461 208.647 cv
142.601 208.647 li
142.752 208.647 142.885 208.701 142.999 208.809 cv
143.113 208.916 143.17 209.053 143.17 209.217 cv
143.17 209.369 143.113 209.502 142.999 209.616 cv
142.885 209.73 142.752 209.787 142.601 209.787 cv
134.031 209.787 li
134.031 215.487 li
140.32 215.487 li
140.484 215.487 140.621 215.541 140.729 215.648 cv
140.836 215.757 140.891 215.893 140.891 216.057 cv
140.891 216.223 140.836 216.361 140.729 216.475 cv
140.621 216.59 140.484 216.646 140.32 216.646 cv
134.031 216.646 li
134.031 222.346 li
142.601 222.346 li
142.752 222.346 142.885 222.403 142.999 222.518 cv
143.113 222.631 143.17 222.764 143.17 222.916 cv
143.17 223.081 143.113 223.217 142.999 223.324 cv
142.885 223.433 142.752 223.486 142.601 223.486 cv
133.461 223.486 li
cp
f
152.063 223.486 mo
151.898 223.486 151.762 223.433 151.654 223.324 cv
151.547 223.217 151.493 223.081 151.493 222.916 cv
151.493 209.217 li
151.493 209.053 151.547 208.916 151.654 208.809 cv
151.762 208.701 151.898 208.647 152.063 208.647 cv
152.228 208.647 152.363 208.701 152.472 208.809 cv
152.579 208.916 152.633 209.053 152.633 209.217 cv
152.633 222.916 li
152.633 223.081 152.579 223.217 152.472 223.324 cv
152.363 223.433 152.228 223.486 152.063 223.486 cv
cp
f
163.102 223.676 mo
162.088 223.676 161.135 223.477 160.242 223.078 cv
159.349 222.679 158.561 222.128 157.876 221.425 cv
157.192 220.722 156.653 219.911 156.261 218.992 cv
155.868 218.074 155.672 217.096 155.672 216.057 cv
155.672 215.031 155.862 214.06 156.242 213.141 cv
156.622 212.223 157.151 211.412 157.829 210.709 cv
158.506 210.006 159.295 209.455 160.194 209.056 cv
161.094 208.656 162.063 208.457 163.102 208.457 cv
163.976 208.457 164.805 208.597 165.59 208.875 cv
166.375 209.154 167.11 209.578 167.794 210.148 cv
167.908 210.237 167.965 210.36 167.965 210.52 cv
167.965 210.678 167.914 210.816 167.813 210.938 cv
167.712 211.057 167.572 211.117 167.396 211.117 cv
167.345 211.117 167.294 211.107 167.243 211.089 cv
167.192 211.07 167.142 211.045 167.091 211.013 cv
167.04 210.981 166.983 210.939 166.92 210.889 cv
166.413 210.434 165.837 210.104 165.191 209.901 cv
164.545 209.699 163.849 209.598 163.102 209.598 cv
162.253 209.598 161.448 209.771 160.688 210.119 cv
159.929 210.469 159.257 210.943 158.674 211.545 cv
158.092 212.146 157.636 212.834 157.307 213.606 cv
156.977 214.379 156.813 215.196 156.813 216.057 cv
156.813 216.944 156.977 217.78 157.307 218.565 cv
157.636 219.352 158.088 220.041 158.665 220.637 cv
159.241 221.232 159.909 221.697 160.669 222.033 cv
161.43 222.369 162.239 222.536 163.102 222.536 cv
163.849 222.536 164.548 222.422 165.201 222.194 cv
165.853 221.967 166.464 221.618 167.034 221.149 cv
167.136 221.061 167.256 221.029 167.396 221.055 cv
167.534 221.08 167.654 221.143 167.756 221.244 cv
167.857 221.346 167.908 221.479 167.908 221.644 cv
167.908 221.719 167.901 221.789 167.89 221.853 cv
167.876 221.916 167.839 221.979 167.775 222.043 cv
167.154 222.663 166.436 223.091 165.619 223.324 cv
164.802 223.559 163.963 223.676 163.102 223.676 cv
cp
f
177.864 222.536 mo
178.776 222.536 179.625 222.375 180.41 222.052 cv
181.195 221.729 181.883 221.273 182.472 220.684 cv
183.061 220.095 183.517 219.408 183.84 218.623 cv
184.163 217.837 184.324 216.982 184.324 216.057 cv
184.324 215.146 184.163 214.297 183.84 213.512 cv
183.517 212.727 183.061 212.039 182.472 211.449 cv
181.883 210.861 181.195 210.404 180.41 210.082 cv
179.625 209.759 178.776 209.598 177.864 209.598 cv
176.939 209.598 176.085 209.759 175.3 210.082 cv
174.514 210.404 173.827 210.861 173.238 211.449 cv
172.649 212.039 172.193 212.727 171.87 213.512 cv
171.547 214.297 171.386 215.146 171.386 216.057 cv
171.386 216.982 171.547 217.837 171.87 218.623 cv
172.193 219.408 172.649 220.095 173.238 220.684 cv
173.827 221.273 174.514 221.729 175.3 222.052 cv
176.085 222.375 176.939 222.536 177.864 222.536 cv
cp
177.864 223.676 mo
176.775 223.676 175.768 223.486 174.844 223.106 cv
173.919 222.727 173.111 222.191 172.421 221.501 cv
171.73 220.811 171.195 220.003 170.815 219.078 cv
170.436 218.154 170.245 217.146 170.245 216.057 cv
170.245 214.969 170.436 213.965 170.815 213.046 cv
171.195 212.127 171.73 211.323 172.421 210.633 cv
173.111 209.942 173.919 209.407 174.844 209.027 cv
175.768 208.647 176.775 208.457 177.864 208.457 cv
178.954 208.457 179.957 208.647 180.876 209.027 cv
181.794 209.407 182.599 209.942 183.289 210.633 cv
183.979 211.323 184.515 212.127 184.895 213.046 cv
185.274 213.965 185.465 214.969 185.465 216.057 cv
185.465 217.146 185.274 218.154 184.895 219.078 cv
184.515 220.003 183.979 220.811 183.289 221.501 cv
182.599 222.191 181.794 222.727 180.876 223.106 cv
179.957 223.486 178.954 223.676 177.864 223.676 cv
cp
f
189.074 223.486 mo
188.91 223.486 188.773 223.433 188.666 223.324 cv
188.559 223.217 188.505 223.081 188.505 222.916 cv
188.505 209.217 li
188.505 209.053 188.559 208.916 188.666 208.809 cv
188.773 208.701 188.91 208.647 189.074 208.647 cv
189.252 208.647 189.397 208.711 189.512 208.838 cv
199.163 221.396 li
199.163 209.217 li
199.163 209.053 199.217 208.916 199.325 208.809 cv
199.433 208.701 199.568 208.647 199.733 208.647 cv
199.886 208.647 200.019 208.701 200.133 208.809 cv
200.246 208.916 200.304 209.053 200.304 209.217 cv
200.304 222.916 li
200.304 223.081 200.246 223.217 200.133 223.324 cv
200.019 223.433 199.886 223.486 199.733 223.486 cv
199.645 223.486 199.565 223.471 199.496 223.439 cv
199.426 223.407 199.366 223.366 199.315 223.315 cv
189.645 210.737 li
189.645 222.916 li
189.645 223.081 189.591 223.217 189.483 223.324 cv
189.375 223.433 189.239 223.486 189.074 223.486 cv
cp
f
208.549 223.676 mo
207.751 223.676 207.02 223.565 206.354 223.344 cv
205.689 223.123 205.116 222.806 204.635 222.395 cv
204.153 221.982 203.773 221.498 203.495 220.94 cv
203.419 220.788 203.416 220.643 203.485 220.504 cv
203.555 220.364 203.672 220.27 203.837 220.219 cv
203.977 220.168 204.115 220.174 204.255 220.237 cv
204.395 220.301 204.502 220.402 204.578 220.541 cv
204.806 220.947 205.106 221.301 205.48 221.605 cv
205.854 221.909 206.298 222.141 206.811 222.299 cv
207.323 222.457 207.903 222.536 208.549 222.536 cv
209.271 222.536 209.895 222.416 210.421 222.176 cv
210.946 221.936 211.352 221.58 211.637 221.111 cv
211.922 220.643 212.064 220.072 212.064 219.401 cv
212.064 218.565 211.763 217.859 211.162 217.283 cv
210.56 216.707 209.645 216.336 208.416 216.172 cv
206.997 215.969 205.889 215.51 205.091 214.794 cv
204.293 214.078 203.895 213.207 203.895 212.182 cv
203.895 211.434 204.081 210.781 204.455 210.225 cv
204.828 209.667 205.354 209.233 206.031 208.923 cv
206.709 208.613 207.491 208.457 208.378 208.457 cv
209.036 208.457 209.645 208.564 210.202 208.78 cv
210.76 208.996 211.247 209.277 211.665 209.626 cv
212.083 209.975 212.406 210.338 212.634 210.719 cv
212.723 210.857 212.745 211.007 212.7 211.165 cv
212.656 211.323 212.552 211.434 212.387 211.498 cv
212.248 211.548 212.108 211.551 211.969 211.507 cv
211.83 211.463 211.716 211.377 211.627 211.25 cv
211.449 210.984 211.222 210.725 210.943 210.471 cv
210.664 210.219 210.316 210.01 209.898 209.844 cv
209.48 209.68 208.974 209.598 208.378 209.598 cv
207.34 209.598 206.522 209.832 205.927 210.301 cv
205.332 210.77 205.034 211.434 205.034 212.295 cv
205.034 212.752 205.157 213.166 205.404 213.54 cv
205.651 213.914 206.041 214.233 206.573 214.5 cv
207.105 214.766 207.782 214.969 208.606 215.107 cv
210.24 215.387 211.415 215.89 212.131 216.617 cv
212.846 217.346 213.204 218.273 213.204 219.401 cv
213.204 220.061 213.093 220.655 212.872 221.188 cv
212.649 221.719 212.333 222.169 211.922 222.536 cv
211.51 222.904 211.02 223.186 210.449 223.382 cv
209.879 223.578 209.245 223.676 208.549 223.676 cv
cp
f
434.584 223.486 mo
434.42 223.486 434.283 223.433 434.176 223.324 cv
434.068 223.217 434.015 223.081 434.015 222.916 cv
434.015 209.217 li
434.015 209.053 434.068 208.916 434.176 208.809 cv
434.283 208.701 434.42 208.647 434.584 208.647 cv
434.749 208.647 434.885 208.701 434.993 208.809 cv
435.101 208.916 435.154 209.053 435.154 209.217 cv
435.154 215.487 li
444.749 215.487 li
444.749 209.217 li
444.749 209.053 444.803 208.916 444.911 208.809 cv
445.019 208.701 445.154 208.647 445.319 208.647 cv
445.472 208.647 445.604 208.701 445.718 208.809 cv
445.832 208.916 445.89 209.053 445.89 209.217 cv
445.89 222.916 li
445.89 223.081 445.832 223.217 445.718 223.324 cv
445.604 223.433 445.465 223.486 445.3 223.486 cv
445.148 223.486 445.019 223.433 444.911 223.324 cv
444.803 223.217 444.749 223.081 444.749 222.916 cv
444.749 216.514 li
435.154 216.514 li
435.154 222.916 li
435.154 223.081 435.101 223.217 434.993 223.324 cv
434.885 223.433 434.749 223.486 434.584 223.486 cv
cp
f
456.548 222.536 mo
457.46 222.536 458.309 222.375 459.094 222.052 cv
459.879 221.729 460.566 221.273 461.155 220.684 cv
461.744 220.095 462.2 219.408 462.523 218.623 cv
462.847 217.837 463.008 216.982 463.008 216.057 cv
463.008 215.146 462.847 214.297 462.523 213.512 cv
462.2 212.727 461.744 212.039 461.155 211.449 cv
460.566 210.861 459.879 210.404 459.094 210.082 cv
458.309 209.759 457.46 209.598 456.548 209.598 cv
455.623 209.598 454.769 209.759 453.983 210.082 cv
453.197 210.404 452.511 210.861 451.922 211.449 cv
451.333 212.039 450.877 212.727 450.554 213.512 cv
450.23 214.297 450.069 215.146 450.069 216.057 cv
450.069 216.982 450.23 217.837 450.554 218.623 cv
450.877 219.408 451.333 220.095 451.922 220.684 cv
452.511 221.273 453.197 221.729 453.983 222.052 cv
454.769 222.375 455.623 222.536 456.548 222.536 cv
cp
456.548 223.676 mo
455.459 223.676 454.451 223.486 453.527 223.106 cv
452.603 222.727 451.795 222.191 451.104 221.501 cv
450.414 220.811 449.879 220.003 449.499 219.078 cv
449.119 218.154 448.929 217.146 448.929 216.057 cv
448.929 214.969 449.119 213.965 449.499 213.046 cv
449.879 212.127 450.414 211.323 451.104 210.633 cv
451.795 209.942 452.603 209.407 453.527 209.027 cv
454.451 208.647 455.459 208.457 456.548 208.457 cv
457.638 208.457 458.641 208.647 459.56 209.027 cv
460.478 209.407 461.282 209.942 461.973 210.633 cv
462.663 211.323 463.198 212.127 463.578 213.046 cv
463.958 213.965 464.148 214.969 464.148 216.057 cv
464.148 217.146 463.958 218.154 463.578 219.078 cv
463.198 220.003 462.663 220.811 461.973 221.501 cv
461.282 222.191 460.478 222.727 459.56 223.106 cv
458.641 223.486 457.638 223.676 456.548 223.676 cv
cp
f
467.758 223.486 mo
467.594 223.486 467.457 223.433 467.35 223.324 cv
467.242 223.217 467.188 223.081 467.188 222.916 cv
467.188 209.217 li
467.188 209.053 467.242 208.916 467.35 208.809 cv
467.457 208.701 467.594 208.647 467.758 208.647 cv
468.012 208.647 468.183 208.742 468.271 208.932 cv
474.997 222.213 li
474.332 222.213 li
480.963 208.932 li
481.077 208.742 481.248 208.647 481.477 208.647 cv
481.641 208.647 481.773 208.701 481.875 208.809 cv
481.977 208.916 482.027 209.053 482.027 209.217 cv
482.027 222.916 li
482.027 223.081 481.977 223.217 481.875 223.324 cv
481.773 223.433 481.641 223.486 481.477 223.486 cv
481.312 223.486 481.172 223.433 481.058 223.324 cv
480.944 223.217 480.887 223.081 480.887 222.916 cv
480.887 210.586 li
481.172 210.68 li
475.111 223.03 li
475.022 223.208 474.857 223.297 474.617 223.297 cv
474.389 223.297 474.212 223.176 474.085 222.936 cv
467.948 210.68 li
468.328 210.586 li
468.328 222.916 li
468.328 223.081 468.274 223.217 468.167 223.324 cv
468.059 223.433 467.923 223.486 467.758 223.486 cv
cp
f
486.396 223.486 mo
486.232 223.486 486.096 223.433 485.988 223.324 cv
485.881 223.217 485.827 223.081 485.827 222.916 cv
485.827 209.217 li
485.827 209.053 485.881 208.916 485.988 208.809 cv
486.096 208.701 486.232 208.647 486.396 208.647 cv
495.536 208.647 li
495.688 208.647 495.82 208.701 495.935 208.809 cv
496.049 208.916 496.105 209.053 496.105 209.217 cv
496.105 209.369 496.049 209.502 495.935 209.616 cv
495.82 209.73 495.688 209.787 495.536 209.787 cv
486.967 209.787 li
486.967 215.487 li
493.256 215.487 li
493.42 215.487 493.557 215.541 493.664 215.648 cv
493.771 215.757 493.826 215.893 493.826 216.057 cv
493.826 216.223 493.771 216.361 493.664 216.475 cv
493.557 216.59 493.42 216.646 493.256 216.646 cv
486.967 216.646 li
486.967 222.346 li
495.536 222.346 li
495.688 222.346 495.82 222.403 495.935 222.518 cv
496.049 222.631 496.105 222.764 496.105 222.916 cv
496.105 223.081 496.049 223.217 495.935 223.324 cv
495.82 223.433 495.688 223.486 495.536 223.486 cv
486.396 223.486 li
cp
f
512.979 223.486 mo
512.839 223.486 512.734 223.458 512.665 223.4 cv
512.595 223.344 512.528 223.271 512.465 223.182 cv
508.685 217.141 li
509.862 216.875 li
513.453 222.612 li
513.618 222.865 513.652 223.074 513.558 223.239 cv
513.463 223.404 513.27 223.486 512.979 223.486 cv
cp
505.568 216.457 mo
508.627 216.457 li
509.337 216.457 509.96 216.314 510.499 216.029 cv
511.037 215.744 511.461 215.354 511.771 214.86 cv
512.082 214.366 512.237 213.797 512.237 213.15 cv
512.237 212.492 512.082 211.909 511.771 211.402 cv
511.461 210.896 511.037 210.5 510.499 210.215 cv
509.96 209.93 509.337 209.787 508.627 209.787 cv
505.568 209.787 li
505.568 216.457 li
cp
504.998 223.486 mo
504.834 223.486 504.697 223.433 504.59 223.324 cv
504.482 223.217 504.429 223.081 504.429 222.916 cv
504.429 209.217 li
504.429 209.04 504.482 208.9 504.59 208.799 cv
504.697 208.698 504.834 208.647 504.998 208.647 cv
508.627 208.647 li
509.552 208.647 510.372 208.841 511.088 209.227 cv
511.804 209.613 512.364 210.143 512.77 210.813 cv
513.175 211.484 513.377 212.264 513.377 213.15 cv
513.377 214.012 513.175 214.778 512.77 215.449 cv
512.364 216.121 511.804 216.646 511.088 217.026 cv
510.372 217.406 509.552 217.596 508.627 217.596 cv
505.568 217.596 li
505.568 222.916 li
505.568 223.081 505.518 223.217 505.416 223.324 cv
505.314 223.433 505.176 223.486 504.998 223.486 cv
cp
f
516.55 223.486 mo
516.386 223.486 516.249 223.433 516.142 223.324 cv
516.034 223.217 515.98 223.081 515.98 222.916 cv
515.98 209.217 li
515.98 209.053 516.034 208.916 516.142 208.809 cv
516.249 208.701 516.386 208.647 516.55 208.647 cv
525.689 208.647 li
525.841 208.647 525.974 208.701 526.088 208.809 cv
526.202 208.916 526.259 209.053 526.259 209.217 cv
526.259 209.369 526.202 209.502 526.088 209.616 cv
525.974 209.73 525.841 209.787 525.689 209.787 cv
517.12 209.787 li
517.12 215.487 li
523.409 215.487 li
523.573 215.487 523.71 215.541 523.817 215.648 cv
523.925 215.757 523.979 215.893 523.979 216.057 cv
523.979 216.223 523.925 216.361 523.817 216.475 cv
523.71 216.59 523.573 216.646 523.409 216.646 cv
517.12 216.646 li
517.12 222.346 li
525.689 222.346 li
525.841 222.346 525.974 222.403 526.088 222.518 cv
526.202 222.631 526.259 222.764 526.259 222.916 cv
526.259 223.081 526.202 223.217 526.088 223.324 cv
525.974 223.433 525.841 223.486 525.689 223.486 cv
516.55 223.486 li
cp
f
530.154 217.026 mo
533.384 217.026 li
534.094 217.026 534.717 216.871 535.256 216.561 cv
535.794 216.25 536.218 215.823 536.528 215.278 cv
536.839 214.734 536.994 214.107 536.994 213.397 cv
536.994 212.688 536.839 212.064 536.528 211.525 cv
536.218 210.988 535.794 210.563 535.256 210.253 cv
534.717 209.942 534.094 209.787 533.384 209.787 cv
530.154 209.787 li
530.154 217.026 li
cp
529.584 223.486 mo
529.42 223.486 529.283 223.433 529.176 223.324 cv
529.068 223.217 529.015 223.081 529.015 222.916 cv
529.015 209.217 li
529.015 209.04 529.068 208.9 529.176 208.799 cv
529.283 208.698 529.42 208.647 529.584 208.647 cv
533.384 208.647 li
534.309 208.647 535.129 208.85 535.845 209.256 cv
536.561 209.66 537.121 210.221 537.526 210.938 cv
537.932 211.652 538.134 212.473 538.134 213.397 cv
538.134 214.322 537.932 215.146 537.526 215.867 cv
537.121 216.59 536.561 217.153 535.845 217.559 cv
535.129 217.964 534.309 218.166 533.384 218.166 cv
530.154 218.166 li
530.154 222.916 li
530.154 223.081 530.104 223.217 530.002 223.324 cv
529.9 223.433 529.762 223.486 529.584 223.486 cv
cp
f
540.376 219.762 mo
540.832 218.736 li
548.736 218.736 li
549.173 219.762 li
540.376 219.762 li
cp
538.97 223.486 mo
538.729 223.486 538.562 223.391 538.467 223.201 cv
538.371 223.012 538.368 222.834 538.457 222.67 cv
544.214 209.047 li
544.315 208.78 544.499 208.647 544.765 208.647 cv
545.019 208.647 545.202 208.78 545.316 209.047 cv
551.092 222.67 li
551.193 222.847 551.188 223.027 551.073 223.211 cv
550.959 223.395 550.794 223.486 550.579 223.486 cv
550.452 223.486 550.348 223.458 550.266 223.4 cv
550.183 223.344 550.11 223.252 550.047 223.125 cv
544.461 209.807 li
545.069 209.807 li
539.502 223.125 li
539.451 223.252 539.382 223.344 539.293 223.4 cv
539.204 223.458 539.097 223.486 538.97 223.486 cv
cp
f
553.865 223.486 mo
553.701 223.486 553.564 223.433 553.457 223.324 cv
553.35 223.217 553.296 223.081 553.296 222.916 cv
553.296 209.217 li
553.296 209.053 553.35 208.916 553.457 208.809 cv
553.564 208.701 553.701 208.647 553.865 208.647 cv
554.03 208.647 554.166 208.701 554.274 208.809 cv
554.382 208.916 554.436 209.053 554.436 209.217 cv
554.436 222.916 li
554.436 223.081 554.382 223.217 554.274 223.324 cv
554.166 223.433 554.03 223.486 553.865 223.486 cv
cp
f
566.785 223.486 mo
566.646 223.486 566.541 223.458 566.472 223.4 cv
566.401 223.344 566.335 223.271 566.271 223.182 cv
562.491 217.141 li
563.669 216.875 li
567.26 222.612 li
567.425 222.865 567.459 223.074 567.364 223.239 cv
567.27 223.404 567.076 223.486 566.785 223.486 cv
cp
559.375 216.457 mo
562.434 216.457 li
563.144 216.457 563.767 216.314 564.306 216.029 cv
564.844 215.744 565.268 215.354 565.578 214.86 cv
565.889 214.366 566.044 213.797 566.044 213.15 cv
566.044 212.492 565.889 211.909 565.578 211.402 cv
565.268 210.896 564.844 210.5 564.306 210.215 cv
563.767 209.93 563.144 209.787 562.434 209.787 cv
559.375 209.787 li
559.375 216.457 li
cp
558.805 223.486 mo
558.641 223.486 558.504 223.433 558.396 223.324 cv
558.289 223.217 558.235 223.081 558.235 222.916 cv
558.235 209.217 li
558.235 209.04 558.289 208.9 558.396 208.799 cv
558.504 208.698 558.641 208.647 558.805 208.647 cv
562.434 208.647 li
563.358 208.647 564.179 208.841 564.895 209.227 cv
565.61 209.613 566.171 210.143 566.576 210.813 cv
566.981 211.484 567.184 212.264 567.184 213.15 cv
567.184 214.012 566.981 214.778 566.576 215.449 cv
566.171 216.121 565.61 216.646 564.895 217.026 cv
564.179 217.406 563.358 217.596 562.434 217.596 cv
559.375 217.596 li
559.375 222.916 li
559.375 223.081 559.324 223.217 559.223 223.324 cv
559.121 223.433 558.982 223.486 558.805 223.486 cv
cp
f
818.184 223.486 mo
817.942 223.486 817.771 223.366 817.67 223.125 cv
811.97 209.578 li
811.844 209.287 811.84 209.059 811.961 208.895 cv
812.081 208.73 812.249 208.647 812.464 208.647 cv
812.704 208.647 812.889 208.78 813.015 209.047 cv
818.487 222.137 li
817.937 222.137 li
823.332 209.123 li
823.396 208.945 823.478 208.822 823.579 208.752 cv
823.681 208.682 823.807 208.647 823.959 208.647 cv
824.188 208.647 824.339 208.742 824.415 208.932 cv
824.491 209.123 824.479 209.338 824.377 209.578 cv
818.696 223.125 li
818.633 223.265 818.554 223.359 818.459 223.41 cv
818.363 223.461 818.271 223.486 818.184 223.486 cv
cp
f
832.642 222.536 mo
833.554 222.536 834.402 222.375 835.188 222.052 cv
835.973 221.729 836.66 221.273 837.249 220.684 cv
837.838 220.095 838.294 219.408 838.617 218.623 cv
838.94 217.837 839.102 216.982 839.102 216.057 cv
839.102 215.146 838.94 214.297 838.617 213.512 cv
838.294 212.727 837.838 212.039 837.249 211.449 cv
836.66 210.861 835.973 210.404 835.188 210.082 cv
834.402 209.759 833.554 209.598 832.642 209.598 cv
831.717 209.598 830.862 209.759 830.077 210.082 cv
829.291 210.404 828.604 210.861 828.016 211.449 cv
827.427 212.039 826.971 212.727 826.647 213.512 cv
826.324 214.297 826.163 215.146 826.163 216.057 cv
826.163 216.982 826.324 217.837 826.647 218.623 cv
826.971 219.408 827.427 220.095 828.016 220.684 cv
828.604 221.273 829.291 221.729 830.077 222.052 cv
830.862 222.375 831.717 222.536 832.642 222.536 cv
cp
832.642 223.676 mo
831.553 223.676 830.545 223.486 829.621 223.106 cv
828.696 222.727 827.889 222.191 827.198 221.501 cv
826.508 220.811 825.973 220.003 825.593 219.078 cv
825.213 218.154 825.022 217.146 825.022 216.057 cv
825.022 214.969 825.213 213.965 825.593 213.046 cv
825.973 212.127 826.508 211.323 827.198 210.633 cv
827.889 209.942 828.696 209.407 829.621 209.027 cv
830.545 208.647 831.553 208.457 832.642 208.457 cv
833.731 208.457 834.734 208.647 835.653 209.027 cv
836.571 209.407 837.376 209.942 838.066 210.633 cv
838.757 211.323 839.292 212.127 839.672 213.046 cv
840.052 213.965 840.242 214.969 840.242 216.057 cv
840.242 217.146 840.052 218.154 839.672 219.078 cv
839.292 220.003 838.757 220.811 838.066 221.501 cv
837.376 222.191 836.571 222.727 835.653 223.106 cv
834.734 223.486 833.731 223.676 832.642 223.676 cv
cp
f
843.852 223.486 mo
843.7 223.486 843.566 223.433 843.453 223.324 cv
843.339 223.217 843.282 223.081 843.282 222.916 cv
843.282 209.217 li
843.282 209.053 843.339 208.916 843.453 208.809 cv
843.566 208.701 843.7 208.647 843.852 208.647 cv
844.017 208.647 844.152 208.701 844.261 208.809 cv
844.368 208.916 844.422 209.053 844.422 209.217 cv
844.422 222.461 li
852.23 222.461 li
852.408 222.461 852.547 222.508 852.648 222.604 cv
852.75 222.697 852.801 222.821 852.801 222.973 cv
852.801 223.125 852.75 223.249 852.648 223.344 cv
852.547 223.439 852.408 223.486 852.23 223.486 cv
843.852 223.486 li
cp
f
855.194 223.791 mo
854.916 223.791 854.685 223.698 854.501 223.515 cv
854.317 223.332 854.226 223.1 854.226 222.821 cv
854.226 222.543 854.32 222.314 854.511 222.137 cv
854.7 221.96 854.929 221.871 855.194 221.871 cv
855.46 221.871 855.686 221.963 855.869 222.146 cv
856.053 222.33 856.145 222.555 856.145 222.821 cv
856.145 223.088 856.053 223.315 855.869 223.506 cv
855.686 223.695 855.46 223.791 855.194 223.791 cv
cp
f
861.616 223.486 mo
861.451 223.486 861.312 223.433 861.197 223.324 cv
861.084 223.217 861.026 223.081 861.026 222.916 cv
861.026 210.016 li
858.766 210.756 li
858.677 210.795 858.595 210.813 858.519 210.813 cv
858.354 210.813 858.218 210.76 858.11 210.652 cv
858.003 210.545 857.949 210.408 857.949 210.243 cv
857.949 210.129 857.978 210.021 858.034 209.92 cv
858.091 209.819 858.183 209.743 858.31 209.692 cv
861.217 208.723 li
861.28 208.698 861.35 208.676 861.426 208.656 cv
861.502 208.638 861.565 208.629 861.616 208.629 cv
861.78 208.629 861.916 208.682 862.024 208.79 cv
862.132 208.897 862.186 209.033 862.186 209.198 cv
862.186 222.916 li
862.186 223.081 862.132 223.217 862.024 223.324 cv
861.916 223.433 861.78 223.486 861.616 223.486 cv
cp
f
869.805 214.709 mo
870.273 214.709 870.694 214.594 871.068 214.366 cv
871.442 214.139 871.743 213.832 871.971 213.445 cv
872.199 213.059 872.313 212.618 872.313 212.125 cv
872.325 211.668 872.221 211.257 871.999 210.889 cv
871.777 210.521 871.477 210.234 871.097 210.025 cv
870.717 209.816 870.286 209.711 869.805 209.711 cv
869.096 209.711 868.5 209.942 868.019 210.404 cv
867.537 210.867 867.29 211.44 867.278 212.125 cv
867.266 212.859 867.499 213.473 867.98 213.967 cv
868.462 214.461 869.07 214.709 869.805 214.709 cv
cp
869.805 222.594 mo
870.426 222.594 870.983 222.441 871.477 222.137 cv
871.971 221.834 872.36 221.416 872.646 220.883 cv
872.931 220.352 873.073 219.756 873.073 219.098 cv
873.085 218.464 872.949 217.897 872.664 217.396 cv
872.38 216.896 871.99 216.501 871.496 216.209 cv
871.002 215.918 870.438 215.772 869.805 215.772 cv
869.185 215.772 868.624 215.918 868.123 216.209 cv
867.623 216.501 867.23 216.896 866.945 217.396 cv
866.66 217.897 866.518 218.464 866.518 219.098 cv
866.518 219.756 866.657 220.352 866.936 220.883 cv
867.215 221.416 867.604 221.834 868.104 222.137 cv
868.604 222.441 869.172 222.594 869.805 222.594 cv
cp
869.805 215.772 mo
869.121 215.772 868.507 215.614 867.962 215.297 cv
867.417 214.98 866.986 214.547 866.67 213.996 cv
866.354 213.445 866.195 212.821 866.195 212.125 cv
866.195 211.466 866.354 210.877 866.67 210.357 cv
866.986 209.838 867.417 209.424 867.962 209.113 cv
868.507 208.803 869.121 208.647 869.805 208.647 cv
870.501 208.635 871.119 208.78 871.657 209.084 cv
872.195 209.389 872.623 209.803 872.939 210.328 cv
873.257 210.854 873.408 211.453 873.396 212.125 cv
873.396 212.821 873.237 213.445 872.921 213.996 cv
872.604 214.547 872.177 214.98 871.639 215.297 cv
871.1 215.614 870.489 215.772 869.805 215.772 cv
cp
869.805 223.619 mo
868.956 223.619 868.193 223.423 867.516 223.03 cv
866.838 222.638 866.303 222.1 865.91 221.416 cv
865.518 220.731 865.321 219.959 865.321 219.098 cv
865.321 218.262 865.518 217.518 865.91 216.865 cv
866.303 216.213 866.838 215.696 867.516 215.316 cv
868.193 214.937 868.956 214.746 869.805 214.746 cv
870.666 214.746 871.433 214.937 872.104 215.316 cv
872.775 215.696 873.308 216.213 873.7 216.865 cv
874.093 217.518 874.282 218.262 874.27 219.098 cv
874.27 219.959 874.073 220.731 873.681 221.416 cv
873.288 222.1 872.756 222.638 872.085 223.03 cv
871.413 223.423 870.653 223.619 869.805 223.619 cv
cp
f
396.5 422 mo
394.566 422 393 420.434 393 418.5 cv
393 416.566 394.566 415 396.5 415 cv
398.434 415 400 416.566 400 418.5 cv
400 420.434 398.434 422 396.5 422 cv
cp
410.5 372 mo
382.5 372 li
382.5 372 390.138 379.017 390.5 383 cv
391.09 389.488 386.881 402.568 385.5 415 cv
384.5 424 389.5 429 396.5 429 cv
403.5 429 408.5 424 407.5 415 cv
406.119 402.568 401.91 389.488 402.5 383 cv
402.862 379.017 410.5 372 410.5 372 cv
cp
1 .462745 .470588 rgb
f
417.5 348 mo
422.115 317.54 li
422.317 316.203 421.283 315 419.932 315 cv
373.068 315 li
371.717 315 370.683 316.203 370.885 317.54 cv
375.5 348 li
417.5 348 li
cp
.545098 .85098 .94902 rgb
f
376 350 mo
376 367.7 li
376 368.969 377.031 370 378.3 370 cv
414.7 370 li
415.969 370 417 368.969 417 367.7 cv
417 350 li
376 350 li
cp
414.7 373 mo
378.3 373 li
375.378 373 373 370.622 373 367.7 cv
373 348.5 li
373 347.672 373.672 347 374.5 347 cv
418.5 347 li
419.328 347 420 347.672 420 348.5 cv
420 367.7 li
420 370.622 417.622 373 414.7 373 cv
cp
.109804 .160784 .278431 rgb
f
396.5 430 mo
392.675 430 389.327 428.613 387.074 426.096 cv
384.529 423.254 383.47 419.187 384.009 414.334 cv
384.623 408.804 385.802 403.092 386.842 398.052 cv
388.17 391.613 389.316 386.053 389.006 382.636 cv
388.78 380.154 384.273 375.166 381.485 372.604 cv
380.875 372.044 380.835 371.096 381.396 370.485 cv
381.957 369.875 382.905 369.835 383.515 370.396 cv
384.34 371.153 391.591 377.932 391.994 382.364 cv
392.345 386.224 391.156 391.985 389.779 398.658 cv
388.753 403.634 387.59 409.273 386.991 414.666 cv
386.549 418.646 387.351 421.906 389.31 424.095 cv
391.01 425.995 393.497 427 396.5 427 cv
399.503 427 401.99 425.995 403.69 424.095 cv
405.649 421.906 406.451 418.646 406.009 414.666 cv
405.41 409.273 404.247 403.634 403.221 398.658 cv
401.844 391.985 400.655 386.224 401.006 382.364 cv
401.409 377.932 408.66 371.153 409.485 370.396 cv
410.097 369.836 411.044 369.876 411.604 370.485 cv
412.165 371.095 412.125 372.044 411.515 372.604 cv
408.727 375.168 404.219 380.158 403.994 382.636 cv
403.684 386.053 404.83 391.613 406.158 398.052 cv
407.198 403.092 408.377 408.804 408.991 414.334 cv
409.53 419.187 408.471 423.254 405.926 426.096 cv
403.673 428.613 400.325 430 396.5 430 cv
cp
f
417.5 367 mo
374.5 367 li
373.672 367 373 366.328 373 365.5 cv
373 364.672 373.672 364 374.5 364 cv
417.5 364 li
418.328 364 419 364.672 419 365.5 cv
419 366.328 418.328 367 417.5 367 cv
cp
f
417.5 356 mo
390.5 356 li
389.672 356 389 355.328 389 354.5 cv
389 353.672 389.672 353 390.5 353 cv
417.5 353 li
418.328 353 419 353.672 419 354.5 cv
419 355.328 418.328 356 417.5 356 cv
cp
f
381.5 356 mo
374.5 356 li
373.672 356 373 355.328 373 354.5 cv
373 353.672 373.672 353 374.5 353 cv
381.5 353 li
382.328 353 383 353.672 383 354.5 cv
383 355.328 382.328 356 381.5 356 cv
cp
f
417.502 349 mo
417.427 349 417.352 348.994 417.275 348.983 cv
416.456 348.859 415.893 348.095 416.017 347.275 cv
420.69 316.432 li
420.712 316.291 420.655 316.19 420.604 316.131 cv
420.553 316.071 420.462 316 420.319 316 cv
372.681 316 li
372.538 316 372.447 316.071 372.396 316.131 cv
372.345 316.19 372.288 316.291 372.31 316.432 cv
376.983 347.275 li
377.107 348.095 376.544 348.859 375.725 348.983 cv
374.911 349.097 374.142 348.544 374.017 347.725 cv
369.343 316.881 li
369.195 315.907 369.479 314.921 370.121 314.175 cv
370.764 313.428 371.696 313 372.681 313 cv
420.319 313 li
421.304 313 422.236 313.428 422.879 314.175 cv
423.521 314.921 423.805 315.907 423.657 316.881 cv
418.983 347.725 li
418.87 348.468 418.231 349 417.502 349 cv
cp
f
380.788 331.655 mo
380.062 331.655 379.424 331.127 379.308 330.387 cv
377.018 315.731 li
376.89 314.913 377.45 314.146 378.269 314.018 cv
379.081 313.901 379.854 314.45 379.982 315.269 cv
382.272 329.924 li
382.4 330.742 381.84 331.51 381.021 331.638 cv
380.943 331.649 380.865 331.655 380.788 331.655 cv
cp
f
388.294 336.158 mo
387.529 336.158 386.875 335.575 386.803 334.798 cv
385.007 315.64 li
384.93 314.815 385.535 314.084 386.36 314.007 cv
387.172 313.929 387.916 314.535 387.993 315.36 cv
389.789 334.519 li
389.866 335.343 389.261 336.074 388.436 336.151 cv
388.389 336.156 388.341 336.158 388.294 336.158 cv
cp
f
409.502 349 mo
409.425 349 409.347 348.994 409.269 348.982 cv
408.45 348.854 407.89 348.087 408.018 347.269 cv
413.018 315.269 li
413.146 314.45 413.915 313.9 414.731 314.018 cv
415.55 314.146 416.11 314.913 415.982 315.731 cv
410.982 347.731 li
410.866 348.472 410.229 349 409.502 349 cv
cp
f
403.502 349 mo
403.455 349 403.407 348.998 403.36 348.993 cv
402.535 348.916 401.93 348.185 402.007 347.36 cv
405.007 315.36 li
405.083 314.535 405.822 313.931 406.64 314.007 cv
407.465 314.084 408.07 314.815 407.993 315.64 cv
404.993 347.64 li
404.921 348.417 404.267 349 403.502 349 cv
cp
f
396.5 349 mo
395.672 349 395 348.328 395 347.5 cv
395 329.5 li
395 328.672 395.672 328 396.5 328 cv
397.328 328 398 328.672 398 329.5 cv
398 347.5 li
398 348.328 397.328 349 396.5 349 cv
cp
f
396.5 416 mo
395.121 416 394 417.121 394 418.5 cv
394 419.879 395.121 421 396.5 421 cv
397.879 421 399 419.879 399 418.5 cv
399 417.121 397.879 416 396.5 416 cv
cp
396.5 424 mo
393.468 424 391 421.532 391 418.5 cv
391 415.468 393.468 413 396.5 413 cv
399.532 413 402 415.468 402 418.5 cv
402 421.532 399.532 424 396.5 424 cv
cp
f
557.932 326 mo
556.313 326 555 327.313 555 328.932 cv
555 332.5 li
555.063 332.563 li
556.761 334.261 557.067 336.872 555.883 338.96 cv
553.084 343.893 550.867 349.297 549.162 355 cv
555.913 355 li
557.438 355 558.556 356.404 558.154 357.836 cv
555.534 367.185 554.313 377.244 554.043 387.785 cv
554.012 389.015 552.989 390 551.725 390 cv
545.38 390 li
545.147 393.898 li
545.38 399.852 547.454 404 552.317 404 cv
567.619 404 li
569.803 404 571.526 402.11 571.289 399.939 cv
571.146 398.627 570.904 397.404 570.5 397 cv
569.5 396 565.5 394 565.5 394 cv
567.5 371 li
570.5 370 li
570.5 370 570.863 366.909 572 363.5 cv
573 360.5 575.137 357.932 578.5 358 cv
593.295 358 li
599.5 363 li
606 363 li
606 326 li
557.932 326 li
cp
.545098 .85098 .94902 rgb
f
549.5 355 mo
556.413 355 li
557.938 355 559.056 356.404 558.655 357.836 cv
556.034 367.185 554.813 377.244 554.543 387.786 cv
554.512 389.015 553.489 390 552.225 390 cv
545.5 390 li
545 380.764 547 366.181 549.5 355 cv
cp
1 .462745 .470588 rgb
f
571.5 369 mo
578.5 369 li
578.5 365.355 578.5 361.712 580.5 358.979 cv
575.055 357.869 571.898 360.926 571.5 369 cv
cp
f
557 331.922 mo
558.822 334.12 559.1 337.21 557.685 339.704 cv
549.828 353.553 545.954 372.729 546.774 393.7 cv
546.989 399.208 548.812 402 552.189 402 cv
567.619 402 li
568.244 402 568.842 401.733 569.259 401.268 cv
569.673 400.806 569.865 400.214 569.798 399.603 cv
569.64 398.157 569.443 397.64 569.383 397.507 cv
568.777 396.964 566.588 395.722 564.829 394.842 cv
564.279 394.566 563.952 393.983 564.006 393.37 cv
566.006 370.37 li
566.058 369.774 566.458 369.266 567.025 369.077 cv
569.258 368.333 li
569.62 366.968 570.36 364.188 570.677 363.063 cv
572.017 358.297 574.694 355.905 578.53 356 cv
593.295 356 li
593.638 356 593.97 356.117 594.236 356.332 cv
600.029 361 li
610.974 361 li
615.563 357.329 li
615.829 357.116 616.159 357 616.5 357 cv
618.481 357 619 356.887 619 354.137 cv
619 328.258 li
619 327.564 618.436 327 617.742 327 cv
558.432 327 li
557.643 327 557 327.643 557 328.432 cv
557 331.922 li
cp
567.619 405 mo
552.189 405 li
549.211 405 544.157 403.547 543.776 393.817 cv
542.935 372.295 546.947 352.552 555.075 338.224 cv
555.934 336.711 555.698 334.819 554.503 333.624 cv
554.222 333.343 554 332.897 554 332.5 cv
554 328.432 li
554 325.988 555.988 324 558.432 324 cv
617.742 324 li
620.09 324 622 325.91 622 328.258 cv
622 354.137 li
622 358.104 620.554 359.833 617.041 359.988 cv
612.438 363.671 li
612.171 363.884 611.841 364 611.5 364 cv
599.5 364 li
599.157 364 598.825 363.883 598.559 363.668 cv
592.766 359 li
578.5 359 li
576.847 358.984 574.798 359.491 573.565 363.875 cv
573.14 365.385 571.95 369.884 571.95 369.884 cv
571.821 370.372 571.454 370.763 570.975 370.923 cv
568.909 371.611 li
567.082 392.625 li
568.428 393.33 570.709 394.588 571.561 395.439 cv
572.19 396.068 572.555 397.217 572.78 399.276 cv
572.938 400.726 572.469 402.181 571.492 403.271 cv
570.507 404.369 569.095 405 567.619 405 cv
cp
.109804 .160784 .278431 rgb
f
626.5 348 mo
621.5 348 li
620.672 348 620 347.328 620 346.5 cv
620 345.672 620.672 345 621.5 345 cv
626.5 345 li
627.328 345 628 345.672 628 346.5 cv
628 347.328 627.328 348 626.5 348 cv
cp
f
626.5 333 mo
621.5 333 li
620.672 333 620 332.328 620 331.5 cv
620 330.672 620.672 330 621.5 330 cv
626.5 330 li
627.328 330 628 330.672 628 331.5 cv
628 332.328 627.328 333 626.5 333 cv
cp
f
629 347 mo
639.969 347 li
642.191 347 644 345.191 644 342.969 cv
644 335.031 li
644 332.809 642.191 331 639.969 331 cv
629 331 li
629 347 li
cp
639.969 350 mo
627.5 350 li
626.672 350 626 349.328 626 348.5 cv
626 329.5 li
626 328.672 626.672 328 627.5 328 cv
639.969 328 li
643.846 328 647 331.154 647 335.031 cv
647 342.969 li
647 346.846 643.846 350 639.969 350 cv
cp
f
645.501 347 mo
644.951 347 644.421 346.696 644.158 346.171 cv
643.788 345.43 644.088 344.529 644.829 344.158 cv
649.077 342.034 li
649.646 341.75 650 341.178 650 340.541 cv
650 337.646 li
650 336.959 649.588 336.351 648.95 336.096 cv
645.943 334.893 li
645.174 334.585 644.8 333.712 645.107 332.943 cv
645.415 332.174 646.291 331.801 647.057 332.107 cv
650.064 333.311 li
651.848 334.024 653 335.726 653 337.646 cv
653 340.541 li
653 342.321 652.011 343.922 650.419 344.718 cv
646.171 346.842 li
645.955 346.949 645.727 347 645.501 347 cv
cp
f
605.5 358 mo
604.672 358 604 357.328 604 356.5 cv
604 336.5 li
604 335.672 604.672 335 605.5 335 cv
606.328 335 607 335.672 607 336.5 cv
607 356.5 li
607 357.328 606.328 358 605.5 358 cv
cp
f
605.5 332 mo
604.672 332 604 331.328 604 330.5 cv
604 326.5 li
604 325.672 604.672 325 605.5 325 cv
606.328 325 607 325.672 607 326.5 cv
607 330.5 li
607 331.328 606.328 332 605.5 332 cv
cp
f
599.5 346 mo
595.5 346 li
594.672 346 594 345.328 594 344.5 cv
594 343.672 594.672 343 595.5 343 cv
599.5 343 li
600.328 343 601 343.672 601 344.5 cv
601 345.328 600.328 346 599.5 346 cv
cp
f
599.5 340 mo
595.5 340 li
594.672 340 594 339.328 594 338.5 cv
594 337.672 594.672 337 595.5 337 cv
599.5 337 li
600.328 337 601 337.672 601 338.5 cv
601 339.328 600.328 340 599.5 340 cv
cp
f
566.5 348 mo
559.5 348 li
558.672 348 558 347.328 558 346.5 cv
558 345.672 558.672 345 559.5 345 cv
566.5 345 li
567.328 345 568 345.672 568 346.5 cv
568 347.328 567.328 348 566.5 348 cv
cp
f
566.5 342 mo
562.5 342 li
561.672 342 561 341.328 561 340.5 cv
561 339.672 561.672 339 562.5 339 cv
566.5 339 li
567.328 339 568 339.672 568 340.5 cv
568 341.328 567.328 342 566.5 342 cv
cp
f
599.5 352 mo
595.5 352 li
594.672 352 594 351.328 594 350.5 cv
594 349.672 594.672 349 595.5 349 cv
599.5 349 li
600.328 349 601 349.672 601 350.5 cv
601 351.328 600.328 352 599.5 352 cv
cp
f
608.5 359 mo
592.5 359 li
591.672 359 591 358.328 591 357.5 cv
591 356.672 591.672 356 592.5 356 cv
608.5 356 li
609.328 356 610 356.672 610 357.5 cv
610 358.328 609.328 359 608.5 359 cv
cp
f
578.5 371 mo
571.5 371 li
570.672 371 570 370.328 570 369.5 cv
570 368.672 570.672 368 571.5 368 cv
577.004 368 li
577.032 364.326 577.271 360.641 579.252 357.668 cv
579.711 356.979 580.643 356.792 581.332 357.252 cv
582.021 357.712 582.208 358.643 581.748 359.332 cv
580 361.954 580 365.619 580 369.5 cv
580 370.328 579.328 371 578.5 371 cv
cp
f
664.5 341 mo
651.5 341 li
650.672 341 650 340.328 650 339.5 cv
650 338.672 650.672 338 651.5 338 cv
664.5 338 li
665.328 338 666 338.672 666 339.5 cv
666 340.328 665.328 341 664.5 341 cv
cp
f
552.225 392 mo
546.5 392 li
545.672 392 545 391.328 545 390.5 cv
545 389.672 545.672 389 546.5 389 cv
552.225 389 li
552.673 389 553.032 388.643 553.043 388.186 cv
553.337 376.42 554.699 366.226 557.208 357.021 cv
557.298 356.69 557.16 356.442 557.07 356.324 cv
556.978 356.203 556.77 356 556.413 356 cv
550.5 356 li
549.672 356 549 355.328 549 354.5 cv
549 353.672 549.672 353 550.5 353 cv
556.413 353 li
557.615 353 558.724 353.548 559.454 354.503 cv
560.18 355.452 560.416 356.658 560.103 357.81 cv
557.658 366.779 556.33 376.739 556.043 388.26 cv
555.99 390.357 554.313 392 552.225 392 cv
cp
f
564.5 411 mo
554.5 411 li
553.672 411 553 410.328 553 409.5 cv
553 404.5 li
553 403.672 553.672 403 554.5 403 cv
555.328 403 556 403.672 556 404.5 cv
556 408 li
563 408 li
563 404.5 li
563 403.672 563.672 403 564.5 403 cv
565.328 403 566 403.672 566 404.5 cv
566 409.5 li
566 410.328 565.328 411 564.5 411 cv
cp
f
593.499 429 mo
593.227 429 592.952 428.927 592.705 428.772 cv
589.305 426.646 584.452 427.203 579.314 427.792 cv
573.376 428.473 567.233 429.176 562.6 425.7 cv
555.421 420.316 557.94 410.526 558.051 410.112 cv
558.265 409.313 559.082 408.839 559.888 409.051 cv
560.687 409.265 561.162 410.085 560.95 410.885 cv
560.929 410.967 558.856 419.143 564.4 423.3 cv
568.076 426.059 573.369 425.452 578.973 424.812 cv
584.4 424.189 590.008 423.549 594.295 426.228 cv
594.997 426.667 595.211 427.593 594.772 428.295 cv
594.487 428.75 593.999 429 593.499 429 cv
cp
f
595.5 334 mo
557.5 334 li
556.672 334 556 333.328 556 332.5 cv
556 331.672 556.672 331 557.5 331 cv
595.5 331 li
596.328 331 597 331.672 597 332.5 cv
597 333.328 596.328 334 595.5 334 cv
cp
f
637.505 349 mo
636.677 349 636.005 348.329 636.005 347.501 cv
636 335.501 li
636 334.672 636.671 334 637.499 334 cv
638.328 334 639 334.671 639 335.499 cv
639.005 347.499 li
639.005 348.328 638.334 349 637.506 349 cv
637.505 349 637.505 349 637.505 349 cv
cp
f
380.619 608.713 mo
377 625 li
382.878 625.713 li
385.188 623.158 li
384.048 618.29 li
389.04 618.559 li
389.938 617.92 li
388.797 613.052 li
393.79 613.319 li
394.688 612.682 li
393.547 607.813 li
398.539 608.081 li
399.438 607.443 li
398.297 602.574 li
403.289 602.843 li
404.187 602.204 li
403.046 597.336 li
408.039 597.604 li
408.937 596.966 li
407.796 592.098 li
412.789 592.366 li
413.686 591.728 li
412.545 586.859 li
417.538 587.127 li
418.436 586.489 li
417.295 581.621 li
422.287 581.889 li
423.186 581.251 li
422.045 576.383 li
427.037 576.65 li
427.935 576.012 li
426.794 571.145 li
431.787 571.412 li
432.685 570.773 li
431.544 565.906 li
436.537 566.174 li
437.434 565.535 li
436.293 560.667 li
441.286 560.936 li
442.184 560.297 li
441.043 555.429 li
446.035 555.697 li
446.934 555.059 li
445.793 550.19 li
450.785 550.459 li
453.172 548.185 li
448.419 542.454 li
380.619 608.713 li
cp
.545098 .85098 .94902 rgb
f
358.742 636.869 mo
354.5 636.5 355.814 629.62 355.098 625.646 cv
353.883 618.912 349.564 614.436 353.5 610.5 cv
357.5 606.5 362.5 609.5 363.5 616.5 cv
364.815 625.708 364.513 637.37 358.742 636.869 cv
cp
371.159 594.468 mo
361.073 596.709 346.521 609.287 341.219 617.089 cv
340.479 618.178 340.65 619.63 341.635 620.504 cv
342.431 621.211 342.391 622.216 343.248 623.532 cv
345.17 626.486 343.324 634.603 348.706 644.291 cv
351.32 648.996 355.162 647.881 357.318 646.443 cv
372.777 635.512 li
373.764 634.808 374.453 633.761 374.711 632.576 cv
381 606.615 li
371.159 594.468 li
cp
1 .462745 .470588 rgb
f
368.546 592.167 mo
358.652 594.916 345.262 606.866 340.459 613.932 cv
340.141 614.401 340.213 615.011 340.631 615.382 cv
341.74 616.368 342.707 617.488 343.505 618.714 cv
344.419 620.118 344.754 622.593 345.219 626.019 cv
345.892 630.989 346.814 637.798 350.018 643.563 cv
350.808 644.985 351.752 645.838 352.823 646.098 cv
354.354 646.468 355.894 645.59 356.486 645.195 cv
371.911 634.287 li
372.591 633.802 373.066 633.08 373.245 632.257 cv
379.378 606.939 li
368.546 592.167 li
cp
353.601 649.189 mo
353.121 649.189 352.624 649.137 352.116 649.014 cv
350.197 648.548 348.608 647.204 347.395 645.02 cv
343.918 638.761 342.951 631.629 342.245 626.421 cv
341.881 623.73 341.536 621.188 340.99 620.351 cv
340.339 619.35 339.548 618.433 338.639 617.625 cv
337.104 616.264 336.82 613.951 337.978 612.246 cv
343.326 604.376 358.005 591.41 368.834 589.004 cv
369.415 588.872 370.017 589.1 370.369 589.581 cv
382.21 605.729 li
382.471 606.085 382.562 606.539 382.458 606.969 cv
376.169 632.93 li
375.839 634.447 374.941 635.811 373.648 636.732 cv
358.185 647.668 li
357.238 648.3 355.563 649.189 353.601 649.189 cv
cp
.109804 .160784 .278431 rgb
f
367.5 597 mo
366.672 597 366 597.672 366 598.5 cv
366 599.328 366.672 600 367.5 600 cv
368.328 600 369 599.328 369 598.5 cv
369 597.672 368.328 597 367.5 597 cv
cp
f
373.5 605 mo
372.672 605 372 605.672 372 606.5 cv
372 607.328 372.672 608 373.5 608 cv
374.328 608 375 607.328 375 606.5 cv
375 605.672 374.328 605 373.5 605 cv
cp
f
372.5 618 mo
371.672 618 371 618.672 371 619.5 cv
371 620.328 371.672 621 372.5 621 cv
373.328 621 374 620.328 374 619.5 cv
374 618.672 373.328 618 372.5 618 cv
cp
f
357.306 610.208 mo
356.181 610.208 355.22 610.901 354.561 611.561 cv
352.685 613.437 353.283 615.348 354.701 619.149 cv
355.381 620.97 356.15 623.032 356.574 625.379 cv
356.786 626.556 356.835 627.927 356.882 629.253 cv
357.029 633.379 357.352 635.242 358.872 635.375 cv
359.564 635.435 360.076 635.234 360.557 634.727 cv
362.652 632.513 363.238 625.272 362.015 616.712 cv
361.552 613.47 360.052 610.975 358.193 610.354 cv
357.889 610.253 357.592 610.208 357.306 610.208 cv
cp
359.093 638.385 mo
358.935 638.385 358.774 638.378 358.612 638.363 cv
354.191 637.979 354.014 632.997 353.884 629.36 cv
353.839 628.083 353.796 626.877 353.621 625.912 cv
353.246 623.83 352.557 621.983 351.891 620.198 cv
350.464 616.374 349.116 612.763 352.439 609.439 cv
354.425 607.453 356.87 606.75 359.143 607.509 cv
362.159 608.515 364.344 611.796 364.985 616.288 cv
365.513 619.981 366.91 632.377 362.735 636.789 cv
361.742 637.838 360.491 638.385 359.093 638.385 cv
cp
f
382.878 627.214 mo
382.833 627.214 382.788 627.212 382.743 627.208 cv
380.365 626.994 li
379.541 626.92 378.932 626.19 379.006 625.365 cv
379.08 624.54 379.802 623.93 380.635 624.006 cv
382.267 624.153 li
383.549 622.735 li
382.588 618.632 li
382.479 618.173 382.595 617.689 382.897 617.327 cv
383.201 616.965 383.658 616.776 384.128 616.792 cv
388.184 617.01 li
387.336 613.394 li
387.229 612.935 387.344 612.451 387.646 612.089 cv
387.949 611.727 388.415 611.533 388.877 611.554 cv
392.934 611.771 li
392.086 608.155 li
391.979 607.696 392.094 607.213 392.396 606.851 cv
392.7 606.489 393.154 606.308 393.627 606.315 cv
397.683 606.533 li
396.836 602.916 li
396.728 602.457 396.843 601.973 397.146 601.611 cv
397.449 601.25 397.911 601.064 398.376 601.076 cv
402.433 601.295 li
401.586 597.678 li
401.478 597.219 401.593 596.734 401.896 596.373 cv
402.199 596.011 402.668 595.821 403.126 595.838 cv
407.183 596.057 li
406.336 592.439 li
406.228 591.98 406.343 591.496 406.646 591.135 cv
406.949 590.772 407.391 590.596 407.877 590.6 cv
411.932 590.818 li
411.084 587.201 li
410.977 586.742 411.092 586.258 411.395 585.896 cv
411.697 585.535 412.165 585.353 412.625 585.361 cv
416.682 585.58 li
415.834 581.963 li
415.727 581.504 415.842 581.021 416.145 580.658 cv
416.448 580.296 416.904 580.109 417.375 580.123 cv
421.432 580.341 li
420.584 576.725 li
420.477 576.266 420.592 575.782 420.895 575.42 cv
421.198 575.058 421.661 574.866 422.125 574.885 cv
426.181 575.103 li
425.333 571.486 li
425.226 571.027 425.341 570.544 425.644 570.182 cv
425.947 569.82 426.418 569.641 426.874 569.646 cv
430.931 569.864 li
430.083 566.247 li
429.976 565.788 430.091 565.304 430.394 564.942 cv
430.697 564.581 431.141 564.397 431.625 564.407 cv
435.68 564.626 li
434.833 561.009 li
434.725 560.55 434.84 560.065 435.143 559.704 cv
435.446 559.342 435.915 559.154 436.373 559.169 cv
440.43 559.388 li
439.583 555.771 li
439.475 555.312 439.59 554.827 439.893 554.466 cv
440.196 554.104 440.654 553.911 441.123 553.931 cv
445.18 554.149 li
444.333 550.532 li
444.225 550.073 444.34 549.59 444.643 549.228 cv
444.945 548.866 445.411 548.686 445.873 548.692 cv
450.219 548.926 li
451.123 548.064 li
446.499 542.488 li
372.015 592.489 li
371.328 592.952 370.395 592.77 369.934 592.08 cv
369.472 591.393 369.655 590.461 370.343 589.999 cv
445.952 539.242 li
446.594 538.813 447.452 538.938 447.942 539.529 cv
454.326 547.227 li
454.83 547.834 454.777 548.727 454.206 549.271 cv
451.819 551.544 li
451.521 551.828 451.106 551.974 450.705 551.956 cv
447.71 551.795 li
448.394 554.717 li
448.533 555.31 448.3 555.928 447.804 556.28 cv
446.906 556.919 li
446.63 557.116 446.303 557.209 445.956 557.195 cv
442.96 557.034 li
443.644 559.955 li
443.783 560.548 443.55 561.166 443.054 561.519 cv
442.156 562.157 li
441.88 562.354 441.547 562.452 441.206 562.434 cv
438.21 562.272 li
438.894 565.193 li
439.033 565.786 438.8 566.404 438.304 566.757 cv
437.406 567.396 li
437.13 567.593 436.804 567.684 436.455 567.672 cv
433.461 567.511 li
434.146 570.432 li
434.284 571.024 434.051 571.643 433.555 571.995 cv
432.657 572.634 li
432.381 572.831 432.049 572.927 431.707 572.91 cv
428.711 572.749 li
429.396 575.671 li
429.534 576.264 429.3 576.883 428.804 577.235 cv
427.906 577.873 li
427.63 578.069 427.302 578.167 426.957 578.148 cv
423.962 577.987 li
424.646 580.909 li
424.785 581.502 424.551 582.121 424.055 582.474 cv
423.157 583.111 li
422.881 583.308 422.548 583.396 422.208 583.387 cv
419.212 583.226 li
419.896 586.147 li
420.035 586.74 419.802 587.358 419.306 587.711 cv
418.408 588.35 li
418.132 588.547 417.794 588.646 417.458 588.626 cv
414.462 588.465 li
415.146 591.386 li
415.285 591.979 415.052 592.597 414.556 592.949 cv
413.658 593.588 li
413.383 593.785 413.063 593.876 412.707 593.864 cv
409.713 593.703 li
410.396 596.624 li
410.536 597.217 410.303 597.835 409.807 598.188 cv
408.909 598.826 li
408.633 599.022 408.309 599.12 407.958 599.103 cv
404.963 598.941 li
405.646 601.862 li
405.786 602.455 405.553 603.073 405.057 603.426 cv
404.159 604.064 li
403.884 604.262 403.565 604.351 403.208 604.341 cv
400.213 604.18 li
400.896 607.101 li
401.036 607.693 400.803 608.311 400.307 608.664 cv
399.41 609.303 li
399.135 609.5 398.798 609.595 398.46 609.579 cv
395.464 609.418 li
396.148 612.34 li
396.287 612.933 396.053 613.552 395.557 613.904 cv
394.659 614.542 li
394.383 614.738 394.048 614.828 393.71 614.817 cv
390.714 614.656 li
391.398 617.578 li
391.537 618.171 391.303 618.79 390.807 619.143 cv
389.909 619.78 li
389.633 619.977 389.293 620.069 388.96 620.056 cv
385.965 619.895 li
386.648 622.816 li
386.761 623.295 386.631 623.799 386.301 624.164 cv
383.99 626.72 li
383.705 627.036 383.3 627.214 382.878 627.214 cv
cp
f
635.768 615.209 mo
635.085 615.209 634.468 614.741 634.308 614.048 cv
621.764 559.964 li
621.495 558.808 620.479 558 619.292 558 cv
617.5 558 li
616.672 558 616 557.328 616 556.5 cv
616 555.672 616.672 555 617.5 555 cv
619.292 555 li
621.884 555 624.102 556.763 624.686 559.286 cv
637.229 613.37 li
637.417 614.177 636.914 614.983 636.107 615.17 cv
635.993 615.196 635.88 615.209 635.768 615.209 cv
cp
f
644.409 651 mo
626.591 651 li
622.772 624 li
648.228 624 li
644.409 651 li
cp
1 .462745 .470588 rgb
f
610.499 653 mo
609.816 653 609.199 652.532 609.039 651.839 cv
603.385 627.458 li
603.197 626.651 603.7 625.845 604.507 625.658 cv
605.313 625.469 606.119 625.972 606.307 626.78 cv
611.961 651.161 li
612.148 651.968 611.646 652.774 610.839 652.961 cv
610.725 652.987 610.611 653 610.499 653 cv
cp
.109804 .160784 .278431 rgb
f
599.913 607.355 mo
599.23 607.355 598.613 606.888 598.453 606.194 cv
596.127 596.164 li
595.939 595.357 596.442 594.551 597.249 594.364 cv
598.055 594.177 598.861 594.679 599.049 595.486 cv
601.375 605.517 li
601.563 606.323 601.06 607.13 600.253 607.316 cv
600.139 607.343 600.025 607.355 599.913 607.355 cv
cp
f
595.453 588.126 mo
594.771 588.126 594.153 587.658 593.993 586.965 cv
591.516 576.284 li
591.328 575.478 591.831 574.671 592.638 574.484 cv
593.444 574.297 594.25 574.798 594.438 575.606 cv
596.915 586.287 li
597.103 587.094 596.6 587.9 595.793 588.087 cv
595.679 588.113 595.565 588.126 595.453 588.126 cv
cp
f
590.619 567.142 mo
589.937 567.142 589.319 566.674 589.159 565.98 cv
587.764 559.964 li
587.495 558.808 586.479 558 585.292 558 cv
583.5 558 li
582.672 558 582 557.328 582 556.5 cv
582 555.672 582.672 555 583.5 555 cv
585.292 555 li
587.884 555 590.102 556.763 590.686 559.286 cv
592.081 565.303 li
592.269 566.109 591.766 566.916 590.959 567.103 cv
590.845 567.129 590.731 567.142 590.619 567.142 cv
cp
f
613.5 574 mo
580.5 574 li
581.5 570 li
614.5 570 li
613.5 574 li
cp
.545098 .85098 .94902 rgb
f
609.5 594 mo
576.5 594 li
577.5 590 li
610.5 590 li
609.5 594 li
cp
f
606.5 614 mo
573.5 614 li
574.5 610 li
607.5 610 li
606.5 614 li
cp
f
602.5 634 mo
569.5 634 li
570.5 630 li
603.5 630 li
602.5 634 li
cp
f
658.5 654 mo
550.5 654 li
549.672 654 549 653.328 549 652.5 cv
549 651.672 549.672 651 550.5 651 cv
658.5 651 li
659.328 651 660 651.672 660 652.5 cv
660 653.328 659.328 654 658.5 654 cv
cp
.109804 .160784 .278431 rgb
f
600.502 653 mo
600.417 653 600.331 652.993 600.244 652.978 cv
599.428 652.837 598.881 652.061 599.022 651.244 cv
617.022 547.275 li
617.497 544.409 617.112 542.137 615.906 540.714 cv
614.941 539.577 613.448 539 611.469 539 cv
594.531 539 li
590.021 539 586.904 542.199 585.979 547.776 cv
567.978 651.756 li
567.836 652.572 567.059 653.125 566.244 652.978 cv
565.428 652.837 564.881 652.061 565.022 651.244 cv
583.022 547.275 li
584.192 540.219 588.495 536 594.531 536 cv
611.469 536 li
614.33 536 616.655 536.959 618.194 538.774 cv
619.988 540.89 620.605 544.003 619.979 547.776 cv
601.978 651.756 li
601.852 652.485 601.218 653 600.502 653 cv
cp
f
613.5 577 mo
581.5 577 li
580.672 577 580 576.328 580 575.5 cv
580 574.672 580.672 574 581.5 574 cv
613.5 574 li
614.328 574 615 574.672 615 575.5 cv
615 576.328 614.328 577 613.5 577 cv
cp
f
609.5 597 mo
577.5 597 li
576.672 597 576 596.328 576 595.5 cv
576 594.672 576.672 594 577.5 594 cv
609.5 594 li
610.328 594 611 594.672 611 595.5 cv
611 596.328 610.328 597 609.5 597 cv
cp
f
606.5 617 mo
574.5 617 li
573.672 617 573 616.328 573 615.5 cv
573 614.672 573.672 614 574.5 614 cv
606.5 614 li
607.328 614 608 614.672 608 615.5 cv
608 616.328 607.328 617 606.5 617 cv
cp
f
602.5 637 mo
570.5 637 li
569.672 637 569 636.328 569 635.5 cv
569 634.672 569.672 634 570.5 634 cv
602.5 634 li
603.328 634 604 634.672 604 635.5 cv
604 636.328 603.328 637 602.5 637 cv
cp
f
644.411 652 mo
644.339 652 644.265 651.995 644.191 651.984 cv
643.372 651.863 642.805 651.102 642.925 650.282 cv
646.743 624.282 li
646.863 623.462 647.624 622.896 648.445 623.016 cv
649.265 623.137 649.832 623.898 649.712 624.718 cv
645.894 650.718 li
645.784 651.464 645.143 652 644.411 652 cv
cp
f
623.751 632.677 mo
623.019 632.677 622.378 632.141 622.269 631.395 cv
621.288 624.718 li
621.168 623.898 621.735 623.137 622.555 623.016 cv
623.367 622.899 624.137 623.463 624.257 624.282 cv
625.237 630.959 li
625.357 631.778 624.79 632.54 623.971 632.661 cv
623.897 632.672 623.823 632.677 623.751 632.677 cv
cp
f
626.589 652 mo
625.857 652 625.216 651.464 625.106 650.718 cv
623.113 637.147 li
622.993 636.328 623.56 635.566 624.38 635.445 cv
625.195 635.32 625.961 635.892 626.082 636.712 cv
628.075 650.282 li
628.195 651.102 627.629 651.863 626.809 651.984 cv
626.735 651.995 626.661 652 626.589 652 cv
cp
f
622.5 638 mo
620.09 638 618.385 637.286 617.432 635.879 cv
616.027 633.804 616.992 631.229 617.107 630.943 cv
617.415 630.174 618.289 629.802 619.057 630.107 cv
619.826 630.415 620.2 631.288 619.893 632.057 cv
619.761 632.4 619.475 633.555 619.921 634.203 cv
620.273 634.717 621.189 635 622.5 635 cv
626.35 635 631.479 630.286 634.214 625.729 cv
634.641 625.018 635.563 624.786 636.271 625.214 cv
636.982 625.64 637.213 626.562 636.786 627.271 cv
633.588 632.603 627.653 638 622.5 638 cv
cp
f
649.189 626 mo
640.5 626 li
639.672 626 639 625.328 639 624.5 cv
639 623.672 639.672 623 640.5 623 cv
649 623 li
649 620 li
622 620 li
622 623 li
630.5 623 li
631.328 623 632 623.672 632 624.5 cv
632 625.328 631.328 626 630.5 626 cv
621.811 626 li
620.261 626 619 624.739 619 623.189 cv
619 619.811 li
619 618.261 620.261 617 621.811 617 cv
649.189 617 li
650.739 617 652 618.261 652 619.811 cv
652 623.189 li
652 624.739 650.739 626 649.189 626 cv
cp
f
846 626 mo
816 626 li
816 557 li
846 557 li
846 626 li
cp
807 626 mo
777 626 li
777 557 li
807 557 li
807 626 li
cp
769 549 mo
769 634 li
854 634 li
854 549 li
769 549 li
cp
1 .462745 .470588 rgb
f
854.5 635 mo
853.672 635 853 634.328 853 633.5 cv
853 550 li
770 550 li
770 629.5 li
770 630.328 769.328 631 768.5 631 cv
767.672 631 767 630.328 767 629.5 cv
767 548.5 li
767 547.672 767.672 547 768.5 547 cv
854.5 547 li
855.328 547 856 547.672 856 548.5 cv
856 633.5 li
856 634.328 855.328 635 854.5 635 cv
cp
.109804 .160784 .278431 rgb
f
846.5 628 mo
815.5 628 li
814.672 628 814 627.328 814 626.5 cv
814 594.5 li
814 593.672 814.672 593 815.5 593 cv
816.328 593 817 593.672 817 594.5 cv
817 625 li
845 625 li
845 558 li
817 558 li
817 588.5 li
817 589.328 816.328 590 815.5 590 cv
814.672 590 814 589.328 814 588.5 cv
814 556.5 li
814 555.672 814.672 555 815.5 555 cv
846.5 555 li
847.328 555 848 555.672 848 556.5 cv
848 626.5 li
848 627.328 847.328 628 846.5 628 cv
cp
f
778 625 mo
806 625 li
806 558 li
778 558 li
778 625 li
cp
807.5 628 mo
776.5 628 li
775.672 628 775 627.328 775 626.5 cv
775 556.5 li
775 555.672 775.672 555 776.5 555 cv
807.5 555 li
808.328 555 809 555.672 809 556.5 cv
809 626.5 li
809 627.328 808.328 628 807.5 628 cv
cp
f
819.5 591 mo
812.5 591 li
811.672 591 811 590.328 811 589.5 cv
811 588.672 811.672 588 812.5 588 cv
819.5 588 li
820.328 588 821 588.672 821 589.5 cv
821 590.328 820.328 591 819.5 591 cv
cp
f
864.5 645 mo
778.5 645 li
777.672 645 777 644.328 777 643.5 cv
777 642.672 777.672 642 778.5 642 cv
863 642 li
863 636 li
759 636 li
759 642 li
771.5 642 li
772.328 642 773 642.672 773 643.5 cv
773 644.328 772.328 645 771.5 645 cv
757.5 645 li
756.672 645 756 644.328 756 643.5 cv
756 634.5 li
756 633.672 756.672 633 757.5 633 cv
864.5 633 li
865.328 633 866 633.672 866 634.5 cv
866 643.5 li
866 644.328 865.328 645 864.5 645 cv
cp
f
784.5 591 mo
784.116 591 783.732 590.854 783.439 590.561 cv
782.854 589.975 782.854 589.025 783.439 588.439 cv
796.439 575.439 li
797.025 574.854 797.975 574.854 798.561 575.439 cv
799.146 576.025 799.146 576.975 798.561 577.561 cv
785.561 590.561 li
785.268 590.854 784.884 591 784.5 591 cv
cp
.545098 .85098 .94902 rgb
f
792 595.5 mo
791.616 595.5 791.232 595.354 790.939 595.061 cv
790.354 594.475 790.354 593.525 790.939 592.939 cv
795.439 588.439 li
796.025 587.854 796.975 587.854 797.561 588.439 cv
798.146 589.025 798.146 589.975 797.561 590.561 cv
793.061 595.061 li
792.768 595.354 792.384 595.5 792 595.5 cv
cp
f
825.5 601 mo
825.116 601 824.732 600.854 824.439 600.561 cv
823.854 599.975 823.854 599.025 824.439 598.439 cv
837.439 585.439 li
838.025 584.854 838.975 584.854 839.561 585.439 cv
840.146 586.025 840.146 586.975 839.561 587.561 cv
826.561 600.561 li
826.268 600.854 825.884 601 825.5 601 cv
cp
f
833 605.5 mo
832.616 605.5 832.232 605.354 831.939 605.061 cv
831.354 604.475 831.354 603.525 831.939 602.939 cv
836.439 598.439 li
837.025 597.854 837.975 597.854 838.561 598.439 cv
839.146 599.025 839.146 599.975 838.561 600.561 cv
834.061 605.061 li
833.768 605.354 833.384 605.5 833 605.5 cv
cp
f
220.168 552 mo
169.832 552 li
168.268 552 167 553.268 167 554.832 cv
167 567.168 li
167 568.732 168.268 570 169.832 570 cv
220.168 570 li
221.732 570 223 568.732 223 567.168 cv
223 554.832 li
223 553.268 221.732 552 220.168 552 cv
cp
f
196.563 651 mo
191.437 651 li
188.986 651 187 649.014 187 646.563 cv
187 611 li
201 611 li
201 646.563 li
201 649.014 199.014 651 196.563 651 cv
cp
1 .462745 .470588 rgb
f
186 608.879 mo
187.561 610.439 li
187.842 610.721 188 611.103 188 611.5 cv
188 646.063 li
188 647.683 189.317 649 190.937 649 cv
196.063 649 li
197.683 649 199 647.683 199 646.063 cv
199 611.5 li
199 611.103 199.158 610.721 199.439 610.439 cv
201 608.879 li
201 605 li
186 605 li
186 608.879 li
cp
196.063 652 mo
190.937 652 li
187.663 652 185 649.337 185 646.063 cv
185 612.121 li
183.439 610.561 li
183.158 610.279 183 609.897 183 609.5 cv
183 603.5 li
183 602.672 183.672 602 184.5 602 cv
202.5 602 li
203.328 602 204 602.672 204 603.5 cv
204 609.5 li
204 609.897 203.842 610.279 203.561 610.561 cv
202 612.121 li
202 646.063 li
202 649.337 199.337 652 196.063 652 cv
cp
.109804 .160784 .278431 rgb
f
193.5 604 mo
192.672 604 192 603.328 192 602.5 cv
192 593.492 li
156.76 578.516 li
153.868 577.286 152 574.462 152 571.32 cv
152 561.789 li
152 559.148 154.148 557 156.789 557 cv
160.5 557 li
161.328 557 162 557.672 162 558.5 cv
162 559.328 161.328 560 160.5 560 cv
156.789 560 li
155.803 560 155 560.803 155 561.789 cv
155 571.32 li
155 573.257 156.151 574.997 157.934 575.754 cv
194.087 591.119 li
194.641 591.354 195 591.898 195 592.5 cv
195 602.5 li
195 603.328 194.328 604 193.5 604 cv
cp
f
165.5 564 mo
161.5 564 li
160.672 564 160 563.328 160 562.5 cv
160 554.5 li
160 553.672 160.672 553 161.5 553 cv
165.5 553 li
166.328 553 167 553.672 167 554.5 cv
167 555.328 166.328 556 165.5 556 cv
163 556 li
163 561 li
165.5 561 li
166.328 561 167 561.672 167 562.5 cv
167 563.328 166.328 564 165.5 564 cv
cp
f
169.332 548 mo
168.598 548 168 548.598 168 549.332 cv
168 567.668 li
168 568.402 168.598 569 169.332 569 cv
220.668 569 li
221.402 569 222 568.402 222 567.668 cv
222 549.332 li
222 548.598 221.402 548 220.668 548 cv
169.332 548 li
cp
220.668 572 mo
169.332 572 li
166.943 572 165 570.057 165 567.668 cv
165 549.332 li
165 546.943 166.943 545 169.332 545 cv
220.668 545 li
223.057 545 225 546.943 225 549.332 cv
225 567.668 li
225 570.057 223.057 572 220.668 572 cv
cp
f
194.5 613 mo
187.5 613 li
186.672 613 186 612.328 186 611.5 cv
186 610.672 186.672 610 187.5 610 cv
194.5 610 li
195.328 610 196 610.672 196 611.5 cv
196 612.328 195.328 613 194.5 613 cv
cp
f
175.5 558 mo
172.5 558 li
171.672 558 171 557.328 171 556.5 cv
171 555.672 171.672 555 172.5 555 cv
175.5 555 li
176.328 555 177 555.672 177 556.5 cv
177 557.328 176.328 558 175.5 558 cv
cp
f
183.5 561 mo
180.5 561 li
179.672 561 179 560.328 179 559.5 cv
179 558.672 179.672 558 180.5 558 cv
183.5 558 li
184.328 558 185 558.672 185 559.5 cv
185 560.328 184.328 561 183.5 561 cv
cp
f
192.5 558 mo
189.5 558 li
188.672 558 188 557.328 188 556.5 cv
188 555.672 188.672 555 189.5 555 cv
192.5 555 li
193.328 555 194 555.672 194 556.5 cv
194 557.328 193.328 558 192.5 558 cv
cp
f
175.5 565 mo
172.5 565 li
171.672 565 171 564.328 171 563.5 cv
171 562.672 171.672 562 172.5 562 cv
175.5 562 li
176.328 562 177 562.672 177 563.5 cv
177 564.328 176.328 565 175.5 565 cv
cp
f
192.5 565 mo
189.5 565 li
188.672 565 188 564.328 188 563.5 cv
188 562.672 188.672 562 189.5 562 cv
192.5 562 li
193.328 562 194 562.672 194 563.5 cv
194 564.328 193.328 565 192.5 565 cv
cp
f
209.5 565 mo
206.5 565 li
205.672 565 205 564.328 205 563.5 cv
205 562.672 205.672 562 206.5 562 cv
209.5 562 li
210.328 562 211 562.672 211 563.5 cv
211 564.328 210.328 565 209.5 565 cv
cp
f
200.5 561 mo
197.5 561 li
196.672 561 196 560.328 196 559.5 cv
196 558.672 196.672 558 197.5 558 cv
200.5 558 li
201.328 558 202 558.672 202 559.5 cv
202 560.328 201.328 561 200.5 561 cv
cp
f
187 575 mo
223 575 li
223 598 li
223 598 217.476 599.901 216 594 cv
215 590 213 586 210 588 cv
207 590 203 589 201 585 cv
199 581 194 581 190 580 cv
186.119 579.03 187 575 187 575 cv
cp
.545098 .85098 .94902 rgb
f
146 385 mo
146 406 li
160 406 li
160 385 li
146 385 li
cp
f
218 385 mo
218 406 li
232 406 li
232 385 li
218 385 li
cp
f
182 382 mo
182 411 li
196 411 li
196 382 li
182 382 li
cp
1 .462745 .470588 rgb
f
188.5 361 mo
186.566 361 185 359.434 185 357.5 cv
185 355.566 186.566 354 188.5 354 cv
190.434 354 192 355.566 192 357.5 cv
192 359.434 190.434 361 188.5 361 cv
cp
244 373 mo
242 342 li
136 342 li
134 373 li
168 373 li
168 368 li
209 368 li
209 373 li
244 373 li
cp
f
245.5 419 mo
132.5 419 li
131.672 419 131 418.328 131 417.5 cv
131 416.672 131.672 416 132.5 416 cv
245.5 416 li
246.328 416 247 416.672 247 417.5 cv
247 418.328 246.328 419 245.5 419 cv
cp
.109804 .160784 .278431 rgb
f
240.5 418 mo
239.672 418 239 417.328 239 416.5 cv
239 373.5 li
239 372.672 239.672 372 240.5 372 cv
241.328 372 242 372.672 242 373.5 cv
242 416.5 li
242 417.328 241.328 418 240.5 418 cv
cp
f
209.5 418 mo
208.672 418 208 417.328 208 416.5 cv
208 368.5 li
208 367.672 208.672 367 209.5 367 cv
210.328 367 211 367.672 211 368.5 cv
211 416.5 li
211 417.328 210.328 418 209.5 418 cv
cp
f
168.5 418 mo
167.672 418 167 417.328 167 416.5 cv
167 368.5 li
167 367.672 167.672 367 168.5 367 cv
169.328 367 170 367.672 170 368.5 cv
170 416.5 li
170 417.328 169.328 418 168.5 418 cv
cp
f
137.5 417 mo
136.672 417 136 416.328 136 415.5 cv
136 373.5 li
136 372.672 136.672 372 137.5 372 cv
138.328 372 139 372.672 139 373.5 cv
139 415.5 li
139 416.328 138.328 417 137.5 417 cv
cp
f
244.5 374 mo
211.5 374 li
210.672 374 210 373.328 210 372.5 cv
210 371.672 210.672 371 211.5 371 cv
242.912 371 li
241.083 339 li
136.917 339 li
135.088 371 li
163.5 371 li
164.328 371 165 371.672 165 372.5 cv
165 373.328 164.328 374 163.5 374 cv
133.5 374 li
133.087 374 132.693 373.83 132.409 373.53 cv
132.126 373.229 131.979 372.826 132.002 372.414 cv
134.002 337.414 li
134.048 336.62 134.705 336 135.5 336 cv
242.5 336 li
243.295 336 243.952 336.62 243.998 337.414 cv
245.998 372.414 li
246.021 372.826 245.874 373.229 245.591 373.53 cv
245.307 373.83 244.913 374 244.5 374 cv
cp
f
147 405 mo
159 405 li
159 386 li
147 386 li
147 405 li
cp
160.5 408 mo
145.5 408 li
144.672 408 144 407.328 144 406.5 cv
144 384.5 li
144 383.672 144.672 383 145.5 383 cv
160.5 383 li
161.328 383 162 383.672 162 384.5 cv
162 406.5 li
162 407.328 161.328 408 160.5 408 cv
cp
f
196.5 412 mo
195.672 412 195 411.328 195 410.5 cv
195 383 li
183 383 li
183 410.5 li
183 411.328 182.328 412 181.5 412 cv
180.672 412 180 411.328 180 410.5 cv
180 381.5 li
180 380.672 180.672 380 181.5 380 cv
196.5 380 li
197.328 380 198 380.672 198 381.5 cv
198 410.5 li
198 411.328 197.328 412 196.5 412 cv
cp
f
212 369 mo
182.5 369 li
181.672 369 181 368.328 181 367.5 cv
181 366.672 181.672 366 182.5 366 cv
208.531 366 li
188.524 344.716 li
169.368 366 li
177.5 366 li
178.328 366 179 366.672 179 367.5 cv
179 368.328 178.328 369 177.5 369 cv
166 369 li
165.407 369 164.871 368.651 164.63 368.11 cv
164.389 367.569 164.489 366.937 164.885 366.496 cv
187.385 341.496 li
187.666 341.185 188.064 341.005 188.483 341 cv
188.906 341.002 189.306 341.167 189.593 341.473 cv
213.093 366.473 li
213.503 366.908 213.614 367.546 213.377 368.096 cv
213.14 368.645 212.599 369 212 369 cv
cp
f
204.5 413 mo
168.5 413 li
167.672 413 167 412.328 167 411.5 cv
167 410.672 167.672 410 168.5 410 cv
204.5 410 li
205.328 410 206 410.672 206 411.5 cv
206 412.328 205.328 413 204.5 413 cv
cp
f
184.5 398 mo
183.5 398 li
182.672 398 182 397.328 182 396.5 cv
182 395.672 182.672 395 183.5 395 cv
184.5 395 li
185.328 395 186 395.672 186 396.5 cv
186 397.328 185.328 398 184.5 398 cv
cp
f
213.5 338 mo
212.672 338 212 337.328 212 336.5 cv
212 330 li
208 330 li
208 332.5 li
208 333.328 207.328 334 206.5 334 cv
205.672 334 205 333.328 205 332.5 cv
205 328.5 li
205 327.672 205.672 327 206.5 327 cv
213.5 327 li
214.328 327 215 327.672 215 328.5 cv
215 336.5 li
215 337.328 214.328 338 213.5 338 cv
cp
f
152.5 407 mo
151.672 407 151 406.328 151 405.5 cv
151 393.5 li
151 392.672 151.672 392 152.5 392 cv
153.328 392 154 392.672 154 393.5 cv
154 405.5 li
154 406.328 153.328 407 152.5 407 cv
cp
f
152.5 390 mo
151.672 390 151 389.328 151 388.5 cv
151 385.5 li
151 384.672 151.672 384 152.5 384 cv
153.328 384 154 384.672 154 385.5 cv
154 388.5 li
154 389.328 153.328 390 152.5 390 cv
cp
f
219 405 mo
231 405 li
231 386 li
219 386 li
219 405 li
cp
232.5 408 mo
217.5 408 li
216.672 408 216 407.328 216 406.5 cv
216 384.5 li
216 383.672 216.672 383 217.5 383 cv
232.5 383 li
233.328 383 234 383.672 234 384.5 cv
234 406.5 li
234 407.328 233.328 408 232.5 408 cv
cp
f
224.5 407 mo
223.672 407 223 406.328 223 405.5 cv
223 393.5 li
223 392.672 223.672 392 224.5 392 cv
225.328 392 226 392.672 226 393.5 cv
226 405.5 li
226 406.328 225.328 407 224.5 407 cv
cp
f
224.5 390 mo
223.672 390 223 389.328 223 388.5 cv
223 385.5 li
223 384.672 223.672 384 224.5 384 cv
225.328 384 226 384.672 226 385.5 cv
226 388.5 li
226 389.328 225.328 390 224.5 390 cv
cp
f
188.5 355 mo
187.121 355 186 356.121 186 357.5 cv
186 358.879 187.121 360 188.5 360 cv
189.879 360 191 358.879 191 357.5 cv
191 356.121 189.879 355 188.5 355 cv
cp
188.5 363 mo
185.468 363 183 360.532 183 357.5 cv
183 354.468 185.468 352 188.5 352 cv
191.532 352 194 354.468 194 357.5 cv
194 360.532 191.532 363 188.5 363 cv
cp
f
152.5 395 mo
147.5 395 li
146.672 395 146 394.328 146 393.5 cv
146 392.672 146.672 392 147.5 392 cv
152.5 392 li
153.328 392 154 392.672 154 393.5 cv
154 394.328 153.328 395 152.5 395 cv
cp
f
224.5 395 mo
219.5 395 li
218.672 395 218 394.328 218 393.5 cv
218 392.672 218.672 392 219.5 392 cv
224.5 392 li
225.328 392 226 392.672 226 393.5 cv
226 394.328 225.328 395 224.5 395 cv
cp
f
631 787 mo
633.332 787.832 634.887 789.572 635 793 cv
615 793 li
615.248 789.099 615.258 788.145 618 787 cv
596 773 li
586 773 li
586 767 li
600 767 li
620 778.484 li
620 769.432 li
602 758 li
605 754 li
621 764 li
626.516 764 li
628.992 764 631 766.008 631 768.484 cv
631 787 li
cp
.545098 .85098 .94902 rgb
f
619 821 mo
588 821 li
574.192 821 565 810 563 801 cv
563 799 li
644 799 li
644 801 li
642 810 632.808 821 619 821 cv
cp
1 .462745 .470588 rgb
f
564 795 mo
564 795.5 li
564 808.458 574.542 819 587.5 819 cv
619.5 819 li
632.458 819 643 808.458 643 795.5 cv
643 795 li
564 795 li
cp
619.5 822 mo
587.5 822 li
572.888 822 561 810.112 561 795.5 cv
561 793.5 li
561 792.672 561.672 792 562.5 792 cv
644.5 792 li
645.328 792 646 792.672 646 793.5 cv
646 795.5 li
646 810.112 634.112 822 619.5 822 cv
cp
.109804 .160784 .278431 rgb
f
618.499 779 mo
618.243 779 617.985 778.936 617.748 778.798 cv
599.097 768 li
587.975 768 li
587.438 768 587 768.438 587 768.975 cv
587 772 li
589.5 772 li
590.328 772 591 772.672 591 773.5 cv
591 774.328 590.328 775 589.5 775 cv
585.5 775 li
584.672 775 584 774.328 584 773.5 cv
584 768.975 li
584 766.783 585.783 765 587.975 765 cv
599.5 765 li
599.764 765 600.023 765.069 600.252 765.202 cv
619.252 776.202 li
619.969 776.617 620.213 777.534 619.798 778.252 cv
619.521 778.731 619.017 779 618.499 779 cv
cp
f
618.313 787.783 mo
618.049 787.783 617.781 787.714 617.539 787.567 cv
596.691 775 li
594.5 775 li
593.672 775 593 774.328 593 773.5 cv
593 772.672 593.672 772 594.5 772 cv
597.108 772 li
597.381 772 597.649 772.074 597.883 772.216 cv
619.088 784.999 li
619.798 785.427 620.025 786.348 619.598 787.058 cv
619.316 787.524 618.82 787.783 618.313 787.783 cv
cp
f
594.5 780 mo
587.5 780 li
586.672 780 586 779.328 586 778.5 cv
586 774.5 li
586 773.672 586.672 773 587.5 773 cv
588.328 773 589 773.672 589 774.5 cv
589 777 li
593 777 li
593 773.5 li
593 772.672 593.672 772 594.5 772 cv
595.328 772 596 772.672 596 773.5 cv
596 778.5 li
596 779.328 595.328 780 594.5 780 cv
cp
f
635.277 793.915 mo
634.449 793.915 633.777 793.243 633.777 792.415 cv
633.777 789.98 631.797 788 629.362 788 cv
621.048 788 li
618.613 788 616.633 789.98 616.633 792.415 cv
616.633 793.243 615.961 793.915 615.133 793.915 cv
614.305 793.915 613.633 793.243 613.633 792.415 cv
613.633 788.326 616.959 785 621.048 785 cv
629.362 785 li
633.451 785 636.777 788.326 636.777 792.415 cv
636.777 793.243 636.105 793.915 635.277 793.915 cv
cp
f
631.5 788 mo
630.672 788 630 787.328 630 786.5 cv
630 769.331 li
630 766.943 628.057 765 625.669 765 cv
625.331 765 li
622.943 765 621 766.943 621 769.331 cv
621 780.5 li
621 781.328 620.328 782 619.5 782 cv
618.672 782 618 781.328 618 780.5 cv
618 769.331 li
618 765.289 621.289 762 625.331 762 cv
625.669 762 li
629.711 762 633 765.289 633 769.331 cv
633 786.5 li
633 787.328 632.328 788 631.5 788 cv
cp
f
630.5 776 mo
624.5 776 li
623.672 776 623 775.328 623 774.5 cv
623 773.672 623.672 773 624.5 773 cv
630.5 773 li
631.328 773 632 773.672 632 774.5 cv
632 775.328 631.328 776 630.5 776 cv
cp
f
618.313 770.474 mo
618.02 770.474 617.724 770.389 617.464 770.21 cv
602.671 760.041 li
601.759 759.413 601.157 758.466 600.978 757.374 cv
600.799 756.28 601.065 755.19 601.73 754.304 cv
601.874 754.111 li
603.176 752.379 605.591 751.979 607.38 753.21 cv
622.344 763.497 li
623.026 763.967 623.199 764.9 622.73 765.583 cv
622.261 766.266 621.327 766.438 620.645 765.97 cv
605.68 755.682 li
605.224 755.367 604.607 755.47 604.274 755.911 cv
604.131 756.104 li
603.961 756.33 603.893 756.608 603.938 756.888 cv
603.984 757.167 604.138 757.408 604.37 757.568 cv
619.163 767.737 li
619.846 768.207 620.019 769.141 619.55 769.823 cv
619.259 770.246 618.789 770.474 618.313 770.474 cv
cp
f
613.5 830 mo
595.5 830 li
594.672 830 594 829.328 594 828.5 cv
594 821.5 li
594 820.672 594.672 820 595.5 820 cv
596.328 820 597 820.672 597 821.5 cv
597 827 li
612 827 li
612 821.5 li
612 820.672 612.672 820 613.5 820 cv
614.328 820 615 820.672 615 821.5 cv
615 828.5 li
615 829.328 614.328 830 613.5 830 cv
cp
f
599.5 847 mo
598.672 847 598 846.328 598 845.5 cv
598 834.003 li
596.038 830.078 li
595.668 829.337 595.968 828.436 596.709 828.065 cv
597.451 827.697 598.352 827.996 598.722 828.736 cv
600.842 832.978 li
600.946 833.186 601 833.416 601 833.648 cv
601 845.5 li
601 846.328 600.328 847 599.5 847 cv
cp
f
608.5 844 mo
607.672 844 607 843.328 607 842.5 cv
607 833.648 li
607 833.416 607.054 833.186 607.158 832.978 cv
609.278 828.736 li
609.649 827.996 610.551 827.697 611.291 828.065 cv
612.032 828.436 612.332 829.337 611.962 830.078 cv
610 834.003 li
610 842.5 li
610 843.328 609.328 844 608.5 844 cv
cp
f
609.5 848 mo
597.5 848 li
596.672 848 596 847.328 596 846.5 cv
596 845.672 596.672 845 597.5 845 cv
609.5 845 li
610.328 845 611 845.672 611 846.5 cv
611 847.328 610.328 848 609.5 848 cv
cp
f
609.5 854 mo
597.5 854 li
596.672 854 596 853.328 596 852.5 cv
596 851.672 596.672 851 597.5 851 cv
609.5 851 li
610.328 851 611 851.672 611 852.5 cv
611 853.328 610.328 854 609.5 854 cv
cp
f
628.5 854 mo
616.5 854 li
615.672 854 615 853.328 615 852.5 cv
615 851.672 615.672 851 616.5 851 cv
628.5 851 li
629.328 851 630 851.672 630 852.5 cv
630 853.328 629.328 854 628.5 854 cv
cp
f
628.5 861 mo
616.5 861 li
615.672 861 615 860.328 615 859.5 cv
615 858.672 615.672 858 616.5 858 cv
628.5 858 li
629.328 858 630 858.672 630 859.5 cv
630 860.328 629.328 861 628.5 861 cv
cp
f
615.289 874 mo
611.711 874 li
604.15 874 598 867.85 598 860.289 cv
598 853.5 li
598 852.672 598.672 852 599.5 852 cv
600.328 852 601 852.672 601 853.5 cv
601 860.289 li
601 866.195 605.805 871 611.711 871 cv
615.289 871 li
621.195 871 626 866.195 626 860.289 cv
626 859.5 li
626 858.672 626.672 858 627.5 858 cv
628.328 858 629 858.672 629 859.5 cv
629 860.289 li
629 867.85 622.85 874 615.289 874 cv
cp
f
615.5 865 mo
611.5 865 li
609.019 865 607 862.981 607 860.5 cv
607 853.5 li
607 852.672 607.672 852 608.5 852 cv
609.328 852 610 852.672 610 853.5 cv
610 860.5 li
610 861.327 610.673 862 611.5 862 cv
615.5 862 li
616.327 862 617 861.327 617 860.5 cv
617 859.672 617.672 859 618.5 859 cv
619.328 859 620 859.672 620 860.5 cv
620 862.981 617.981 865 615.5 865 cv
cp
f
617.5 853 mo
616.672 853 616 852.328 616 851.5 cv
616 843.693 li
616 836.694 621.694 831 628.693 831 cv
633.5 831 li
634.328 831 635 831.672 635 832.5 cv
635 833.328 634.328 834 633.5 834 cv
628.693 834 li
623.349 834 619 838.349 619 843.693 cv
619 851.5 li
619 852.328 618.328 853 617.5 853 cv
cp
f
626.5 852 mo
625.672 852 625 851.328 625 850.5 cv
625 844.826 li
625 842.165 627.165 840 629.826 840 cv
632.5 840 li
633.328 840 634 840.672 634 841.5 cv
634 842.328 633.328 843 632.5 843 cv
629.826 843 li
628.819 843 628 843.819 628 844.826 cv
628 850.5 li
628 851.328 627.328 852 626.5 852 cv
cp
f
636 842 mo
639 842 li
639 832 li
636 832 li
636 842 li
cp
640.5 845 mo
634.5 845 li
633.672 845 633 844.328 633 843.5 cv
633 830.5 li
633 829.672 633.672 829 634.5 829 cv
640.5 829 li
641.328 829 642 829.672 642 830.5 cv
642 843.5 li
642 844.328 641.328 845 640.5 845 cv
cp
f
398 769.503 mo
390.973 769 li
387.127 764.104 381.185 760.953 374.5 760.953 cv
367.815 760.953 361.873 764.104 358.027 769 cv
352 769 li
352 858 li
358.527 858 li
362.374 862.922 368.315 866.091 375 866.091 cv
381.685 866.091 387.626 862.922 391.473 858 cv
398 858 li
398 844 li
390.82 844 li
387.743 840.857 li
384.667 844 li
378 844 li
378 852.385 li
378 853.829 376.829 855 375.385 855 cv
372.615 855 li
371.171 855 370 853.829 370 852.385 cv
370 842.668 li
368.003 841.266 366.764 838.846 367.038 836.152 cv
367.367 832.923 369.773 831.359 373 831 cv
376.322 830.63 379 831 380 835 cv
398 834.883 li
398 801.69 li
387 803.702 li
386.044 805.625 381.189 808.469 375.314 808.714 cv
366.662 809.075 359.079 801.945 359.001 793.286 cv
358.922 784.608 365.892 777.55 374.5 777.55 cv
381.121 777.55 389 780.567 390 791.632 cv
398 790.626 li
398 769.503 li
cp
1 .462745 .470588 rgb
f
430.884 825.623 mo
423.928 824.715 417.817 828.923 415.753 835 cv
379.5 835 li
375.5 841 li
377.5 845 li
384.5 845 li
387.5 842 li
390.5 845 li
397.5 845 li
400.5 841 li
403.5 845 li
416.125 845 li
418.262 849.997 423.221 853.5 429 853.5 cv
437.271 853.5 443.866 846.328 442.907 837.865 cv
442.194 831.571 437.165 826.443 430.884 825.623 cv
cp
.545098 .85098 .94902 rgb
f
397.5 830 mo
396.672 830 396 829.328 396 828.5 cv
396 801.5 li
396 800.672 396.672 800 397.5 800 cv
398.328 800 399 800.672 399 801.5 cv
399 828.5 li
399 829.328 398.328 830 397.5 830 cv
cp
.109804 .160784 .278431 rgb
f
374.5 867 mo
367.833 867 361.612 864.094 357.315 859 cv
351.5 859 li
350.672 859 350 858.328 350 857.5 cv
350 769.5 li
350 768.672 350.672 768 351.5 768 cv
357.315 768 li
361.61 762.906 367.831 760 374.5 760 cv
381.169 760 387.39 762.906 391.685 768 cv
397.5 768 li
398.328 768 399 768.672 399 769.5 cv
399 781.5 li
399 782.328 398.328 783 397.5 783 cv
396.672 783 396 782.328 396 781.5 cv
396 771 li
390.973 771 li
390.514 771 390.08 770.79 389.796 770.43 cv
386.064 765.708 380.49 763 374.5 763 cv
368.51 763 362.936 765.708 359.204 770.43 cv
358.92 770.79 358.486 771 358.027 771 cv
353 771 li
353 856 li
358.027 856 li
358.486 856 358.92 856.21 359.204 856.569 cv
362.937 861.292 368.512 864 374.5 864 cv
380.488 864 386.063 861.292 389.796 856.569 cv
390.08 856.21 390.514 856 390.973 856 cv
396 856 li
396 845.5 li
396 844.672 396.672 844 397.5 844 cv
398.328 844 399 844.672 399 845.5 cv
399 857.5 li
399 858.328 398.328 859 397.5 859 cv
391.685 859 li
387.388 864.094 381.167 867 374.5 867 cv
cp
f
375.332 857 mo
373.668 857 li
371.094 857 369 854.906 369 852.332 cv
369 843.976 li
367.108 842.367 366 840.002 366 837.5 cv
366 832.813 369.813 829 374.5 829 cv
375.437 829 376.357 829.151 377.235 829.45 cv
378.02 829.717 378.439 830.568 378.173 831.353 cv
377.906 832.139 377.056 832.557 376.271 832.29 cv
375.703 832.098 375.107 832 374.5 832 cv
371.468 832 369 834.468 369 837.5 cv
369 839.293 369.882 840.979 371.358 842.011 cv
371.761 842.291 372 842.75 372 843.24 cv
372 852.332 li
372 853.252 372.748 854 373.668 854 cv
375.332 854 li
376.252 854 377 853.252 377 852.332 cv
377 849.5 li
377 848.672 377.672 848 378.5 848 cv
379.328 848 380 848.672 380 849.5 cv
380 852.332 li
380 854.906 377.906 857 375.332 857 cv
cp
f
429 855 mo
421.071 855 414.261 849.089 413.157 841.25 cv
413.042 840.43 413.613 839.671 414.434 839.556 cv
415.255 839.44 416.013 840.012 416.128 840.832 cv
417.024 847.199 422.558 852 429 852 cv
436.168 852 442 846.168 442 839 cv
442 831.832 436.168 826 429 826 cv
423.248 826 418.252 829.691 416.569 835.185 cv
416.326 835.977 415.48 836.421 414.695 836.18 cv
413.903 835.937 413.458 835.098 413.7 834.306 cv
415.772 827.543 421.921 823 429 823 cv
437.822 823 445 830.178 445 839 cv
445 847.822 437.822 855 429 855 cv
cp
f
435.5 836 mo
434.119 836 433 837.119 433 838.5 cv
433 839.881 434.119 841 435.5 841 cv
436.881 841 438 839.881 438 838.5 cv
438 837.119 436.881 836 435.5 836 cv
cp
f
357.5 774 mo
356.672 774 356 774.672 356 775.5 cv
356 776.328 356.672 777 357.5 777 cv
358.328 777 359 776.328 359 775.5 cv
359 774.672 358.328 774 357.5 774 cv
cp
f
391.5 774 mo
390.672 774 390 774.672 390 775.5 cv
390 776.328 390.672 777 391.5 777 cv
392.328 777 393 776.328 393 775.5 cv
393 774.672 392.328 774 391.5 774 cv
cp
f
357.5 850 mo
356.672 850 356 850.672 356 851.5 cv
356 852.328 356.672 853 357.5 853 cv
358.328 853 359 852.328 359 851.5 cv
359 850.672 358.328 850 357.5 850 cv
cp
f
391.5 850 mo
390.672 850 390 850.672 390 851.5 cv
390 852.328 390.672 853 391.5 853 cv
392.328 853 393 852.328 393 851.5 cv
393 850.672 392.328 850 391.5 850 cv
cp
f
414.5 846 mo
403.5 846 li
403.028 846 402.583 845.777 402.3 845.4 cv
400.5 843 li
398.7 845.4 li
398.417 845.777 397.972 846 397.5 846 cv
390.5 846 li
390.103 846 389.721 845.842 389.439 845.561 cv
387.5 843.621 li
385.561 845.561 li
385.279 845.842 384.897 846 384.5 846 cv
377.5 846 li
376.932 846 376.412 845.679 376.158 845.171 cv
374.158 841.171 li
373.918 840.689 373.953 840.116 374.252 839.668 cv
378.252 833.668 li
378.53 833.251 378.998 833 379.5 833 cv
414.5 833 li
415.328 833 416 833.672 416 834.5 cv
416 835.328 415.328 836 414.5 836 cv
380.303 836 li
377.23 840.607 li
378.427 843 li
383.879 843 li
386.439 840.439 li
387.025 839.854 387.975 839.854 388.561 840.439 cv
391.121 843 li
396.75 843 li
399.3 839.6 li
399.866 838.846 401.134 838.846 401.7 839.6 cv
404.25 843 li
414.5 843 li
415.328 843 416 843.672 416 844.5 cv
416 845.328 415.328 846 414.5 846 cv
cp
f
374.5 811 mo
364.851 811 357 803.149 357 793.5 cv
357 783.851 364.851 776 374.5 776 cv
380.972 776 386.889 779.549 389.943 785.261 cv
390.334 785.991 390.058 786.9 389.327 787.291 cv
388.601 787.681 387.688 787.406 387.297 786.675 cv
384.766 781.94 379.862 779 374.5 779 cv
366.505 779 360 785.505 360 793.5 cv
360 801.495 366.505 808 374.5 808 cv
378.517 808 382.251 806.396 385.017 803.482 cv
385.587 802.881 386.535 802.857 387.138 803.428 cv
387.738 803.998 387.763 804.947 387.192 805.549 cv
383.854 809.063 379.347 811 374.5 811 cv
cp
f
374.5 786 mo
370.364 786 367 789.364 367 793.5 cv
367 796.996 370.264 799.725 372.191 800.785 cv
374.356 801.977 376.927 802.699 379.429 802.818 cv
388.741 803.261 395.087 800.877 406.599 796.549 cv
409.373 795.506 412.518 794.323 416.05 793.052 cv
427.749 788.84 435.985 791.908 439.942 793.383 cv
440.577 793.619 441.356 793.91 441.67 793.966 cv
442.623 793.707 445.374 791.765 446.224 790.696 cv
442.678 786.574 434.252 784.625 422.905 785.35 cv
417.911 785.667 412.537 787.482 407.34 789.237 cv
401.998 791.042 396.952 792.747 392.192 792.992 cv
387.612 793.235 384.352 792.83 381.264 790.079 cv
380.898 789.753 380.551 789.436 380.216 789.129 cv
378.084 787.178 376.797 786 374.5 786 cv
cp
381.656 805.872 mo
380.886 805.872 380.098 805.854 379.286 805.814 cv
376.336 805.674 373.303 804.821 370.745 803.414 cv
367.634 801.702 364 798.078 364 793.5 cv
364 787.71 368.71 783 374.5 783 cv
377.963 783 379.945 784.814 382.241 786.915 cv
382.566 787.213 382.903 787.522 383.259 787.839 cv
385.603 789.926 388.061 790.207 392.037 789.996 cv
396.385 789.772 401.239 788.132 406.379 786.396 cv
411.761 784.577 417.326 782.697 422.716 782.355 cv
435.715 781.528 445.066 784.032 449.028 789.404 cv
449.255 789.712 449.716 790.557 449.096 791.753 cv
448.152 793.573 443.597 796.974 441.696 796.974 cv
440.946 796.958 440.131 796.654 438.896 796.194 cv
434.992 794.741 427.733 792.035 417.065 795.874 cv
413.554 797.139 410.42 798.317 407.654 799.356 cv
396.739 803.461 390.326 805.872 381.656 805.872 cv
cp
f
822 840 mo
804 848 li
795 825 li
812 818 li
822 840 li
cp
1 .462745 .470588 rgb
f
859 824 mo
841 831 li
831 809 li
849 802 li
859 824 li
cp
.545098 .85098 .94902 rgb
f
766 839.581 mo
774.96 859.675 li
857.159 823.021 li
848.198 802.928 li
766 839.581 li
cp
774.201 863.155 mo
774.02 863.155 773.838 863.122 773.664 863.056 cv
773.293 862.914 772.993 862.63 772.831 862.267 cv
762.649 839.434 li
762.487 839.07 762.477 838.657 762.619 838.285 cv
762.761 837.914 763.045 837.614 763.408 837.452 cv
848.346 799.577 li
849.106 799.243 849.989 799.58 850.327 800.336 cv
860.51 823.168 li
860.672 823.531 860.683 823.944 860.54 824.316 cv
860.398 824.688 860.114 824.987 859.751 825.149 cv
774.813 863.025 li
774.618 863.111 774.409 863.155 774.201 863.155 cv
cp
.109804 .160784 .278431 rgb
f
840.467 832.512 mo
839.893 832.512 839.345 832.181 839.096 831.623 cv
829.729 810.617 li
829.392 809.86 829.731 808.974 830.487 808.636 cv
831.247 808.3 832.131 808.639 832.469 809.395 cv
841.836 830.4 li
842.173 831.157 841.833 832.044 841.077 832.382 cv
840.878 832.47 840.671 832.512 840.467 832.512 cv
cp
f
822.2 840.657 mo
821.626 840.657 821.078 840.326 820.829 839.769 cv
811.463 818.763 li
811.126 818.006 811.466 817.119 812.222 816.781 cv
812.981 816.446 813.866 816.784 814.203 817.54 cv
823.569 838.546 li
823.906 839.303 823.566 840.189 822.811 840.527 cv
822.611 840.615 822.404 840.657 822.2 840.657 cv
cp
f
803.935 848.803 mo
803.36 848.803 802.813 848.472 802.563 847.914 cv
793.196 826.907 li
792.859 826.15 793.199 825.264 793.955 824.926 cv
794.715 824.591 795.599 824.929 795.937 825.685 cv
805.304 846.691 li
805.641 847.448 805.301 848.335 804.545 848.673 cv
804.346 848.761 804.139 848.803 803.935 848.803 cv
cp
f
785.279 825.417 mo
784.934 825.417 784.586 825.298 784.303 825.055 cv
783.674 824.515 783.603 823.567 784.143 822.939 cv
824.968 775.456 li
825.508 774.827 826.454 774.757 827.083 775.296 cv
846.04 791.594 li
846.342 791.854 846.528 792.222 846.559 792.618 cv
846.588 793.016 846.459 793.407 846.2 793.709 cv
841.986 798.61 li
841.447 799.24 840.501 799.311 839.871 798.771 cv
839.242 798.23 839.171 797.283 839.711 796.655 cv
842.947 792.891 li
826.265 778.549 li
786.418 824.895 li
786.121 825.24 785.701 825.417 785.279 825.417 cv
cp
f
827.34 805.371 mo
826.994 805.371 826.646 805.252 826.363 805.009 cv
812.848 793.389 li
812.219 792.849 812.147 791.901 812.688 791.273 cv
813.228 790.645 814.175 790.573 814.803 791.113 cv
828.318 802.733 li
828.947 803.273 829.019 804.221 828.479 804.849 cv
828.182 805.194 827.762 805.371 827.34 805.371 cv
cp
f
808.018 815.134 mo
807.672 815.134 807.324 815.015 807.041 814.771 cv
799.809 808.554 li
799.18 808.014 799.108 807.066 799.648 806.438 cv
800.188 805.811 801.136 805.738 801.764 806.278 cv
808.996 812.496 li
809.625 813.036 809.696 813.983 809.156 814.611 cv
808.859 814.957 808.439 815.134 808.018 815.134 cv
cp
f
860.806 860.901 mo
860.78 860.901 860.755 860.9 860.729 860.899 cv
798.189 857.713 li
797.362 857.671 796.726 856.966 796.768 856.139 cv
796.811 855.311 797.515 854.701 798.342 854.717 cv
859.384 857.827 li
860.503 835.856 li
855.547 835.604 li
854.72 835.562 854.083 834.856 854.125 834.029 cv
854.168 833.202 854.868 832.579 855.699 832.607 cv
862.153 832.937 li
862.98 832.979 863.617 833.684 863.575 834.511 cv
862.304 859.478 li
862.283 859.875 862.106 860.248 861.811 860.515 cv
861.535 860.764 861.176 860.901 860.806 860.901 cv
cp
f
840.883 858.885 mo
840.857 858.885 840.831 858.884 840.806 858.883 cv
839.979 858.841 839.342 858.136 839.384 857.309 cv
840.291 839.508 li
840.334 838.681 841.034 838.063 841.865 838.086 cv
842.692 838.128 843.329 838.833 843.287 839.66 cv
842.38 857.461 li
842.339 858.263 841.677 858.885 840.883 858.885 cv
cp
f
820.909 857.867 mo
820.884 857.867 820.857 857.866 820.832 857.865 cv
820.005 857.823 819.368 857.118 819.41 856.291 cv
819.896 846.766 li
819.938 845.938 820.646 845.31 821.47 845.344 cv
822.297 845.386 822.934 846.091 822.892 846.918 cv
822.406 856.443 li
822.365 857.245 821.703 857.867 820.909 857.867 cv
cp
f
776.226 828.312 mo
776.106 828.312 775.985 828.298 775.865 828.268 cv
775.061 828.069 774.569 827.256 774.769 826.452 cv
789.787 765.659 li
789.883 765.272 790.127 764.94 790.468 764.734 cv
790.809 764.529 791.218 764.469 791.603 764.563 cv
815.873 770.559 li
816.26 770.654 816.592 770.898 816.798 771.239 cv
817.004 771.58 817.065 771.988 816.97 772.375 cv
815.419 778.649 li
815.22 779.453 814.407 779.947 813.603 779.745 cv
812.799 779.547 812.308 778.733 812.507 777.929 cv
813.697 773.111 li
792.34 767.835 li
777.681 827.171 li
777.512 827.854 776.899 828.312 776.226 828.312 cv
cp
f
804.722 791.449 mo
804.603 791.449 804.481 791.436 804.361 791.405 cv
787.058 787.131 li
786.253 786.933 785.762 786.119 785.961 785.315 cv
786.16 784.511 786.979 784.017 787.776 784.219 cv
805.08 788.493 li
805.885 788.691 806.376 789.505 806.177 790.309 cv
806.008 790.992 805.396 791.449 804.722 791.449 cv
cp
f
791.881 808.879 mo
791.762 808.879 791.641 808.865 791.521 808.835 cv
782.261 806.547 li
781.456 806.349 780.965 805.535 781.164 804.731 cv
781.363 803.928 782.182 803.438 782.979 803.635 cv
792.239 805.923 li
793.044 806.121 793.535 806.935 793.336 807.738 cv
793.167 808.422 792.555 808.879 791.881 808.879 cv
cp
f
779.995 843.001 mo
779.588 843.001 779.174 843.084 778.778 843.261 cv
777.269 843.935 776.588 845.711 777.261 847.222 cv
777.935 848.73 779.711 849.414 781.222 848.739 cv
782.731 848.065 783.412 846.289 782.739 844.778 cv
782.242 843.664 781.144 843.001 779.995 843.001 cv
cp
780.01 851.999 mo
777.712 851.999 775.516 850.673 774.521 848.443 cv
773.174 845.423 774.536 841.868 777.557 840.521 cv
780.579 839.173 784.132 840.537 785.479 843.557 cv
786.826 846.577 785.464 850.132 782.443 851.479 cv
781.652 851.832 780.824 851.999 780.01 851.999 cv
cp
f
772 345 mo
780 345 li
780 391 li
843 391 li
843 359 li
845 352 li
843 350 li
843 345 li
852 345 li
852 416 li
772 416 li
772 345 li
cp
1 .462745 .470588 rgb
f
820 381 mo
833 361.698 li
833.069 355.954 li
841.12 349.134 li
844.89 351.569 li
841.978 361.711 li
836.77 364.135 li
824 382 li
820 381 li
cp
.545098 .85098 .94902 rgb
f
804 390 mo
804 369.427 li
807.766 367.635 810.363 363.896 810.363 359.56 cv
810.363 355.224 807.766 351.485 804 349.693 cv
804 360 li
794 360 li
794 349.693 li
790.234 351.485 787.637 355.224 787.637 359.56 cv
787.637 363.896 790.234 367.635 794 369.427 cv
794 390 li
804 390 li
cp
f
834.263 333 mo
829 333 li
829 335 li
825 335 li
825 334.737 li
825 333.777 824.223 333 823.263 333 cv
809.5 333 li
805.754 333.098 800.439 337.73 795.25 342 cv
802 341 811 340 813 342 cv
814 343 814 344.349 814 346 cv
825 346 li
825 341 li
829 341 li
829 343 li
834.263 343 li
835.223 343 836 342.223 836 341.263 cv
836 334.737 li
836 333.777 835.223 333 834.263 333 cv
cp
f
780.5 417 mo
779.672 417 779 416.328 779 415.5 cv
779 346 li
773 346 li
773 415.5 li
773 416.328 772.328 417 771.5 417 cv
770.672 417 770 416.328 770 415.5 cv
770 344.5 li
770 343.672 770.672 343 771.5 343 cv
780.5 343 li
781.328 343 782 343.672 782 344.5 cv
782 415.5 li
782 416.328 781.328 417 780.5 417 cv
cp
.109804 .160784 .278431 rgb
f
852.5 417 mo
851.672 417 851 416.328 851 415.5 cv
851 346 li
843.5 346 li
842.672 346 842 345.328 842 344.5 cv
842 343.672 842.672 343 843.5 343 cv
852.5 343 li
853.328 343 854 343.672 854 344.5 cv
854 415.5 li
854 416.328 853.328 417 852.5 417 cv
cp
f
843.5 417 mo
842.672 417 842 416.328 842 415.5 cv
842 365.5 li
842 364.672 842.672 364 843.5 364 cv
844.328 364 845 364.672 845 365.5 cv
845 415.5 li
845 416.328 844.328 417 843.5 417 cv
cp
f
865.5 418 mo
758.5 418 li
757.672 418 757 417.328 757 416.5 cv
757 415.672 757.672 415 758.5 415 cv
865.5 415 li
866.328 415 867 415.672 867 416.5 cv
867 417.328 866.328 418 865.5 418 cv
cp
f
836.5 393 mo
781.5 393 li
780.672 393 780 392.328 780 391.5 cv
780 390.672 780.672 390 781.5 390 cv
836.5 390 li
837.328 390 838 390.672 838 391.5 cv
838 392.328 837.328 393 836.5 393 cv
cp
f
842.5 406 mo
829.5 406 li
828.672 406 828 405.328 828 404.5 cv
828 403.672 828.672 403 829.5 403 cv
842.5 403 li
843.328 403 844 403.672 844 404.5 cv
844 405.328 843.328 406 842.5 406 cv
cp
f
819.5 406 mo
781.5 406 li
780.672 406 780 405.328 780 404.5 cv
780 403.672 780.672 403 781.5 403 cv
819.5 403 li
820.328 403 821 403.672 821 404.5 cv
821 405.328 820.328 406 819.5 406 cv
cp
f
793.5 391 mo
792.672 391 792 390.328 792 389.5 cv
792 369.836 li
788.051 367.595 785.637 363.547 785.637 359.06 cv
785.637 354.258 788.402 349.958 792.855 347.839 cv
793.318 347.616 793.865 347.65 794.301 347.925 cv
794.736 348.2 795 348.679 795 349.193 cv
795 358 li
802 358 li
802 349.193 li
802 348.679 802.264 348.2 802.699 347.925 cv
803.134 347.65 803.681 347.616 804.145 347.839 cv
808.598 349.958 811.363 354.258 811.363 359.06 cv
811.363 363.547 808.949 367.595 805 369.836 cv
805 386.5 li
805 387.328 804.328 388 803.5 388 cv
802.672 388 802 387.328 802 386.5 cv
802 368.927 li
802 368.348 802.333 367.821 802.855 367.572 cv
806.253 365.955 808.363 362.693 808.363 359.06 cv
808.363 356.269 807.118 353.696 805 351.921 cv
805 359.5 li
805 360.328 804.328 361 803.5 361 cv
793.5 361 li
792.672 361 792 360.328 792 359.5 cv
792 351.921 li
789.882 353.696 788.637 356.269 788.637 359.06 cv
788.637 362.693 790.747 365.955 794.145 367.572 cv
794.667 367.821 795 368.348 795 368.927 cv
795 389.5 li
795 390.328 794.328 391 793.5 391 cv
cp
f
820.499 381 mo
820.21 381 819.919 380.917 819.661 380.744 cv
818.975 380.28 818.793 379.349 819.256 378.661 cv
831.006 361.231 li
831.069 355.936 li
831.074 355.501 831.269 355.091 831.6 354.81 cv
839.65 347.989 li
840.155 347.563 840.88 347.515 841.435 347.874 cv
845.204 350.31 li
845.759 350.668 846.014 351.348 845.831 351.983 cv
842.919 362.125 li
842.8 362.543 842.504 362.888 842.11 363.071 cv
836.902 365.495 li
836.15 365.843 835.26 365.52 834.909 364.768 cv
834.56 364.017 834.886 363.124 835.637 362.774 cv
840.225 360.64 li
842.641 352.226 li
840.74 350.997 li
834.061 356.656 li
834 361.717 li
833.996 362.009 833.907 362.294 833.744 362.537 cv
821.744 380.339 li
821.454 380.769 820.98 381 820.499 381 cv
cp
f
815.969 345 mo
824 345 li
824 341.5 li
824 340.672 824.672 340 825.5 340 cv
829.5 340 li
830.328 340 831 340.672 831 341.5 cv
831 342 li
834.763 342 li
834.894 342 835 341.894 835 341.763 cv
835 335.237 li
835 335.106 834.894 335 834.763 335 cv
831 335 li
831 335.5 li
831 336.328 830.328 337 829.5 337 cv
825.5 337 li
824.672 337 824 336.328 824 335.5 cv
824 335.237 li
824 335.106 823.894 335 823.763 335 cv
810 335 li
807.728 335.06 804.242 337.541 800.766 340.327 cv
810.688 339.216 813.354 340.232 814.561 341.439 cv
815.597 342.476 815.887 343.72 815.969 345 cv
cp
825.5 348 mo
814.5 348 li
813.672 348 813 347.328 813 346.5 cv
813 344.937 812.975 344.097 812.439 343.561 cv
812.027 343.148 809.623 341.964 795.97 343.983 cv
795.302 344.093 794.652 343.725 794.379 343.108 cv
794.105 342.492 794.276 341.77 794.797 341.342 cv
795.952 340.388 li
801.107 336.128 805.976 332.104 809.961 332.001 cv
823.763 332 li
825.109 332 826.268 332.827 826.754 334 cv
828 334 li
828 333.5 li
828 332.672 828.672 332 829.5 332 cv
834.763 332 li
836.548 332 838 333.452 838 335.237 cv
838 341.763 li
838 343.548 836.548 345 834.763 345 cv
829.5 345 li
828.672 345 828 344.328 828 343.5 cv
828 343 li
827 343 li
827 346.5 li
827 347.328 826.328 348 825.5 348 cv
cp
f
824.5 367 mo
823.672 367 823 366.328 823 365.5 cv
823 347.5 li
823 346.672 823.672 346 824.5 346 cv
825.328 346 826 346.672 826 347.5 cv
826 365.5 li
826 366.328 825.328 367 824.5 367 cv
cp
f
815.5 381 mo
814.672 381 814 380.328 814 379.5 cv
814 347.5 li
814 346.672 814.672 346 815.5 346 cv
816.328 346 817 346.672 817 347.5 cv
817 379.5 li
817 380.328 816.328 381 815.5 381 cv
cp
f
820.347 392.427 mo
820.048 392.427 819.747 392.338 819.484 392.153 cv
818.807 391.676 818.645 390.74 819.121 390.063 cv
822.171 385.732 li
822.58 385.151 822.44 384.345 821.858 383.936 cv
818.051 381.254 li
817.769 381.055 817.426 380.979 817.088 381.037 cv
816.748 381.096 816.452 381.283 816.254 381.565 cv
809.223 391.548 li
808.744 392.226 807.806 392.385 807.133 391.911 cv
806.455 391.434 806.293 390.498 806.77 389.821 cv
813.801 379.838 li
814.461 378.9 815.446 378.276 816.575 378.081 cv
817.707 377.884 818.843 378.141 819.778 378.802 cv
823.586 381.482 li
825.521 382.846 825.985 385.526 824.624 387.46 cv
821.574 391.79 li
821.282 392.205 820.817 392.427 820.347 392.427 cv
cp
f
205.249 776.225 mo
201.104 800.51 179.967 819 154.5 819 cv
153.996 819 153.499 818.977 152.999 818.962 cv
156.305 823.84 159.166 829.018 159.876 832.5 cv
189.082 832.5 li
189.985 828.065 194.378 820.877 198.734 815.065 cv
203.092 809.254 208.5 800.33 208.5 790.924 cv
208.5 785.664 207.331 780.683 205.249 776.225 cv
cp
1 .462745 .470588 rgb
f
233 835 mo
233 845.592 li
233 850.788 229.068 855 224.219 855 cv
217.781 855 li
212.932 855 209 850.788 209 845.592 cv
209 835 li
233 835 li
cp
.545098 .85098 .94902 rgb
f
164 846.988 mo
164 854.014 li
185.032 849.604 li
184.642 842.523 li
164 846.988 li
cp
f
178.5 833 mo
177.672 833 177 832.328 177 831.5 cv
177 797 li
172 797 li
172 831.5 li
172 832.328 171.328 833 170.5 833 cv
169.672 833 169 832.328 169 831.5 cv
169 795.5 li
169 794.672 169.672 794 170.5 794 cv
178.5 794 li
179.328 794 180 794.672 180 795.5 cv
180 831.5 li
180 832.328 179.328 833 178.5 833 cv
cp
.109804 .160784 .278431 rgb
f
180 794 mo
184.298 794 li
186.339 794 188 792.339 188 790.298 cv
188 789.555 li
188 788.427 187.453 787.373 186.5 786.665 cv
185.422 785.862 184.013 785.643 182.631 786.06 cv
181.082 786.526 180 788.053 180 789.772 cv
180 794 li
cp
184.298 797 mo
178.5 797 li
177.672 797 177 796.328 177 795.5 cv
177 789.772 li
177 786.74 178.96 784.032 181.766 783.187 cv
184.062 782.493 186.44 782.884 188.289 784.257 cv
190.012 785.536 191 787.468 191 789.555 cv
191 790.298 li
191 793.993 187.993 797 184.298 797 cv
cp
f
165.001 785.854 mo
164.55 785.854 164.089 785.921 163.631 786.06 cv
162.082 786.526 161 788.053 161 789.772 cv
161 790.298 li
161 792.339 162.661 794 164.702 794 cv
169 794 li
169 789.555 li
169 788.427 168.453 787.373 167.5 786.665 cv
166.779 786.129 165.91 785.854 165.001 785.854 cv
cp
170.5 797 mo
164.702 797 li
161.007 797 158 793.993 158 790.298 cv
158 789.772 li
158 786.74 159.96 784.032 162.766 783.187 cv
165.062 782.493 167.44 782.884 169.289 784.257 cv
171.012 785.536 172 787.468 172 789.555 cv
172 795.5 li
172 796.328 171.328 797 170.5 797 cv
cp
f
164.078 847.639 mo
162.873 847.64 161.465 847.328 160.388 846.436 cv
159.494 845.695 159.015 844.701 159 843.561 cv
159 832.5 li
159 831.672 159.672 831 160.5 831 cv
161.328 831 162 831.672 162 832.5 cv
162 843.542 li
162.003 843.776 162.09 843.95 162.301 844.125 cv
162.805 844.541 163.811 844.746 164.633 844.599 cv
185.493 840.228 li
186.931 839.79 187 839.187 187 837.391 cv
187 832.5 li
187 831.672 187.672 831 188.5 831 cv
189.328 831 190 831.672 190 832.5 cv
190 837.391 li
190 839.125 190 842.027 186.287 843.121 cv
186.249 843.133 186.21 843.143 186.171 843.15 cv
165.201 847.544 li
164.863 847.604 164.481 847.639 164.078 847.639 cv
cp
f
166.854 854.781 mo
164.833 854.781 162.383 853.768 162.022 851.729 cv
162.008 851.643 162 851.556 162 851.468 cv
162 847.5 li
162 846.672 162.672 846 163.5 846 cv
164.328 846 165 846.672 165 847.5 cv
165 851.239 li
165.229 851.515 166.374 851.901 167.18 851.765 cv
182.47 848.271 li
184 847.762 184 847.739 184 846.218 cv
184 842.5 li
184 841.672 184.672 841 185.5 841 cv
186.328 841 187 841.672 187 842.5 cv
187 846.218 li
187 848.456 186.746 850.009 183.35 851.141 cv
183.303 851.156 183.256 851.169 183.209 851.18 cv
167.773 854.704 li
167.484 854.756 167.174 854.781 166.854 854.781 cv
cp
f
167.216 862.131 mo
166.029 862.131 164.508 861.866 163.395 860.932 cv
162.482 860.166 162 859.094 162 857.831 cv
162 852.5 li
162 851.672 162.672 851 163.5 851 cv
164.328 851 165 851.672 165 852.5 cv
165 857.831 li
165 858.3 165.163 858.5 165.323 858.634 cv
165.856 859.081 167.017 859.216 167.819 859.091 cv
181.386 855.473 li
181.426 855.462 181.466 855.453 181.506 855.445 cv
182.413 855.282 183 854.434 183 853.285 cv
183 849.5 li
183 848.672 183.672 848 184.5 848 cv
185.328 848 186 848.672 186 849.5 cv
186 853.285 li
186 855.85 184.402 857.937 182.105 858.386 cv
168.523 862.008 li
168.481 862.02 168.439 862.028 168.397 862.036 cv
168.082 862.092 167.674 862.131 167.216 862.131 cv
cp
f
174.437 866.873 mo
173.659 866.873 172.88 866.763 172.138 866.534 cv
169.701 865.785 168 863.388 168 860.704 cv
168 859.876 168.672 859.204 169.5 859.204 cv
170.328 859.204 171 859.876 171 860.704 cv
171 862.083 171.83 863.301 173.019 863.667 cv
174.388 864.085 176.068 863.841 177.11 863.072 cv
177.7 862.636 178 862.106 178 861.5 cv
178 857.5 li
178 856.672 178.672 856 179.5 856 cv
180.328 856 181 856.672 181 857.5 cv
181 861.5 li
181 863.065 180.252 864.48 178.894 865.484 cv
177.667 866.391 176.058 866.873 174.437 866.873 cv
cp
f
189.082 834 mo
169.5 834 li
168.672 834 168 833.328 168 832.5 cv
168 831.672 168.672 831 169.5 831 cv
187.913 831 li
189.686 824.939 195.649 816.68 197.534 814.166 cv
203.815 805.787 207 797.968 207 790.924 cv
207 772.77 192.429 758 174.519 758 cv
156.529 758 141.958 772.77 141.958 790.924 cv
141.958 797.967 145.143 805.786 151.423 814.166 cv
153.308 816.68 159.272 824.938 161.046 831 cv
164.5 831 li
165.328 831 166 831.672 166 832.5 cv
166 833.328 165.328 834 164.5 834 cv
159.876 834 li
159.163 834 158.549 833.498 158.406 832.8 cv
157.672 829.197 153.989 822.589 149.022 815.965 cv
142.344 807.055 138.958 798.63 138.958 790.924 cv
138.958 771.115 154.875 755 174.439 755 cv
194.083 755 210 771.115 210 790.924 cv
210 798.631 206.613 807.056 199.935 815.965 cv
194.969 822.59 191.285 829.198 190.552 832.8 cv
190.409 833.498 189.795 834 189.082 834 cv
cp
f
224.353 857 mo
217.647 857 li
211.776 857 207 851.896 207 845.621 cv
207 835.5 li
207 834.672 207.672 834 208.5 834 cv
209.328 834 210 834.672 210 835.5 cv
210 845.621 li
210 850.241 213.431 854 217.647 854 cv
224.353 854 li
228.569 854 232 850.241 232 845.621 cv
232 835.5 li
232 834.672 232.672 834 233.5 834 cv
234.328 834 235 834.672 235 835.5 cv
235 845.621 li
235 851.896 230.224 857 224.353 857 cv
cp
f
235.068 836 mo
218.5 836 li
217.672 836 217 835.328 217 834.5 cv
217 833.672 217.672 833 218.5 833 cv
235.068 833 li
235.582 833 236 832.582 236 832.068 cv
236 826.932 li
236 826.418 235.582 826 235.068 826 cv
206.932 826 li
206.418 826 206 826.418 206 826.932 cv
206 832.068 li
206 832.582 206.418 833 206.932 833 cv
213.5 833 li
214.328 833 215 833.672 215 834.5 cv
215 835.328 214.328 836 213.5 836 cv
206.932 836 li
204.764 836 203 834.236 203 832.068 cv
203 826.932 li
203 824.764 204.764 823 206.932 823 cv
235.068 823 li
237.236 823 239 824.764 239 826.932 cv
239 832.068 li
239 834.236 237.236 836 235.068 836 cv
cp
f
215.5 825 mo
214.672 825 214 824.328 214 823.5 cv
214 811.315 li
214 811.142 213.858 811 213.685 811 cv
211.315 811 li
211.142 811 211 811.142 211 811.315 cv
211 823.5 li
211 824.328 210.328 825 209.5 825 cv
208.672 825 208 824.328 208 823.5 cv
208 811.315 li
208 809.487 209.487 808 211.315 808 cv
213.685 808 li
215.513 808 217 809.487 217 811.315 cv
217 823.5 li
217 824.328 216.328 825 215.5 825 cv
cp
f
232.5 825 mo
231.672 825 231 824.328 231 823.5 cv
231 811.315 li
231 811.142 230.858 811 230.685 811 cv
228.315 811 li
228.142 811 228 811.142 228 811.315 cv
228 823.5 li
228 824.328 227.328 825 226.5 825 cv
225.672 825 225 824.328 225 823.5 cv
225 811.315 li
225 809.487 226.487 808 228.315 808 cv
230.685 808 li
232.513 808 234 809.487 234 811.315 cv
234 823.5 li
234 824.328 233.328 825 232.5 825 cv
cp
f
225.5 864 mo
217.5 864 li
216.672 864 216 863.328 216 862.5 cv
216 856.5 li
216 855.672 216.672 855 217.5 855 cv
218.328 855 219 855.672 219 856.5 cv
219 861 li
224 861 li
224 856.5 li
224 855.672 224.672 855 225.5 855 cv
226.328 855 227 855.672 227 856.5 cv
227 862.5 li
227 863.328 226.328 864 225.5 864 cv
cp
f
215.716 873 mo
156.289 873 li
151.167 873 147 868.833 147 863.711 cv
147 862.289 li
147 857.167 151.167 853 156.289 853 cv
162.5 853 li
163.328 853 164 853.672 164 854.5 cv
164 855.328 163.328 856 162.5 856 cv
156.289 856 li
152.821 856 150 858.821 150 862.289 cv
150 863.711 li
150 867.179 152.821 870 156.289 870 cv
215.716 870 li
218.078 870 220 868.078 220 865.716 cv
220 863.5 li
220 862.672 220.672 862 221.5 862 cv
222.328 862 223 862.672 223 863.5 cv
223 865.716 li
223 869.732 219.732 873 215.716 873 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.1.0
%%For: ( ) ()
%%Title: (ox009_07.eps)
%%CreationDate: 2/17/2020 1:14 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kk?I4BqsaLY\ZYlQ^lA\t(U8[+<tt!Y5_)B3#2%b<++A_:482Dq"\!M+g%,1rSg0E?4Yq:8P=`'iR'm3iWnFALXZn`g*6V!;
%"K.,dKZ@G&o_#]n/2$@[(Ig%tB\'0lg.%uIYcWf1lXd/`AbS),R3-`&Eh_15)*N"UZs)$&O`X7"1f5@^5^^kH/L,2eD7q$ROpl6h
%T5j&;*pSF`JF?816)W-L</gtEDc@8$k^3o5Oe;/0dHL<:SnM.?0Y5n0qiTQf0_jPJrIn*-H[T,eRo\],#,'\$6maK(?(IKNK;!;3
%^D1iGOu7"NT[bFB6p)mi[3(=B&FmhE(Ku-pQ\6\pnNY%h7ug]jD4pnA/H#7XhLC1H>_J.DA=c+2$Zg7i5[kphLe`"d#PQsVd'A7c
%`4WL[DHjT>^!X+gY`dE%[e.:"KJ)dm;FI10.&+Jm6eVPIOoY**RZodR>*4K6-q-+\j-%',)Akb6$A-aC;]+P=e+dDtZ>\r,_fkZ=
%Zhm2_0-l%5@2Sq$S@BEC%/[>?p(7<<DGuDU:9:JC,,08caL?7f#!Y3.P<tLU]5I8'Jm5>X88]ZH\?h\8g;j%#"#O,!-9:B1SW\,L
%;<8Wa9_+>J//*]4.O'2l,gWf[*+=,I7gS\fiY.oE8!7=A3^;1%B,2<s#,G2>kQbX'5g"IdRru'DJOC,B.&uXtq4;G(I;83%0nbT1
%1X_%c,_b8Irr!Xg1rQ>Ahrmo!Z.sE_`1)HhOs`\2r_d7Q/pDCN(sON)<rn9/aJ:k"]ru?B<#3T%htT!jrmAd[M.FZr4FBa6I&\ZD
%Ahp`YkM\)?_c`RdZTM%/k4?)EkpAt%-:r/%8H:)/!%(;54<7C$!Cg&i7R]PO];bq"WWF#bK22KjA,n0EJZbCLSB5:A-D-("q7J!3
%meJsFjR]/\6(4H?0HtS$Zd=u/kCL87#JbjBp]N:DMc*3n!E&=m0L->"@bN7m88"S'52cd'Jkm5@0T->K7):7J*POcpcip`gSe;G3
%$qQ"HJB?uJNCjL%:H2'n8QZ.gUar.1&4"SifTGtanl/R&K_tfecj66t'G2UaS=FX'#@@H>BV^e<X<F-c7ehW]+HYdfHof>9'79iu
%cj673Qpb3cEsW%)-e/BZ4Ok],3eAR74b+.,;;MlL#ltlgJf:&FN(q8\5j/`o!.e*>JO&"]:ejafNUR6^7+ZuZ_ACW<4okin7,=i.
%;bJ>$,BFDjVs6s@L?]dKSu<&p$>Lhc[Y4M\5Jhb&1LV=oSdL5#8'hJp3^4LR$p`+%*s[(#W'mtKlj8<c&:+1@<8"U,dKaomf'D!,
%AX6s67+8+EGaaH#HeLk>hift[[3lF!M6[e=pK0c0V'sf\ahX]&$]tns^gG,^ZHa!$O]1+DnfnG$f_\<j:j5b^:#97J,Ko0#qb)AP
%KcDV#41jMMBGrnmr?X\m1cb:/Orr1:RjCec?h0E(O^mi5q-i&#a3TAHiKM?L*7H/'(MMl_N$.8hH/RrmT,@h&<Qf"m&cTX3dM9KI
%G4GPY$KcnMpj?,diU;/K-`q).>kl:oaXPq3]&N2R)mk_C$A4)V66B3K\g-1/&N,lu!1tb;eJ.eJcGD8S??M!$df]d$h<C*K$A__W
%_7u??9gsO8dY9ho2&8p.@NmK/l;!Hd#ePn&,02c2/"RjmK?4CA:(_b3#Fn9jK-J)>*'U&FU5D]WjfF9F=ieYsC6qm/ZW/,1TG(eg
%aW0dV'PB*9#Wl%I0GP+WL)"td-YLPFe/clQPBl,V,)@^`P=85@b?<O>c`9oWd-nn,Gqpb@d?-@&,g<?OR5)Z#Sf^ZPk:lJB"CM>+
%Qp]aj;9`c@>%>rehFFh$3$La79WBu\PscTA_;`-N'dP[g7#e\^7ql8BUPKRQ_@4/%hQNQIKr>Gtb).(2N8ufD83-iD'>%'upK/Y.
%\4Z)NdSLa[h*)M34VMn!VhPfaV8f9UC-?CY+LiuK&JM"l*<*-/qe-P`BC3UO=D^5cou1:<o7%Qra'"B]ja*Qn^IX2,i`&$a_0[6i
%K+<P>GpTSKra412Iu"*[^Z641iP-j*pHa"!.6^1'+=K>.Lr[StmJt#?7DAeUc5K>i#CXVPWbJ2lTY)M]3r5L7,ZR6h6'MZS^CKW4
%Tik;j]6g&lrW4)-*peaa*GZ]R]8$PZ??P<;Y2IJU!T"6icET"R`eJs"Z.A;+8hiGf^g+\'cT@SGFWRT<3_D+jf8B<C%jLqN,15h.
%bM#.$(W8%XC%oPOKQe/^'IAF=$L]T:-:d,q5bSP%)2H'HQ\W>EJj$6SP<d&1!%nL2:LXl+:?6D>_Iu;='KJp>oB8+\UWuVYLnG;!
%d/Z:VPB/D[lB"LW4NfK639l/Q$?SaiZiM0tGTB+Mn]X*]%AGBnF.sJ2d4^Nnc<kt##_3_g*<g'i^(EL6@61$>.3o[bL-bD3l3)MI
%,'B1p;$L\6)eNIXKG]Ak4?qhY/9r.gEmK^0C*@+/Gt:\\20'JbiNP`oo-6(l;'fBVS0mmV_3l;86J[?SL7:$T'p9+rV2T$LJE&Ve
%_D.BEfa]B.%+6Qa_VL&^!,5.N]VY3e#=ZFKhuPL$Wb#<Cp`N5.LQ"$(P%k"/b2T_P]SaoE3[(Pf)>&jX4%_SBa,h,c6:N1bVSl=X
%;#jQ-@5&/6"9+I/AX)^mHo+@]Qu-MA8hUST1ib?`'*inN7nt"28#AO=E#<kjFumkR$O/+0<ZY;]=t%47>b:EhW@K?(Z#QRG6ZU"-
%n/%?XBK"4NBL/U>7Tmg.ZQLD]V6Yns4KoE?B2p^bVIFsOYi_Vn#m:>d_#.<d306;?Pp'kC906\l)AC>L,n*,aJ[nbcIGdqnkWI9*
%4:%N!`eUgMIafMOMLe=>OmsmsZCKn<i+NCl>qc[f)cgt@iui]H^\FGfT[/bE(NTi8Ze07G:,tR^$-att#&+E"+s]Q19pbo+KK/Dt
%W[M`(JtkYO31hFL"u/kL-Em\M!YDdh\+&a/2M_1G+:,Ke`hO)(L96V`*KD8g;8tVTiD?f'\amg=p!FK=0YCaj%QK6blX:ieEYA+8
%Wu'\('`0R`%L\R>3L2aS`O#*%"Dmu-0-(8ZL/7)s8M<b!*=G^NWequ,FWdJ9C6A%1;GfFCE/\o\%+a_u.SSoZ.Hec?![\(k)hB,#
%rh;,)E)PWig`QXkV\4Y[8*n+/$^&Y*J?N't<:$8<fl^BK:#qk^ducM46I7ji$`nE`U:LX9#LlnrjoMd,g<Fo;6ZN0n:,N[m%Ot$9
%/;]<gE0=`IYQC1#^4YGk'8Qc!<RbuLK&D0.!IY7c#-3O9N[9bgeIa61/M&+ZUgPP7Dd3nT=ER`G6GeOQ#L<ilJ0`?"aqCf)GZ9V,
%lOBoV_,ZX)*"jM0Fb+[C;f3ZFk['9kKK6!=&b1HA@]+pXE*O\gX,t)IbFiBbNY[4C7GQ]BJG:';.M?1[*1kI=E:/YsVsXjf-Fl!q
%!U!#nVOc1lRilf6nP.D5E6XKA@btT^!L88L"8fkr?Fuj[5Y(l,!tn->j,foHF@f4nP80@agRoB.,><sJMM*]PE/NSRWtTE"I%_uD
%((Zf6LF]AAOAC[;3og#/4;f,S)\:o_YrHPq$I2[mSj%Rq9TD>jml6QQ(jVcGeM(oIQU%VPli;c+^5loG<.P?pjMh+"J-AqJ-48_q
%PD[CTdlAQ%US%W78i0iu:4qX-R!(_*kU%GS-Tr`I@%:>O^QTf]&kFk?Lrgbh+RO1o3_,`"11:o,.^0KoS:q*+/4ktW&UR]2mc^[N
%%/cd7$d!psdFM/Jm!4GcPs@HBF<'D5PpqljqYsFoCE+4ZAsH,UKb,9K@Y&CK_@]I&lRi9"CNuYD:aeXe-og,G!4`'!o1Q]Z$oUbQ
%%>1ul2c-aN%#lqt<)D:sJ2BBN2E1Jge6P&D3e>8DSQ[$?:u321?i\\DSVA\>g#mcKiX$iNd$Y,+_(K!."HlS1j7JbL8skM]L4M^V
%!ko.$S[o,$5R&22GWl<Bk\?Zc67N,+"a1T_As4JD#ubgF#Y4Q>5]NgakCF]FQ^S3t-DY<Ag-6SHJRn_^g0ie"EUJWs,sIiTNoZ=k
%P0p5WKV<CCL@A*iFJY5nC+,O8pec4[jl$j`lA1TKV0S4YJKI>F^J*ek:(SEG$uh4o8r"Co&$YdJaVh(7P/N9)4@0*h@'G)QoTT+r
%P#\5:@)XTd+3[(,ZcdIp(EofBh(k#0M(2fNV6eQ!;BnUK$5npL&lN]=JqF2LPsQCe!0SQN*.EVY>Y&a.dM5jijrB(%IU7/q,2/9:
%H(\aN<[&JZYq*osX1TpFpdM,.6q;5b4H!DV5Z!,@E)[D%:c4a)'K:;F+?I>-6`aFPLgbe&V(NA,-L8(lM<7B`m2@lQdf[XF>Qqs`
%K,g_o/e1;V[<\j\fL_56!,ag4OS*mU6oIqR!m_U4,ITl&H^/+XS4lgMa&rGkEYd"*Q>!d'pA>?Kle$dN83Vn"aV,khmLZE>S\kUQ
%0M5<,?'ADkEhriA_$ZYV!i5&]Q8GBX,c25f5j$&O,YgpeWqeL7F=2b$qAh[Y-j(An#%2?]"D.b<n0Q+)=Z$4bI25=G:+ur/"T3>X
%1f#(oRFNb7W8+@G+]ibtj[_l"fq"XSW[j\!l!.Ch8S5r*KcQ[fjClbgJE7NZ`:g/\-,C;%N`NBgndNE4^JC#6*:HiSm\rV?GQtMf
%R2P7\iJ(iD0X`^h;<Q^O8,2q#GN(r@TbJIr=go!!lZjT**(A/!^KtmO.BTd>nksoq`o[0STOf&;jp7!m73e]DUbPGIRH=mDcLB-E
%!K!j4VMDu:P3g2.Y:Lrdq*QSRs";#p,_<,;>c.puH(;&UWsp#U?nW&DkYn^fQ;r.SH3a4MdHD+P^QJIh\Dd856648[lmDSr5H!S4
%nm#i;d)eH*)KZKN2=%aOXCtV7CdbFb9&Hr!^PlpgXSdqc@Z_D<].['foa2T>*P4!sh<`.q(bjjqD'MBmU;$DarXI=@CXaoIm0u<a
%F.M3JQIYX;9]3dH=D6q>h2^D,mXW@?n*#^jpuDkjJ4BPce<l!HlQWdq;)$5@pn%Q]:5,,$f^-6i!k7E;rt!:jK"tQl!T%7!fh(4"
%j/WcM9qu'0%$0Y[rgco5rB]<hjpRN&0MY]Q+>kiW/Td)Z=tR'qfYr_bQ:$d=d//en\n,u`4dVStck@*!O0jTY0r#s5lF,PdR$C4r
%*qUA5P%D&Vd6BVZcK%3F:I3;\P88YTb>ugQ[G>Qp/Hs((ZdLUd5C.`&S.``*6+_3h+oHU]K`a#&J7eOIT:a""Ilj.Sl_Blpa_@3?
%=M^O'BTD""G93Z-Z=^ogI9ds2I;N!sf8>!ih5*V+A^=IWE`Ec5OqH"1;jcPd3c[p7B))gM#?fU$%e;N?ikXn"Sq1,5/o7PK'H;AM
%^ue-1Mr'QT1Q&@7ka=th)-9sqS1J"6+c"[)mF:IipW*P"\iDc7[AjH1Si&%&nQE>NHuUVN=o#D[lCa=I`#6L-,Ri`Cf+=Teg\NTt
%V.$g4[aDo&>\*d5"Z?$"I.Vmgg$%K(b:njZaEeF-g8P=.Ib.d+#O2g2nHc@ZhBl&)!=*LZU5<S$B"cS&5n*u;(HGo[q%84=+6+T^
%_C;;L%[O:IWaT,JG8Q"+/H@pd.^anAXjq:Pcg99ERFMjJ!RN*-h'b#SC&$0UneIa[jqIUo]0&@3AB">4';X6Hb]!e/$UGf6fJc[K
%r0j,sL4ai0_AHV[H>NGHAAkYX/*f>CD]<Ts,h=Y5EsR5"`,T-_eetj@.Xh9i:_N@%O,G>=YHQ'RNS^<C-;%4PONqGPcKo1'IiYnT
%dT92]L\']!T4"@[SP]_3LgC'=0("8Mjsr3gY(9Y/6I=_CNf0R)26\UN*a*Lh,GJ!I)S<]@)Q\^pZ4Q0hMm1"=j4=R<B8p(?2(Rc8
%NgNru2_4!=;(3m:9"Ak:b11;KV7Wj.bO!K2\Z%">67eg(Be:.<UWdJ`=Y2S5j^tpUXHramf5e`PWoZPZ1GuRFK)5c&*3+).`pZBt
%f[-\M+5c(p<B.O:ms9`l(gOoVZf,In1Zi#YRPfOQn\Y>o'fga4ER@d(%7Wdd.F+CVoKfZnlCIQ\l6\T2%\[dj0Q+QbfgTL1N!l`d
%3U,Z\n_VHheTs^b'5NtE><g$49r4,a+FAdtHklQYg-6LNl]sf+q9]PU2X%r99BSY.K]im3RU._+'g3O&!UuLMpohbhD>n1#;0MP<
%qL^M.V[K2<M!@9![r[%BXcCd86e;,e@j<ZiI2T*7lg$c(T@[XH$]Y@=3p,$VqC;\IrYf;6aG(pL_Q3Nd(lF3#[Kc_23C^h?48n2Y
%MaD3o%ZR2mWlIlk0U55U:Tb)LXpe!?B(597EMhnKa/"!2&:$s5%j;>])OG2m#]7g`$QoHgKSdu%Rpk)jF,\s7N#Y=7)5)PO!]Mt?
%d87<sI\UcP_d$-3Wi5\#YEt;amAZ-g0e`uqrtY,Q/[kZ&9(0.Rkr:Ea\cJ=kb%rH<Tm]^^r),(X]6sUW>`bNDnejm@fQ[.E,%ndE
%"917QCh,)tQ*q.^Y7R&k-@[8((ddi.pHBo^)</qS>HaKJ0Nq'La!K*4$*WptQF5CifkM:SL8h^1)b(l5i<.,hoicOJ!RE\5&SNPr
%%%4Z2M0EIe_0Q!R>HfH>QC7@@+&tS`?pAJ+)rW."]L,p[RNDA*LMo$fVh%Y60%a!0Qup65h;(;4GP?k`LSse4rX_/pVsa!PEgZ-'
%C'%0:@\tI@9_ebt7dW#&Hag5g-]Il8KJ6"Uq&;l=75dsPTiTY&X[3RTnJ<sf&/W\K%DC4F>",3??Rc]NHJ5t`j.bud`+>C0Vsf&#
%0h7_7g$?*=M?,B(3RPH;)02)Mr>0bRPmr->>,M(1QlM+f::(\&FLU,Xd;U6]>Yde6<t;L42E`e[++?]=3.5$9D?`<#9[tKE^P.ii
%Uml[tHS)/dGon1F#H#Q,6P/ib>Q(@#>:no:UDeUG=dWJoXml]SKKT-4R)j#:[-+C@<]c6k0\Eo!?q-uXrWQ2p*m0[.E+;hI&>W:C
%4=Q(ONJia]feN+1qt_ghX)_['fq.R5*>_S!lOWqa#l1,qe(<uK;2IPuMklB`$/q!=8nH?jI'SaN:QllF>\)Ll0"jVK<iqh[#15,H
%\Y.uW.RY'8-]LlMMM_+s^**>U.gs%#[R4c`g98BO)a'K>U!.\S9LOG4q+a"K_@SLTb84*i'.&k[-J^@f4&Mkl-d"AsBjd<@Z;'.]
%Pfe4(M\:c3BaHq$^)&(`C,mSe;*l_^jR5P5(AU5W47,HC6d0@"b%r`Rs!$0EbIo=j^L/]e-mpe7DZ*f,7B([4]dR<FR?ieXg@q=p
%P/X5dqKLbR;Ya(7;8Nl#/QVmI?DX(04Z/pDq%I(ES?e[QLZaBFiAHh;oKA^RH3Eb2Yo"hmhs1#kg;.hG5832T+'p+Z`qU9\`GbIG
%T<UVbm+]4$q'Vdi1\5BHj4C)p?OO]%R9uHZ[@(Bk$GVn5;9LLrqd/NU!CE?&[@(+nGC-`#ZM(D`[@(*cH*r.0=7]c2H60usm7CeZ
%#T!?IQXm#Z!oV:]Ibp%ER2L]d_9@jMAe`T0Obnl;Fs@Wo01'MHoYHP<)uJ7"*iWQHBs\4!rQ"LHmWk<Z>rFcEULn[=^T0,o'<5j3
%rG8FQ<;9kA-#21J>9b3j0Q#.4q*r[s@DgGI"V3ubFl@<g?^!6l(s;2R.)3^6IE.,:I$HPeUJF2oO8Fj>.?97h,5PgokVn40UVA7"
%,4]O;E>`*enhX'hRC(K-HbInsIo,?hB7Fft(QD58-N7uFr#<-8:WFc=M8,g5UnaC0X%4BcB%$X!`G0V!*id-(#,D+GJ*G;!km0&/
%\uG<'+kDL=UUJPEK`OGK><iH[_l.?C!?-VGVTp>u#igH)A+[NEj=lJ:!"J;iB_]]nGiE5-DO^SogZXD!nP^/AIkIZn<K-iE%q#5M
%6#mks7/WisVe.a3lqY=Kp#"HqhoWP14,*tN:7<f]Y5ceMs3@eIr[g0C0>j/_s.*HqSR)9o44ti`!TobKa@pVtc$)KU[O-C8A9Q4A
%G0P5Sc1bkin\]%JX?XE78B\(nq?S3@JO`[o&C,6MYpJ=:D5S6A=mlCT$)X_;enTi/Og-qq-1-A*%I\V%/SbXNap3)!-%o]\('L7K
%h`'e^f$T\"'U1p_1g;,mXcT[0<lk9f:c<Z+lthAl[R)lV+oBoj6BiM>^J%+sYZ0F:N(s^kM+.gU@^BsKIQ+Bpd8/Fb2.bHeBB44&
%g%sA],*rpO3E,t$C_-B;hPD(971)%-/X/S`A$jT[aRq>2m$O,RZ6l_fO27<EF`0m<'H5#P>FS6m8'^<[Y8>G!+!u=(U";.O.+PVQ
%fpr5/X*"p6\Nd\SKakGapV+i'#Rh;L.(2@FAGNs_CuJs6n1n3mR4Z(q(1,jQ\CnaB06(p:KpScEG]B$PaMNkA$A6r;Ad^7*>_109
%?@HMFAUOL;qs<pBQj':[;t*KR$IX.1V=rY,B&]^(=_:;rj7H$orNM,4%g\OcCgo/5R.Q/.KR$tFUd&Z>r'n'8O,Dig5nh$&<?>Ym
%eb]O+*4aoi$]Ynect:+61?:.R_=9TLM<QCgP$*=*r.$O[Z#TI?VXO0\VOrt9m-.0LV_=$&:&d)s.4R7JWqFF!,rOTIY5Ai,SXSB"
%5;=V'eDJOmi^K![&8s&;5iYbE0Jn`G!s'>>S94@iGjf4oC-A=&emKHIO=kh4D#Ojlpi!57rf2*8B/))SP5276bFV^Ihl]:U"_R:?
%%K42GL>%OI^l9l$Z$[Bt)Fh5R:bL\9a@WUF#]dfCK4@R[s(tC/s6t)e-WooU,k6B0ehJMG&s-_k(fOD_9`7#,ndX/)_U'u@a-bLO
%GM6k^[Z3(Ha-\^*bgnL\lPNR+Nq)Qe1])Ks*EV.s3cjC)hYK"!2^m=)V6@@'/MkVJH.).SK&#>*FIRZ_DtY]V<XT!5-bu"k<iEWj
%"46'PN_+tMcqR[3)0st])]5,<Qm-/KIU'76H,NEicosf(qg0`Jq16RT<$fJ'gseGt.1@rgh<iN01c-Kh)G5a/Th4,K'@*Zcp\-Q"
%C57oV"re@)Z\KidU1a2(UgK8gc5r9.2%N=ePHb%]cUo,5im5q52X"3or0.D/H-emjT&rJXg!`_dcnbUTf0Y`/;mKC"F#SBh(.uK/
%q;5o(="%OTB#@[e@V4B.-=\(QMrN'X*b$ft>J@tQhY5mrec.*NS#sW4:!uWro6ltb6YnoS\s7LoYOAr9B3*3h$Y$GGmXK+3ZYFAY
%c-<9!@;9E)goQtA)qA2LZuT3l9mefWgK?CNoj!=97SIMV(P8qq3B&JOB'%gLS=>dbs6ao&r(c?Y-t9'NS4g)mJo5lA\nfKhenmQD
%"I]%"/tD'Pms=E6]sJnM9e^o:_t\/\#^HONPe73<lCTR]HTpTY\Iqj9>_t0JpO/R`5P'DanLR/=:c:pP7D)K8l'5j16CP!Y?8;=A
%2F=NppA.!W@90?J\8gb=a>Y_IN?*_KB3NM-%uN<2<qQ-X'/NkRS5b-/AHu`;C-DL%b09VND:AHt]K[=.mV6Z#YKfmjAnQS/%!NPT
%b(Y9L<O&9R8ot-]'24\_<n*)Y_/E`m;qhcU(`.<<2T,.kG"o.W@>,I"T,"U1'cE_&[lZHe.Jt-<^\NLW=?_E*l$o,g6)\RM0''MF
%.tr5\OO6Bb+d]fhYi?o6#M(UlPNQ#D:K\?$S)\H(ACl8V,1m2A4,M-3S"%30DO)/6FCt#@0,pLOllaM.l6tc)5J't:#aK;BmkV`0
%"@`#3b),juAkCB$.Je`id4?[A`t9a]2E]M]d;4I+KWj53<8'$!JnBqsIoeHM!ag#uF&i.T!2+>2<u;iF?.TV6+A=[&@GGgCN*\J3
%dbGfG';0ms*t@2\4XWHDlF,Aa[#Inc.@@.!pt[hO\'0:e2b00qZf!gZ%W)t$-USB-*ZW)=@FBeg:KAdJ!'0iUAJQ5_5;l9s$M*Op
%K9Mbrr#4HI4nABE=A5P\I'6Ujc^mZa>u)aBc4?<@QLB.so&2`1S?krcK8J4dj8Af<S(mMAh!ioL$:t8r5oD%6FL?6J>_kn(9L[=^
%6bRi=Ce:+*07e')3Vc?NPO0^2=2O];+7\memt_p\%8HdW1(kbYeqnlI7cHKl-0*UZ16%!XZiAGOYiE+i.=T@Vh\"0K>V#Vn>O6e_
%s.">#!1+<`j%A5"Bu&32M;[Q-1\%KbL3XO.<9DYY6%uh<E8%C,l4`IOk-/c=L7L9j0s6""RY84BM"U8O?>^W^@FlS'd,U9I7cL%I
%[Mu,'aU^FtMlCeC8NFXUAnj4eC:6'lC<"PhfedDGHE<T'E/=\+4I9lte#S1JPJRIfr(le)T<3E5G2bLsGr3p[nRg4UV2p\5K=AL-
%Xk'Sjq7HJagLBto[TNMQ%"@an8;l1&b<4rK<VL&q\4qXRk>SE[5bm7M$mhG;Zr&bDr\M=fkHp/n.HFa-2*ddHq!BgB+g#LENC_bE
%oGWi*]qa0g4*"q7&WU4hN0(@`^""n(,bR5l--L&*UX)6&n\OJ_==!,RKSTo.o*\).JKI]B$H!_;#K<Bd/ApCQhnOX^H^1,Mm!]P<
%#MsM?d6POF0?,X./Yh2^IesYK=X^&[8Qel$%TOB<8QJto^g@r.L;'Sp.u:JueB7^n)PPclnbVN\%.F#'q$XH9keqE>.9+@kA7$2O
%]?q5G21C8q3F,1&kdj=`*"S(WSF>.h[f.:",;[1aMa,p,Ws(lh5JMIQ[>p]l_)#k,#&TT_BD"H_Idq]S2Ll$d_a(Fk%DGC(_<K?r
%)$.@@q0t9G5;^P3#J0^.B`MCc?<QRcSq#AZ?L#_tLOe@%Q^+h69eU`NorRGOOt[<2>#qJ6I/+m,N!TYnRg9)=Ad@1Bp@X/="H.B!
%B_5(T2'E7uKE%--n_Z.adi;lf3?0PC=G7&m).=dRG")1OVm,]<Gdd[WPG.J2B4]HU>O;`9J%nrO2gTe^gG0n+,!-4:WW*@<.=St<
%k^ST<pG1i:m>hS#mj[be]p;gs5&Qm'=?3[9@Hagh8.P=D>`=@1hV@Xb-8?_E-#)>pTo62F]g[/C`$IfO&\b(/bIu%8K-(an'?B[l
%QR%!iF.".)+XA4TPI@R=kUB_aPZf%G[JlS2f"YNR`5oU[1bi,9G)p1I'Yc/D1=?FBh'N2a[aE^-.)5T`OAZ$nAEKr<,"X2Ro0MC`
%L72kgAJeFo`@Kj(PZ?Fg)U[r$g!]8&`-^o5mS5;8+M)mNYTl<;4_T+&$9tar\!,Z(Hc#rnoj6*]PGq\c]4R3q3nLi_okJWZF0B@V
%_??bi_UeG%f+'"YTPm7OoNpFZc+f2\#68<,iC\&j\)@hY8DQ2)La3e`7ki+U-o3)[cU'H-&X65R_V0PV3It*unh@qSi=/j',Z3XA
%dD0S:G1R8="SIg;!p+%7W\ghD+2M-5DHMS8SoT48KFde"EBW%.!4i?gkSa*_7\jSmfoP3oAm[3\/[J6J*@pXemg`%C$T!+lGJ.)M
%`5W-:$l[W$<^cc`TGooB48"/22^/F+lZ-Irrktb(K6H=m5dDCi/%Da9I5F\?WBfA)+</*upERC@&6<m)%Hp#2H4<p^Z*F)dEKdt!
%Qa8umMkp#7-]rT*CKY5^F^]@sXkkG6po\%Z8b/SuW#VkZ,3.QPitEdA;@u@1b",bKaKKhBP]&)pPUC<YPPj\0W@"Z[Q'^"Ec1T&T
%Hm'7^msH9W'_%*Q"gcW6ljk,g"XJ5>cP8QJZF^%!U>has(cFK]X)IuTllf;W`WP?%m#U_!BcOI7AodR0M:>cN5c3'e4%?$,'__^[
%rWom_\#lOtc6XZJaTnqlqITl@:7VHhYX4LEqYAmq%e>6QMsBI?+qi!7SK4[6_7ZLU[.a/VlAf]#YRe$&I/;kC`.^@_.XDJ%4oju*
%-pc)e;h$A(Ld]-iTE`V'(Qk=;p\J&n.L3fQ?5uT@?CVOJE#4XHj*.9kJK3`AER=(sHgO8keX";0mtTZ+9m>TXdS9I&"Zj%tCa3j&
%Sr$]Dlp9Zon`("F='B2PGs>E2q%J%g3guc:7@,Y"Kbd+^(D]McZ%J#pOD-l=R<fp'ZKK(,PM+U7,^r6=5n4gD&folPn&Q27X^]s`
%U\_h)OnDYR+$Auu07l<+#"[&TM@gPYBcs'4Ns=TR1qi%A432l$.uQn?hJiFN@$qL4)71KAr*VK&(lfE+^NT2gFT'^s%jQ3T/0;Pk
%nSjit)+XH<,DApJqZJlPOFeXi5i55n3gQ[K&[R*)eCb&t5q[_FFaR9T@lG2,.L$mJ419MFp6BYI4HgI>l:BL>RV<eqFjb*$aIXZR
%(7gdd68J*LHjdJ,lD.B6ac@Fu^Jpp5Cf28[)-D-V3o^IF[$,@QSKT84cZ/;UDQ]-[C5?fY8GPb$CEjY\h[2*nfiJ]3%+OUPP#q_n
%3ui(G$@'$@mnI7.Zte+_6*$&m\-e`P9p'4d]RFEm%;Yp\65cBb3._9t0X_Ck%mD!L'bg\`@$gfqqu-:%lA$QZ!/m/6F:ADgdJOA[
%T4C.fH*teJkBa=Jp=jof;m$50O5$9:B[t>XB4:lG3FmUp*'fY0-_Je#=-JqeU6ssos$eLK):2<:;7rr3*Q75,'R.5D8?NjoZek4J
%s5BV9%PI@-F1c]n%El:*3`%/PaQ^":;"DS]Ifr7=AEFI&Jn>.Np5e@f'Dl%b7tdQ*5jc8/B;KgWQ]<'H1(pW[;M%QIUMLPsnLN=K
%9_ZoAq@2&f`"@l[_bNIU+-;0kY+BHW19FiiHcb!7;t2jCINS^Q"NfM58qnLK%V/Jf:O)\J2q`9#9)K_m.qDdC1r^>$NZbE@Fmp,6
%`VKq9pVe[[Ep1?Xkp)0UOOR<N"TJN;jY`Z+lO;pVTQ!X'&ZBOW=2MK,rWon1%TNEu#n^]%lXcKH8r2qrFOfkR^u*$Xp$\O+&g"(-
%Wr2Y95@C-VVtZTh#GAfao&TWj:>L6.R4L`(Mk$+u3>tTm&mS)uIVP<re=\CA3SnCR_;k2r9A?A<#D8/kj)\@q^`j<H2uB4.2ig73
%!EEsf(GJEU*6E%3P9Cb947//?G#<]uG&!Y;3LLgYk-AlSk27qdmG"3L?8&sE<#Q(%C?9%\N"Q;Lp*Xc%#59hIa=qA"I^7\uARlrR
%oHWk1Wo1skG<4;fk!l69g,5r&BeBL,]g:=/?2c'?oahc=M]*[gPYEQr4qi/o#ur%"WmA!u"P>Ho3\8[+%b5#s5lK/Z&gg&hBudi;
%rNR.1P.cTV2/M;OSOH@E+6'a_H@Hdq]-PUM&`gde+RA>O/GlWSANlV#J#1>>=u:ot"`)^cSI^5]H:HJci5NjBZ=QpK]F0KDGO6DO
%!ArLXi`itjW[@`O9s;QN[6E\%#)$:PHDgbQHNm$PK&h\.7Bhd<`U4TZhJE3P.+FZ2s/Q0I9s]c#^J=A6nbD@GaS%f.oq>AL5]5B'
%B`F53?6]cgiY>Ql#qjL+`d>0s'jNYLeXMWNc$oYD9&L$^R=!92X&(E<oM3rI,kC1g&CTk].+2q[$XXZqf./fs=bHS8a[ilPZh[W\
%nVo6Q#e>($!isc^DlIl5$`qSfp"t`B<-FbeQ9giuHP\jtp90O6*fg]kT15khfJTGp_292PHj],%mYCBEK+5$-(H_'=KQAM3+e*[V
%'d6G[\p^kJ)-fKsRN4C5Vu1=klY2Qo&?V<[3)IOEE[-BSE)tUO>Iol6?>hEnoUE6UId&DGhR3+3NK&63HC0brXXn*Y4kX&$0)'G8
%r5S0dhY)f1ZZ5oII'RMu.WR_nSLBDt+NuW80Dh3?Y;$EsWMehBmcI]^\(a"(f$Q=dWT0pOTaptaqYp<\m\XA+1Zm83-(@R\fAFhq
%>eNQ>b1Z^PL4$J^cb;T?KtG9lf!^TcLp?nJHs<$]jKl_?Fo&MRI#Y#FesOAGLSHHBC/)E'^OOU&RH2o^=oE:YO1Un+r8[370A2@u
%f+nVeQ+^oA9nW8,IsF3sA8@7XEk8[5]%O$Y)uWGt^1.6bH!/9jf]0Hsc(3s31(Zd`Q[,Sq=m4Vg>P=_9&5=O:f*/:DR-tS3DY32o
%9r#G*`%/BUGeT>T#g]JED381_VbboNik(W?bC%;HXDVAcc8SXdMVa#)Ais-VDNLi#AmLa?F5^]JHoe@+>DkSd#s8,?d#O#WDa6R(
%2g*d2d54bdl>]nk<0l;/Xcq8Ggj[m2AU1sjj#+Gh^rDi_X?0r=He>qsS<K9Kq3krr)eN\f7m^f`[T4#V7_0l^g4Y48j2Kiu_<1Z<
%DG:l)-D9_A]emJUB<8$+k#M)'K.G84ic2FhMhn0GBltK8E\C]kk8ds\G.JQT&rqQM<KA$kEW.5qY&>rSU[^DbVNKfT'-7=0TP9ea
%gjstdinO9'kM,-AmYJYkeoEES2"$Yk5T5$f`4*3sCKu%\^?#cF]sX9.^7IMsBt>.Vn]oQ,SH_BV%p]kj4VZP6XUBY7"Pb=ne(JBX
%m]=gj&YqMQ[A&qlYOQFGrTGi2lcTZMWI0!*\Y"<,ek1oo?Rm[,::(YSK*l;_j6\to<5$K2]^-&3/eR1SB^8UG)bk#mm<pIk>:Wo.
%k,OfFBO!\9hk!VL'.Lc=BU[^4)o"uQ2i%37gMU7')^j6!=A"Hag(KS,l<6;eWDCFe%$L$k4_5??/e!H28]A.C/,=">9f%Ra#5Zt^
%9JXu'<46sKV>cuc3p[C6F)sm@51WZshq1e>.tLKC9:FQgWs0B?O^D8V`\J"fi\";E2HR5>D6GZ`@4UGK69*u1j*4@H5%LqDD'iT[
%@'W;Em(oa(4'mG.<@PYiO0l6koLV5F4&d'jW*IS[WpO$W8O&<S?FhG"?$h2srSt#loR:M'CBt5'%Dp"BbO.5(%5c]4-9)s9WGPmE
%n*qEQX.XBHrOqW(=]OK2iH0l'W<8C]B$?hq@FppW06"2lK7/f`Pd.LC7Q,Z,"!p$cD]R[TdTPlHaJ\Rlm,IR#?N7Riequ,9fl_@O
%,u4`D/al>9l,9Uj?Bl#mHql]:6.9YiRG<G<O`#']3p#p*d`)_/r'8M,RVti@#&G\>S[dp\qrM>K/%:hPMcP&P%sP2F,?MB+a;9id
%Uipiam%A'?*h<?pn!<%2ZcqrDM%,-"eYR(V>CHp4KSt6W3>QI>6BD<;(s')&o$CO>!W^RU6lo_0<>8L.XP@!YZ@s-@IZ7&!Ag+n%
%-1Uc3<a=DHA5)U-$H,@6Um+#'g/$cgF(,QM`RNC=3s<9>ZFcKA*AU3Jf=bgqZEduC$G0C$Fh+`+El"'6/iA),\rbr]$VqX`06=c6
%hmSZEZWiAchUl8g<\caSgGYKIfSP.<2E4B_LWn\JpeWF]F6@Lc$[6f-a?Wsu%&Iefo!4Y(??"57h&Lr]JqjPTBZ[i,V#fl2)i./i
%'*cM0Fj])iH_`>$TMrWc@3g@A1lt1g!D3[CJ/0i;"DoSMRPtZsA!fo>oLH7I6cq5&Z5@+#mZ`=0R#i>LRfjS4,E2!=;s,bHMO:7.
%1n/r/4:,nT.c8Ui(m5#jAk3c7'Ca0a*#!p,($*FOVTV'>6b-.aGt=TBJcad-8F\kY$UG\\F6OmTHA@NXIAe21F9@&S?+N.H):i&J
%RZ[O%,.(eeU)_kWW!;1dO8(bHZ=k/CNE\c7\np%*Nj06c-fam=B8:)qZLJ@MV`+Y(DL9NaJUn]m#:>XT;(T4pKW(n<9cim=NuOD@
%4sW<l)U*>#!T9e9q"@57&/46\kg(\&QANMd9m6f#jb9M7Yqu<;LqoieQEHB.jN_+X-P3:]8%Y_MO&3]=e/aDg>3Y=NPM]s)-CSOb
%EUOdM79kt&)9^rcEARXM0<OZ>QpT:Q<,hSJ4V?ElRFPFe?#VT]p..0a3m[)Vit3#-@_k]Ae5kG+OlQa9n$oRBA(/bYG0u.X10&\u
%!<rL]I4o3UWOlZe1eg6aCn.e6'1L6JXhZd;r9i,+b$H]LC/t#k0=FbGB@EuKY"@7>NuQciXm!Vu)(2=3QPZ+gYdTUfkJr]JN[g4?
%gCUL$if-[!lWI^TG;1SUUB)h\KsYgDV;/pt>EVhEgJ#Ucjc,#m:T)]%jToDI^EfXFdgTg<1o841Och[-"`P.:J*j)fMnCeU-#Ns.
%9jsgNDS?ZB5QU.\a2b5Nq/!-YjREQ-"mBWLUY#rYl%*[MMde>UV2(pfMnOe108;&@!j(+*a<%1SAY^WW1=go/gY#fNg(,YEOM`[_
%_-M1IQDlf`4\,88\Eb;3e>@42qYbsiOb0@rQ]"SY%T";L'u?i;_hVu8^NJY'&ZDR$S!h9E#*kS(aijR$qh9F!cq<E+iZ/imhKqgj
%9k2iP>QZ<:b-'Xgn"=abC])WFoso.p>%6RTTNklbO31bh`"LirqarS)WL%_-F-U0KC?E<1J\`pYCu+`4=r=%QG3uROV2"Q.7'a@Q
%daZcD_EHlCr:Z%"QW=P@Wi"])./Vi]H$ndIJ"rd'AA$93F?>8ZTFl>>CBG>ZcEuS;obD'2>;is;)-&DkRqiDtpKK-Mc9Sep;N74!
%C%MUsc+&Rb5cA.HMnRD))G^fX2BU0B:JVF.c(1D?VNaOP4XAi$jS[Kel?keI)8'pHC0U34=6.No@J[X@Mo+Rmqp\bj!?mu*(9at%
%i=i#GU9TeQCfm*XD!M;iaE^*&AM,WWqF`smcX#An;tn&Yhn**BZ19D8HR;;`O?(OuAH3b-o@6T1?#2Z%o40gP>KW68U\Ku.W/9oq
%DK*k?5?^T6L1NG".Xl-SLlhR'p<[,oq:^dUR"-&A7=\"HC)m'-D)IeHIVpk8LL!)',cicNmlcU#(@*jg\\uY;\:-5/gg=HT3[LqZ
%*6(E#(LNGB?Hc#`T@6TJ<t"sj;8KB0dT^lXc`\_LrMqdU.3[Onf)of9-\beBXNt<UOiY:$[g?@`R#[!um$\XG@$Tqi5'C/oqa9"Y
%Fkmi9R,75<G#=,]jBeX"+25GbLEc_eeEC:!mUF$6d]/c'O67!d4BFP(D8GdqN]NFa(d:r)b3#&A:N9UMV(BZ7oAc[=>W0SH<S]6<
%%t!KDWh-6XQg;7&fB]Blcdl/Tq6;"4,qpU[8=M-AG![4B%&A"T+GF(2[(Q59qWfP.3C]c+S.r;V\%B'7d8>aSV4kh^d<2c:M51ra
%V1iCXH%+uaa\if0c[%Rl-82BUh2Tn8VD$eW]VN)c-fZ`h4)Nn:'5tih%]S4Y+Ih&V?hDViXN^h4MYl$6\QFSW['=qS?E]\Q^)npL
%et]bESi?cVGo?l%eBQ90-itU\h7\19U8D/\d<.uIY#(_f-mEQk6pu!3/hMkuDq#/>cK;em_=`_2`<>5Sba$fK\fW=+8i)V/DT3Qn
%TUfr\Ncn@cXtOX6ishJ\Ms[A_0+2I#K_8X]l3bt*_UIqM'YR<0.=B63O<$V:Am3No,jHrqFH2Np-bWW4.`&#R1`Z^)MIPC?6p#ON
%0AT/\d`l+\1ipW^Bt:"Eou/9+%<W/+BOM/1XaHV?e]t]9=N^)M-DFe9$_0)X^u).XQ$Ml=7IWAD0)EW6)AcBgih#"B$*p&$S`]A&
%FuP>V61-;#jR+MZ4!22,1d?b3af+[NIHGiOCRb\+BWQLZ+c+Q;h.50]G0aHq,hu@g>-=[Cl31i>MGJT&g<k'>A7uCI1@t5_rKD@#
%Cg.<<X-<Pe7sP-4*H#j(,Dqs=BGNLp<)iaOh5d:idp#1nX#h4!(u&tGA8_)(mb:LU#gBkBd$/R[mb+,*![ZM`=]+l.F/urL"C"Co
%,'._<\*8!YZ?a<LNDl_I]Y.;"Z8^BQ2qQR!_gFCiFBE>HD`nB]OOE(NH+ma&L&:6BXZ.^<S/b9bB6'9[2OeTt<h$6k's6-B?.[BO
%\ro'FhP2d4ngqF4J\*eDd5C8m@8Hu(+D==pA*>T7DJh=)a9m))Bjkn-;13lA0-JEO5iH52V<V<8ko`U=I8RDYbPf(s@;S/Ci^'T'
%YASVC,+?O3"'g+CDoNP..k#+BQDB6117um+O7dm4-RJSIP%I4I0COJnOOlTa16e3<qJ%\@N0jgB3oh4+<k`YNJ[$eBEcL=t>LRU@
%]r4)4^$"!p;\SmI&)[fB=n^7USc<YtP812J4R\7HA#ZXHk;.lsB7KS+^R;:t_O)lf^K2+uC&ff+qZcIi-!)ECf/m%Qgro5"p?8d"
%k?"a+ednisD59_S$Vl0AFBF7$L6C+\P]E9)&tQFn>M.obmp72bE,`,`Pt!9>Cd-*XkH!oMa=fI6+a7D7:4,2tC%\Z00X^8MOPd0Y
%h;C?o"&8BBo#hr?.j#-k)MUB;nVIt&A$2>R;VIbpPQ\T<8>)\Ohj$MehN2GTo@`oMJcarNjk9q?-@nj!AId_P*M=hBF!k&3B3@M/
%<hQb<.lS:gF#VKkMnq99bD#<A=\9\DL\0mE_=7s[(5j'AoK>>6?=n[>4.l'ikej/qZP@5*_mDa\8]EY`ir$Jj.P76=5oSLlfR1l4
%k0E;Wk"0q$9(un!?J>n`gYs^"ZF$\^CBk`5[k5+G&nh!iQ'emNTmuZaj=8;d.=UVX/`:C2I9ueZEpL6a&nIC(h7^dTWLIe5/LBVN
%C[2Gil".pe4DG3rnLa-Eq(\4tA;a^Sd4V.Ok"S+7%PRbp@^isV]#^CRHZp#Od]'!qlpE\7/KO7smUq\Me!rYHUI^qVO:P#q_7E\)
%bN;5Y0!<dU/ir;k>7]Br.sk)Umq3/4<q?#XFOl7kf>&\6l2H=SB:hM/V%EKm.'L4q4HnN\H7<ZSgc)ugT\o,0@Q/?VhXHTI+/QSu
%@mp#WSIM\?$?pOTH-cTD[?[kPdbO!=i5(Ydhc=g9T$2=dY5b5IgMp@ZVp[um5gsQ:b&^^u7fae)R$!;,CNH\kn<EEC'/urA8niq,
%<t"7nJh?BGgtd(X[I\k$>LFc>VbcD?roJ.HJ6a2=GguqD0SaA*oZ!n"PiEJLq-Bl$,Hm6"6_5iKNEC>6U34V$05V"(q8B]4RG&/>
%gWMlFUGM,!<YV/1`2DEDqH^!$JEi4h\`C"kD=5+Z,KecmJ\i>Xr,RcP`\,`hR*F*_Db1bGDgH[BY-;P?c1ME9)ii?SFti!?WEG4e
%<R6UnEM!TZa[L4u=\Vu)Z_Mph&u&Ug"G^uK'%]G8HnJL22==E>[Iotocb1MX<QiTLh)$`]\WaN4cp3+gUs$+A<tZZKa8(La_*)16
%>-+@%EYU#MVGCYU;skWqa58Ot'@4FPCk(CrQag&\C#PLVpf,%V>,rmOfis`uNq=?&<Q5B'#+Os@C>=A@[o2=Ik*?h+LB`pF>0"^k
%g2/a(Zo\8;Sn[Ol;+PM7Xu/kQXTZ+:H*3fZ[q>G<&1Ft5=Njmm<<dNA=#YDkrW?*V.EGrd6]f;f%:./j;g5Fkj%FVi:iMDA"4c).
%CKb?u>!P[;,6p^.O?JQR(a!qHi6P2uK<tLaC#e?]N2SJh)?C2FO"YjQE/s6DAEo7F`R##(#p6:t`r'>FSP5dS*7(1o<FgOJ2.T?+
%8>(!gD3U?a/sj-Wl=KC46*4MK#e,3_MLd.\0*bq]J(rh/dboSd/:LJ+fhErsJc23i0`TTWkjC[fm<@A?>K2Nm]@j/JGP-FFh;,[q
%:pHb(!]LC54@mes_sYII\+d&\+1,2RHoHXg8"A=&J*QIKO#H+:rm!hgs%K%<igU$fj[TDcoIbF=M!==js7l",3n0#:Ypp4;C)^=A
%Nt-FBj1E"!+5Uc)'=ZhZTS3INa:gnuOU[k1J_Z:k>UW]+Zguci!0i"sD735Jf6IY9AXls/2#FUrrY.DS.(V=Z=/PKmh)nkU+N?on
%gPGJ@7`;h>2:=;W_#%I!O+u&=oQ3osLu*u=G[e0)<<SsIUA*TA[h"`fga3oLm,<NCB92Zm%/e!]7(S2V&ZZR"Lq#/XAC.o*Fs:OR
%oS`K$@kE9ZFpI4J84ECk$rer*-GEhnO0j#WmftsY8+1U5n&_>.HLOmUK^]#,>%YJ.%7XrQk0mOs!Q*QjGmKhOaIq#K+Jh\j:j]2C
%B]P%fG/(QcPsUgRKV/:T4!Po,ID&SPT$m+r@LPIb@g&l`d<4kU#VdlU4I+UqoJY;$E8#fr`7NonWuDuN_KRf_f?hQh4.Sif,/%k6
%I!u`qB7);S:4I^7(PTOVl@,6%e4PQ&.f#ZcjhIR1AA@,sN9iH@FnuoIlCZncibAe6#<Ip9-#t,X=E_%Cq7U8_qd"SlA(\kokq?tm
%);3Ond1Q-B%K"Xj,H*Dj"=3p3!U*JQSc^?nME;^E5-?-:6d86un4$N0D_GE;^nVOLZLrR3f_JC[o?GI8dO1UEV4o8,)?OWnVr0c0
%S>Z4.dL4gWNup;)(;'N/j3+>o%<d2MHV3M)U"P9._GBY7_uD<C%egCV;;C\[ZZN/?:[rP*Y7KYh,lu,ThD\&d6+bq"c.3[p'Ltc[
%G@1e2q<t<^kjD/p,)*[Ai1Y=d#C5Lg+[8`:H8nPO0?dOh.Xn,/5o!s%B$GF9JbuG'5LJY"-5rm;b$e+1VME@RLO0/Eh9YpW=q&^n
%kl"1>LRNij"_EB23sH$$X^YLG]mm-`0YWG%?U%7;Cp/$nQM[W@VpC_<1"g281_WBT8O*/!`8U.CSr3:V:Ycj[L<t3dF'J-f('oLK
%BAA(pbUm\ZBJ_YE$]"!0kjA(%T3X\9=&XBmdG@J3CFA_oI-NO,[BH"^P-BG@]5b:6=3^Zb_dCR>m@]SKg,na%p"*QuB^@#aNNOn[
%7ADAgYY(^Ia18Ok]H8t)PhWUl%p8I8_1oi?>fCWT08o#W@nt]Mmi$NUUSS.pLq?`LD_^lqGo7^d?7H28E1"LtBjOBu^u6.30&9Mc
%i37eD2<C@sU+\$<0_hNB'OGS=>AOZW@9%2`3N9-SK2mGj]@^>(T(;+"g*q-iA^"Ip*=ag(@Q&Lokb0X9(8&ia%/UJD0B"UIHeEjP
%JM0(\:rP9C.,4NY:no5i,dH_;j>43aXhUYnWS>LZ9?^Xi1HWsHr:/&^T3b;-[*i/s0qV+BEerU'O1Fhu`]`*"ZC!cnn5#EeR%LVN
%M^8qdk+`A<Hbc7mfnK;4k2hK6q!5,[mXi,&8V^n`.OB!$\6LkQ?>m3[j&@A(48cpH"qb1m*"f>3mms5Bm"15,1Hu,WN^)Pnk`4@-
%&ZNrD:T1s@;W,(p&CK/e3cf9!+Y7-"8Y6fC'`R&JamQ!Dmk1u*lHW9g[luHQN)l,7\#4Io]=F22Z>N_;dLXc!]"([DgO6[kdlrc^
%L5##=G[qm(W_:SqX_lSnq9AiRR3WeQi&8URNHjmPR"['0E]eQ95F)"t605;beshFbdJ.nBQ5qT#%QBoI:$P`'':%@%fM9:UR[h!j
%jjSH9aSJac0$*F,p2UG2PLMm:s"%5`ecsjUm<fAbo/3+7W9<o"V&NdJgMQKFQFL$,/@_[??mp*ZLM6*c9.LLHNHdM)eb1iN:;C_*
%AS2T;n\Aed-R[ZdJor@8(KT\5U@U)t&Y3:4[%h]mrRY^>HS$B%[564oc=%eKST=oL>CE$"`_LI/U8o6u.TU^:>m0.hn&cjpc0&.Z
%L&"BQ::0#m]i\Qk;[H:kkYcM?l#@q/^Qq$B/o^?$FAYM.]X2ecqf&=R)pDW1AZ'YmNTH$uFS.&IN5j3,da>J'VlOLj+nlmLQ4pOe
%HJRA61@;r(PjQR^Pb7Ct7/=Zq'GZrm&#7S,r)6R,TC&S_Hbr;']W`L6\;WU?;\f46[cl;j[2e#Z5!4bk>]&#d],`dN9lI+FURD#T
%k@ebT?AR_ODnFEq`U6+ci2f!^4\?-ikcqks*'N,7a.e86kob:Yf$%gti'`B-1,kQIX24+,oYt(X7IQhW?lM]0iT=$u5+T/(U+[g4
%/R#m"-q:6rh1]OE\pYQ8=F*3c>[mE%m>]l0W-+E]MnW2ohkL',DLX9bTF^2I]BPNiV=a]6ge-VhE\<s:@HJ39`KrUI6r2(tlq&-j
%1FKnS*6p"2b:@Y5NR#Gsp9MCm[qjm8c".e0`OYoqOYD"KGgMm@Ib6lS40+qYEu1tMcJ3"2W\eqCTRe/kf%f&%1&="6DPO1HW<7%`
%]L2k/kIZdrh1BYIe+At[V>7Zr]eI2Hlnmj7B)-a:;3^e;=oMHi(ROpl][GAXo:%D4gALBXleQs^o^H[G^W>L!O0>$Wo7_s@@D;BF
%Q'f=WO"J[BWnk42]qF-O7_RHGJ)u\sd5:HcMbIWp\"qOjk0A-b$d3=RqEk*oYHbm=Na<O?k[f*,I<^3FfKSRi(G]-:H"!>s&dp)W
%CN8<BXgb]WS_Vk%GZ_^1/Ee&EpC"BmUW,XlV)MN?p@j`.dF80aqcI+73B^]-&!e:Qfi,Sj..t"Cio]LRp0sJi'c6T_kDdHEUTN0X
%;,6O3hTke4(8"dT\&IX5.4r7t^D%Hq[7Ycp>1J>'j_"15.Cmsr/d_)RC2'HYhCn8b)I,4'g68\"Q;2=dSYac_g=F^.q-J><B1ua5
%DM\$[Sa:K>Bon-V0/*"$'?^\lrFT3BH;#rhc;P7skp&i'4ub&nQO=>Y43Q7<8pC)Fco>128[n6Op@5ujEkf/s"5\!BHRl[jXJn-/
%Ot(=MCqV=sQ!?LqZZ:YFj@ZCM>ZuDtcmpWs_s[%e/'UU8rUeKBCcQ?3@dBG,+XS9QDo[$mHHFgr>IG=u,b*?:c!f`qp0pIO@chh?
%VMW!o'QJ7Mq\EO50&=jW8rqZ7eX_,^\[p*?(ougmQG.Z\),I<pQN",B1`u0fqpt@e4;Ot^`];"aNi2U6b44g+;i@9NAR"]jP8cTd
%ch/(6Y9upthOhE1mCm?dch$BY/q7iO[[FAff5eR;\TV$<c*,qe(AP;[$_LX=Q^cT`\PB,l81\Z!'CnUZ95(5Af868'bt;5t%t*Bu
%iVFhI9O9OgKDHUPN2Q,?P1!7=Q/$4u@@H9)e]N%*l?I@nW?5F6-X2@sf)"/F^U]rG\1"O2eTl-t1Y@1\5MPDnlZ\\N:[:Ol`V$^W
%;jgckd5DmAEk]Z^LjGXQlkefPX*XK..A-2Udm4YRM[(bOAX?t(A*`J^1"K_CFQS7iZt,1KZPe\glkch7`A^`U\?4jP[r(51gem4u
%QFg9omVu7%.!'=Io?2M4>O:jB&:<@lil`WTOOK!_UUm\Q^E1uA@IEuN6.6,*rCgJKg6@qW_qXsVE3m.&(Q@+&T$ZL6H=FOtg)&:T
%Gu!/<A/</-os:#f8^nXJD/E:=<`da3P/=s"9DS4+;(>icT;?RDV'WgS[nH;WK-89NXGUpOgNtumOfu4(VHgO2<Ol1b?up@3X_dFo
%GEnps>#=Xq;l>Lu[/6lKTC$YKB,hZ9o[6`@4jPuDeJD]r=h_2P[]sT(So8H+kG$%GmHe]F)NF0>=k\HjCT3#_QB`(<HhgW!]A-&E
%ZB*&*lLj+VWin51S'9$f\@J)S2)bo&b/'sX4N'/8C3M=8M4NDFf(Ni9[WST/.U15#$V+FW6]p84gH2^M\$G,9mF.i\KC.j6'2X8I
%Y1[+78L-(9SaBAQETaEM>hIHqCY9`?X/ikuB7&sVR`mGR(0;9H]@D)2X$rX%Ri8KfRp)t@>M$%Df/;r<=`:+&2k.!bomG+]+*AG_
%rKQ0.:Nu15>Ro(*:KR@N`Z8u1MZ*N_VH2QcatDHXW`f/a[$Np<9.%!+f*s=dI5rb=esEhi>Zt9ijXqXL>0^Aihr^9/?[MUuH:,rL
%)U6HQq5iK.Mf-JAp;DXT[!*'CKk^6%(Fpk[Dt04.c_s@%rG9;fmb]jAg\^Bg<rHF.FL6Ih`F?"UQhQch_5k.[+3"N?l/B'*+$V<B
%)NTZ5.qAHijm9^*Zuu+bFbC)<'ff'rJ%VN.\&V_!*8Hs+>[5i\NuM0pY9u%_H?HN1VDBTr99VG_9rF_`EOjpceYM"!l*WL#HJ75'
%aIX\Rnu8t^'>pBscOJINhK$m&!nYf^$O8a(K>M^0WIGt;X:<I?]JXn^VQMJEC!LL6.<_u%?=5C/pfI:N8m1&^BV/TP(>"PBbMqCT
%7Ci28(@.9\Et@f(;VKeT'fK+<9(dY8I(<FkR_MPR+)P9>'mItWm8Bs0,sH1N=!s!pPH3D8me&W,0#AZ]CTUpT]Y7;[kH=4+G4%iR
%IsepiMm&polHPO8D>[s2^<JiJQ>[l63TVlnS$fkf`pq>[Bl1c!CZf0IpM?t@H@NlbTC/aUjm@iU<[IU(=Z#Rg*m3=+a67#R#u1#Y
%3o)2K?Chso+0AF6IM-a:rokt[=*l^ae][.:j^mlU@"jl<.lWI_92%;^]OX'>oB#5N?dTZ"aq+?oma\^o[p(9GK7h$d3H\1IPcq)g
%KsJBq^8NHXICQJo;XC[_($k'KY=`U'fBRX8Z)d8mqj8NH187Xu\k=!E9^8@ln%Vk;B@f(p>-kZ\f6NB@W1OfkT'OXm'lEI'SQ)Ag
%hS*a3R^R&?&$_@EI^sH:G#")A0n#;oQ%R]J6bNBOXWM@:eYQ<SH'Qq@B(*..[l/<j9'^Z9)XY))p3(e,Ze0.[EV[Mtnqt$6aXsh0
%S]X""AZa(r^3-s3?X&N\p1BY$cK;`miq#gpMFS3)1iLO[[eP#oT[2:g5&&Z]ai>q/Gu`_e`>36(n@Gn!kSUVNiP0W]Z\%Y>59I[i
%H3H<El[O.0@UU>qm]XjZ::&L:-S*c`]spHPT6/Fo7c5l)r[0)hhd&#0I%me#H2fGjiQK_sVp_g9Jn9E#*:KcpUI\^4@_d'Y[;OUC
%mGM!u:S4qf[9?!$ed[#q6$U]YntKmsY25j2j"A3\Fb,e7I.-7;91n\#D=Wb#8skIVC4t]5#UbMn5_R_Kno+P28aDWg]_MYq6B=31
%-4%;G?>Oe1O@:o3F<GsDSl(PApZ_$pmPDMq=G)[(5N)/"UXpD?%X&-A#94bYDm/C!NsNos:*TFn9VhM(3dL8MJ+1XW'!-tPDpop@
%N_iKdIrN=e7pOuN2MsWS9*H1'XE-d9Ut<u*7`>%K5_lXTh]%q;Z\.^:rfI.Bn/qTNAj:Pb=")'%d#]e#r:Zc5!Te],OC_2L,#"/$
%,t[%b(KF;ih:2oeb9D<G"d)ZI&&*u<(&O]'3)rR+.T3YW-a7u]AK7Be#pg=2@CE?[2bJrY3fOQon>&qBAHKt"'noL0'k[YUO_(Fr
%jr%e7T&iA<&`,>7Y*%lm/s;nQ3:.-@A0k6pC(b2mPH)D(Ohc(;;&2/LL`:)n(g1ftUP,:`6))/ZACLnR8VmTF6Q7Nchft1AhZ749
%"G`8*nCF0)3(QVDFb)!YOrjp$R]k,t6cL"[D3p@@L_Ah\&kc-]\^-^mh"3PS)50c9A1iBOcNm*3PbheTTUfTR!7B05X.0l3%l?mp
%OCrY870rH$22Xt[PPLn\7>/2A*Wm[7`l3n2M]-/;`Bh@gNBUD>gSkN$^MbLrlCZAPC`dD@/+Ab]RZ*kHf=:b6ToG9uPa)8WLZa4c
%WI0:GGf'*HlUou'QbUd&6be5o8O[`kF[5gn[/3ude4r`q1BO24n15pM;*=I@\KB-/I?*U+=0(8@Z?f)i/VcY'R[J4>OJc0bha;i=
%WNr\a_sOsrAL,)4:'O^-=\oQb,krV.D3dacK&h5;<X*,)N=6/1:*[sO=9NA::^&ThRhR0&C9s(&,uo-B)'8;h2i85@7Y$;f#c*TH
%8L#-IP'GOq5u+EeMt)M;3.rVr<-UuW)A.tq:nsN`UMr_BgC]&aQB)0(7?1@^jWPV*>(a=6'bk(Q9U,ZXdZ@L,U\=J5C_C5N3D#Wn
%g9D(ifF(_3.q1aXi"cm`c2aHg^oo/D*!llf2.DIAb!=_&!6?Es<ZQc,O\Z^fTi%X3X1BPN:ll5SJhi"^N0qX86\Hm[7cE2[61K?"
%b;!$d:1]g%W"CcD]c^.``3<-9C8auFA2YiCJ"p?gr9^ZLpkO!7b`@B`+ajWCg?U!.drUQZ!LrS`bVL@`F+'qJ8Kqi7T%JEKlj;<W
%mI*.>nJuEk46/A'jMhcngQ&EB!\k2=N[JC_Q(#5,&b.(p-koKSH-TD)Pk1qN4"&/XTn[S*0i$hUM<GJfE)%?!S+6h6RGbGN*m%!A
%;5lf_OX"_G;Bir-7SmB#;:=]b<)=m,#__f666X0*f]^cu?TW;ZMQ0'r_huNf8Gj#/82?^6\3s/@OV1;$?V2.<6\rd3-9uq\]:`DN
%eWNF"7WGq/=c41YfTkJ5!uN!h9D*sq%(47kJb=\S)C6!Y&jE5PZrJ+E?j-c;%i-?1Y7?PL4G'TI`rKh-kkILU>9nVc&;KCX#`mjt
%!Jt.up`RJ9W"haaK<3$m._h/K\7EEI^0Heo7c'%0Nc=rVJH-<rGLXVsXK,_m'`?,;8(Z3pO"d2`HX$j1K?#a>m<HkJ=d^drTLF/n
%o3&7E?D!e'o*N6TK-@CM6TV8?1i;8Yhn^K7jFciu;+u"fjAoY$+Naur,Di:mSo`pgMT/1Dob0_%$bE*h%T9;Pi'uqLdmfoF*KB#;
%ifshRA4C)90WR6<Y9I;1_Ri9<7WW.2&_qPZH/W[cdr<gX8^^GPNZ+nQplg'S/4sdoG9S/EKM"5_Y8C**.^QFqOYV]%=DeD3-_WU]
%.^CU3i816EUG/C_6g4))'I[6nS%lQ(2*3?NIb--WJg3-Ajf-.1<F-eWB:\iAs7,SFDFnj`Pi4$pil)^?O<%ol-%X'>;;n&H:rt5u
%nO[//>XmEqTOFhZn@7EGX00oREE$-(,\[N$K`OX#L5&]ihc$=p.&b2o>oG-&aPqJO)'TLR+JWuG\A0=Q.Dm](NBG8P608@j4l,e?
%qfUNJm`Lp;.l1X2);oX\NaW,K#IR4)1fVGg7U4FG'U!*k5@^O6g<5,:ZKsY\O`g&H%Z;YLV0<:Vcn;An3eT2MM^/asrVf:$rqbCJ
%$63l+*!DoX3?Hao,s:s+KaQ?$42;2c+*(8XO],tfkVt@U.E\_r&pfR662aqFX!:@PV3%3OX\j$5hXq@[KKQ8:'JY[X@dhO9</'%Y
%Rj=^t9SG8WPcL_p<O8Djh6Vto<ej;(0TEH_c3PV7.LZL#b;?^@%V_LB;3-ZdN7pk)+VZp]#UG.&dpWs=a>q[<lrR_n3Z2Q5f$Qmi
%*XUFR\5AqH,rk6].0IIdDhCB4LP+O<T<f)[)Ca-#"]ROa_L%7D9oT^,$rpLcAtjAkZ!!ue'G<P'/!VRrFoZUe2^BUf=G<N?'PRWa
%+jDBoZ4g\t1m-nT&JRZu?1h_g+ui'^1'KE5Wf&u(apP:;8q,[9Mo6`8.3aVU;<73b$g<Bpd1O#"&[eB+`2s@\>^R^^@n##83dHEd
%-,%4u[A-DeP(ni'e0m)TNQErl!O7l3o,S-P2`u\B]GTs7+YkBIn?#uH_.$2k)AU<M!HV'[F@H8-\F$fe`Jnss!"(l\@=sO^@@$&3
%_0-l),&Up:iXqidA?]KN`"]eU+b6>]<.MD;m>OFQ&E3e$"AM#sb"9&pOGR&5ZG>!DBueFEU3C\^P$3kq'\+t'r^s7B9u.Q-;$C(B
%@qkAT#rp'"2[Z_b$+?TS6_QF"3c*k]374uDaXntfaYO0.U'V(fpfaK;]L!hI?C2s@/+`2WWTR@prJ]`j*EaZ#@_Cnk*M28O,.&o@
%gdZDW6bl7:]L$*R3`LnHGpg!cNHcb1$;hC?'I8C2,"l&$`$a,50%\\tC*BHQ4]4;&Y,@(,p7qa["@jB8+2j-?9bEL<<u@Mg8(?r?
%K1I+2aXnBAlrp)Wi+[%b>b.(qi82c5%4oP-%u(ukDiKKm`oN[u"\Kn7%2'f73[#R?=9TWr&1'rU;.N)83+Q?iC*^;lR,H-m?t<Ln
%$*8V;NlT.jq9$:Y_CBBA)1bXe>')e+"scS'!3q6#SHMYC:aAJL^_NV0V1>q=`QfJ];Qg9^Y/mq;3tsu$7Dm<?.f$GSjuCD^Z#iEb
%BKjg42pM&T!S#\c36%*E\*@#SZKd*W7<R2f)!$3Qc]7TILGIrP$*[XZ6^:)lXKPLj-Yn9V8L4C46Foee12:p^!+@LJ/u<#Q9*Z"g
%KfTbBQ/LsBD2_"%%sZbZn"<(8W%jrg=%O_)1GEHHTqclN)D9f67.>DPB9!tT\7NCTGV&;_5R8<#E>2)d&d@>C"dtQ[I24)`@"n(d
%2e(p37R\)Jg/P@'5mO(M&A(M2!ES?Zq+d$+W<@FY&-l]+!_V8(dTr^sV9gD&R2j7/5)%tO/.C)Nh<;kgYS&B7Yj*_q4&[#RV^g!(
%=*VNTW&E+l"W=&pg6";*f5a""3h1C(Vl#(0V&-kH[*UE5@dkj!1l;nZ]LiQk!mA*sU@,uDe;b3>K^SsN1h(hG^.U=NNS`b??[JGj
%o!c4GL2T,V(@g?!-sV.QGZBcbA?R'FnV9#3gdLQNn?LHF6Ga`[7"bWY7>')1W/[\nMDPL>.:L_&])WO*FHE=BdIE>/`C)leNEjm`
%>_:51PR*;l;:G-3J2EB)4;;%Bh'GKS@Gk=/roN<pdmt`3]k]hRDYIL'(/^$`M:GEa%]-m_gaK[H&L?b>9k$NUE[7&Zj?W+H#o/Wn
%Lp1nB$;R?p>l#CN<&]WG4+aYA+BbIh=HqPP5NKic-%[]@]RG6*ek"@8r05;u(?4KYBm[lodQG`HaM0#s!CntFnN"hp3J/h,(@"g*
%-ii%%_P]\E;%o:+5$\9*-[j@_bHrr/[QCP&raA+EA8);ScBf%:&`uY7)PkUM<.6GZNL:CHmb%2gkeA$=M+)<bh46>Ao(sh`O]?ml
%2K"9R/t!)@$]QQb8M5VQ+JDZn\T\Mrg3JA[?D/-e3rk(h*,9R9UqbaS+N<9A"l^['e%#t:O.5#mq?_-^Un;2L\,#j[GE=""XijtB
%*TI@CS*4apE<^uu/%Q3g`2do&<0*2hKi;$BA.%$jKqVq+&L!PUJM2mGI@7mN.VY,XeP-9_1'R%p^!On`f-j(LU3enbX<@;m"L"ut
%2iD2bC_%e"&d3eLjI%4*2W^g1cn<Zb$C4Wt-r00/6c1Ya/*5SV=[k"lj7MM6R3kdA=VMbhcF[g<'%BdIlZsd(==EV;T<E%P[Tpe:
%;gB%T>W)drg=\WqaEGkDq],HefK4#HeuB\"%i.JE6:g*R1G8![cSPS"Z%Hlo?iTr1UG:d7MMS;V_o@gEYCM/F!R4lJAS2A.a4V]C
%$eJ^^0^_WblIYWW[aZmVV>g)uJUTEdg8XZS+duIX`4/8\H<A#@s%r#'\r.TgMb\J4jo#""(MgooXBTW)pI^S:4W6Weji=EK-5P&t
%?nrtaTSIC2+p0H10=f,+Yp,>;?`ro]k%2$SKn*5mqW.h_XY3'#A(Na:Q<tIo>CKutD>E'+WJiJ0A:'KG30l+>0Mpe2I(k46Hd%kI
%G(c2"[\NX.(fud6#E4Ar:#$Y;+j<Il:fG^r[H_/UBq\Iu#+hYpSlCK?NF'H$3sC+p?=pf9<?I.Q0b$ZuM(+OXCA<VJKgX6BT?79r
%*B8'81-<Op8b%LpgJ]*_G0P$rA"a@h(HRoMj/-i>[Gn2XB7CA?4b]Vl!ffFa%3VK;`HM*pYrK"ZidQ?0TlAIa^t_Zk0A@r9Z(9>+
%E]["Db&0i#aPE(-9H.D\VsL;%M7I@FUQF%:hUHD(p'PhH)3$6T`si6i8P=?EI;,8ri&;$eVuJF/.fh(n5hn%6!5@1X]l`7]0;'<=
%eOjO$]7=M=Hj%<a"PLu&\&FmF%>_CdL;F'hebCmUUn"Qb1?$?jHXYR%2RB^_0mC%,K7UTt1DeO0T+0tJ`=7%%I+??e=\+/%$*E`[
%":b:oCND@?n@Z6cl>IU8LUT=ArV_(J-N)\2c>],\A"<c>YcmO]Na$mmG3EqdedJtHcL5gK5M!qJ8\bmipT/R7?SKfi1G/52,":"o
%.fi]YP"%MlOJIp+rgGRnS/>9oX+c-UY8@VWn)cZbs#dR0_I8-+=5LS)Q8Nl=R(9Kbnk/DCb:CV[m["Yg>AQ4-iEid\?2bakS?j95
%TL[=lJi7Pr`&YGbTFM+EG>7^V8cd&AP9ZoS4^C,]G.2Sb0rO'ZX.(3kG?^4'Zhf"Ys"TriEc'$g4:#:qC^5!P=7?^-EuF$!A;Lc-
%=dhik'l.bgD,o(73/9]N\V8]@DXkE)Jb!l:gceg;"eX"dYcHr2qadW@Y,Qu!?CYA:O*8PQ6X5$AjD5+:-Qbn/\/rEZe4Xq7pN:fW
%<$NY-(c`'0kA?FQfJ[)UDG`G<@72/3DOW<$`t:o=[V[4`.C4JNa*S98=UQd.KY,jc#6>pi![tshbe5;@?MunEa%l.%bWI?tV)T0Z
%;B.T"o1/l8X^`WH!5$ReYqDicVmj`feO),*A6,QpoP"C"*8Nbb:QU.sq&UKs1]T[#0%+Wppem-t5\eE]D\9DDgSboHj0]P>+oWK<
%0Oc[PR7QkQBjFg.G0GRHVqI&:0/i9?<lS/oKpQcp?H-K3Y:F\G6Ps,`r+)*5A3a8^?&BLT+>WE+";7+4]mU/>/o1CuRt&&i53Re2
%PY/deeZQDIF`J'5]!p<'K.OWnZg:`JliSl'O7&njZR!&8?BN$jAk/"UY0BFel.>0HJf6G$_g-]16\n-!0"'ES$QQ]?\7`hRMricS
%F)RT"'BqLZf:5WIp/mu_^JgV)Yp&?l!$_Z%dW5V1C<ep7(**E72.pG>Bi'.!Mr6VOpIck7(Mk<_Zo5_#pfA_>BQakN^VJst*8n;=
%J9lC!Js#cYNVc6fM=dghc2mp?mb+1UAL^Yik6S=K6-mgWhM:EgL"7qd96Q0Q*.Z?IT8M\Li082]aZ7MagTuVk3<u4D02ZTs?u`nd
%2GY9"1eQg$!G37s4<qL39P2D,1q8r;,.0n(F$r@=;rQdWLsu1<ZIprS[tL1JW;/>?+=T;Upok44r-7n]0YNPfr>#"QrEGDS"+4^h
%S0mF3ViTF_%Y?Pu#G@ttF)hc[nH?#:3<8)!j2j:iEcTH[CN>FDCU^.&S>1a#EA$kD*6]U):-:O,por&B-9HgCh6G&G_%OEd!C+G'
%g^)"(-6nYB_a;AR3?lnCS7;>AGiaqJjqNntEsh?G3MJW;A3\.0PphL@).c!`W5B$bD8A];bKS%ddGu9%9P9F2.Ei-0Zq'Ik%[FsR
%4,Y&i`]H_ejoCH)Mu<)qF7Y5Sou,[kA\+e(iQ?@UgCnIiB''*+T<,gh7C#D:)9U/(IUtjFB''*+4l+(5Er\[4(1lWeIe+`h#@?$Q
%=<?I`bT-H/j&"N!koW-]NhM:ing-A'purB7b0+j8+tlFl4X-B5:9'\EVuM'L%`%g,jrtLb3T-2"!M5T%MA75^X;p>9Hmu@A7,L*s
%_m=AOk?S0P.n>iN]aN!*Od3W?a-r7qd*5^(jT'*m*-Cd%"<*b=XB@Q9';d<2#8k#&T`u^GB@b2[[M<F,Z=N%s\h5?eP&`tJY=M@8
%U`A&$*riA)j=o0<5@[eOEb*'0Ym,Ab`.uY+#rRj."+5APMl5Wd=?i]P8e/YX)5EFd+h:So%m-%XB.g],j:'/"M(hP4jG4s"V[q]0
%pPQsqEG$mA3KV-jc2hS=Ls0)gDIhfn4.9dc=[l0&-mON;aN+rfCtltbLIRA=!tJTTEJX,_n'r^KeQP;"W(c[=GBlN8bdTfc&$$!s
%.eSl"A"%D2dX=QPYUAK3pO+M(Eb)MjX&o,Iebno+OnSPr3:l.g5"+Vn"V80UQQT8*b]Sp_^,Q9Q/A1b0((neNAAL#`So?\=&KKs?
%qGa%KLotblaZ8FEL*iC&+6#sS..n<-DY`hOqWG([--RWnZ:u7N!,4OCR5)c1-,qBdAW.M;bl>VLRuHN#iJsF4eDpe:D!4-*R;(>a
%iaYm=`Af\N.!\$!ll8fSZfoHUlbAro/7q!V_lG%J,kg=)\Cq]T@BcslnIdda\B-7L/d7_X.p>1O8X5tuVf!)r\8;<;ZM`:A:8?qY
%<>'=4M;DK^RTTYi'j4/-6UHpPJ)HT_"o"(T16A%tc)F/YeVl%U.V(86]3Y=*T;aa_TjSDuOsL6+7sZ0sT]_RC+TU9e\H9R-dHV(_
%'41@5bh0^5!QJ8l$gpp<T*p'Tg/rWF,,&^5jj6T]%pp)IK[scdg+Kbk:@5'-4])3(Nl\kq;L*dg45:fJ#Z"!,n5;_hWt`ZN.5@C-
%0+>C?#'d`h\[2EF8!nVEBHAL*BE:7%IWUQ)$2BJDV:gpA/@.M8\X+<#:]R`E\5:TuAHAc\\DZg`L[p"NIFQZC1nZ;62.@=5[C9n;
%1,X&Tk,<YeD)$0dA=DSh_"D42T&./3f0[oR/@1HT%M"AR8Zm"^#"\o0^jOT`c@D=b`-`ktl0fs)Ne__IOc(Bm:jJ"Y4GS1+,Ou>j
%:?$Eh*X,O;23fVQic/)?'\M#@o8&QcOgB23\=S+fI4O6Oop15&!K1n.md2OIYf"<]Kn_4X<M)Z)=EFoRnB>k*P0a9:iNQ!)?WlQ[
%jPh/nZIuKT^"f@G#6*JFcLINV/EsV`NJSk+UOD2c!cN6@Qh'g$T"UGEpNe]ikB0cAh@$Tnk^$co(LZ!fcj`[d96`2(N/-Agc_]SH
%g5=jcM59+,.AtQ=rY38.T_<AR,_]##g0^?B7b-*.DO+mK9U'h(TInSKJ;76QT#O0l`YF>lR\p1*N"ED<dfBBk'kKmuV_Jd>b&.\V
%kt6p&b:BYc)J)T<dO55pP").rP;LFp4A2G'J^Q@^a#m(knCH&Fb!Jpn`l+]>?7na:#35%lD7E4ci_Z*I2iU.QLc`IUb8&-A"1cu7
%HTntUm4-.J)MN3(dO6oJ,Rr]+h$PbC4RVIEm$a^NclIJUd?mhn3^&Lr3>u!;(BRC[!(NB;OeMlhpZ<?QR\Bh%KG8.UX(!>n$%%+j
%),hbrjn"_/_5)C'7[]I<BCPgJ4/;;fZSMqi4ZfDi!G,o.-)9gcDbJ4*),QRNC6$,;_oJ(K.U]Hj)1Z08V;)J[^rXb#G[?McY.5DM
%GPBbW>I^PpRfQhm8mp^l^h15ha0kG'\G1nA^?0#5Qtc+D>Rr4Y7WQM5S#/_*d5[VaW%SS5\[b.6Aj8&oQl1o,\_R;LGV;T*)lD%]
%U%m<9&%K6?Be06*>J%HUbjCG[ZJ@5VgDt\p[l^=dCj.^uh!Sju\Pj)i3)D;+n[W9d!^p,;D:heMq*>+7Q"t1=T:]3R"f+Baj2H%?
%gmO\)UZG&#lIt>fBVBLi73m'Pq%,9jp@f@8bDUH\Daa4R5E'8rOA8bu^L*ZPol"p?+,p&5"+3al-o_QgEFZ"Ub6/(W:((d^rGfk'
%e)1?7>VaKUcb"*NPME,=2PQa.q=2$?N9J19dGqBkJ/X>:e8]g'Oo\uI]>%rC0RfI`#^]%l9CKCHb;fE/N>jt$AZUEahV&=UUN*V!
%E?58T,&HL@-W3jYbId=^G`iWUL7Ae]/5f/Za</YWjHOr*-d+0[rj1k,(tk+)ojRJdD921YU?JRl8^P'agLXZeSiR\L9RG9('2Jt&
%)F8Vq#f]5LjE"a89u90MH%1\r-BcWQ9QW#N*pR6%:AcOZ1!hfOrqL@&_ots_B9s8<fW$.salsh^Fda2!X:^+%ahQ03OkoPif`fCm
%qi'=-</DR55\DOJ(7O^D]Cm"'TbDY1d&9N."]HcumPN:p+Xp(eM\QmF1<<B%Bk9K4<dYMTs"6H>XW2K&Jc'<Y]0lf=d#5$%BG\Ju
%J<CqGT[\DgYn<"Api04.dO?#9rtf->)g6Q$"2h#_oTV)DE4HNF<R-;%X,&CWEoAW5TVM3INbk=07r@1P+6R.,1k)S'Z1[E?;>2GH
%Mqo2A`DV2mcBl>`Rt<^DC"QrUd83l!kfosJM<10>'BnNI9lR2rC*DfjCC'+,iM3eqGQC8DO:+4eo9g\l#k0(N[Au?jRW,Bd[t.t4
%)6[g:K!p0fm/(Y0Iro5s=HYTeWP$O<e^_CAUW3LiChD)?ccu2g3#u-9RF;N[+r?Y?Xr#"VcUf3E1YHnVEU;d,aB+6k'o<Y"!Bct-
%&:,M20I"t)Rbn0rIh90!&tWCm/CuukWuZ>67FOtG^C-P]B/GNb8NXU$nJa4N"f-Za_*-^[L@rj/Ka)9Z9_:ft@\-[Y2eF[]-Y24=
%1ehT5*o:4kfAWB/be.VE2f@d>4hS`ibJHRDTGQTq=.J(Da7"SoDhC5i[YTM_99>@mQ1;/I(c&sS>[/QgOCFA31WD/k0+!p`DgV2r
%k%2?e.N6%TP+aOd8$-9@).Z<H4N)tD%J_1L=;HbG'O7)-8iZ@6W^AP#F=13a8s\d>2:@hMPkX=GA68@uS&"!so'b'9)M<HKJE!>d
%GTD-sFR*'Oc(IAuR5t#qVAA)13PsLrG"F'kkt*k^r"aNf=WbJU(%ji>;\rgI,rOUdSX]b"f"7_p>Y'RWp"_kG'uIXmE#I52$Ps_[
%%ricFHPZ5&U:W/OJQj92c_>831H-4'o1Es\AmVoZZbd(i4e@S^TSCh/)muNjhr_J*7X^QrN_^5naRWPFUDKn(dJMU0f(,r*_M.^m
%3S)J2*$V,9cC(/1n%'-E\p_,*=l>n[bTKPG`D(H!fFTg8JL-Hc:@ZT.Oe='DW`CCo8;35?UhdLV<AE`'Rp$d^9^;Uk)ub5q`ERb%
%q?d$>*UF&u`=,Y:OaERpX5@p\B-W219$7Km>!sA,f?+qaE!t@2R5COj<`8@[1PAuoSoKOmhcD.a'k;aTTf4obGN1`Z][o''`/4^i
%3&`0&1Uf%^TPShC)m]:jR.I%H1mq0aguK;hccOqsaE&BEVGCun*WiH]H4hJ1`U+Lt=-qudV$g.mF]=$?OA*9MJ7-jR2`D%[HEQWM
%$@m5@P$Ai;'\dqFR07_Wk.Y4[fAi.3_:g\OA(_DAC!h=G(77B'#0'#LGhA*3VLc^K#Ys'LWMPgm+,WZ%do([O]r>_Q(.BfhiDPAN
%Kh9l\%7>,!ptsd#(e;<J&_?.LUH1-Rej*MKoS-'Z#L]@Ud-MpmNDHe(/12bch1O2!U=[l#4[]=r74geBD`!r(_.62'E;.&SD.-])
%50#RC$BhV)*a99g)k.\n^cNSN*8;]4/N;*g6eQR<A[t/UDf[G,FX[,N/Qt1A[(PWuYiT9E!u\i?gjG1^pr,[^g1P#]1C5^`GXq\)
%pGI'1rKNZdP/6V.>Y$L*Fs('MitsiVV$gqKQ/qU`IOmmbQb[(\E1IS&K=dG+Ptcp?G?G1FD/na)#Ul8u;&c6&o1C/R-5;F^NhuF\
%Dc=tq+c9%WU8@k;lDCG.0ah@eNq#NDeIl=Xk3Z<T"U$rk9W?W7$SlXmZu?VC)5os9C<&/]&XeVl:B`Pm6o`6\$gnUGrENT8\X#o(
%@bV2PYV$U2`,1LNbEQ49"B[XHpqs@bi83M-r-7nE_=D#92Mih=XK8ZtJf!=Sq:#\Gi'-0@`*[`O`o7//GFV0_q)9MREJLC,I=RZL
%gi79T\/4['E$&KC+F.pU"!b=jiCQBF)kt2+YZrp!+bVtc&6Iur"o#dRr-%20k,FpUmCK#-oD$k.Z\/AkPLT.\)c*Jm!Tr\O;.R?-
%8(5"bW]%Za*ZXV3$R%sYl^h7k9LZt:Y9$-25/Pfm=:/f.n]R#mRGo]+i).&P<Q5A82Zo7L)'SiN7$TLrW6RDTh(s9k<Q7Am9[Ki!
%J]He`?=k`ep1D<NAdg@S-W$3cR!-^;[%M!M_F\CDQPfl68YS7Ui4[*j[E]U32/po_-@kV+$e6,)Oj@k#TfIAu`t@%W<1$asU0M:=
%H"p-VS!Foo][uk3=HQ-(1BnoGD#P9:Zs2EtJ3@\/UWaQ74hdV$`bSoFk]rRN^j`-Sk@MZKn+6spbSX_M7c\.#%!%d+L20OD^gUe[
%;.cn_>n0>l0kTD5b!_Z&nA/>JH^V-XdSh0bc</[Hl7k,8(b<?p7\\1qV2X`!7Ap`<2GG?BQglik!`GG+_7e&pZmVmqV9E&+jN'[1
%q^-HA;G8Yu"up3o&SRT;=Jg=d-MJ`Y^W4e'OqA3r$n_/#@IT>LU5:p@i3`CWO($A/gV;;W"'dE!;MmeNXR5]AlNE8AidC=iSPs("
%Vl?@VA)R<G0(E+Y$o#,)0/R!VA@ia01^6^u0_C_!Lj.LIcrbbY00rI3Z/F194=Z?P;^8mEb8S[OO0D'P1%9E8a@hM(;Cd(dCY^@'
%H>bT3NIc-c]=QM=Y5Fe*)[g#drrWuTM_^o%.W"ti1r%"\7>m-o'tr%^MN)1mn+a0Mn,p>0/6Igi!F?9od.0i[fiXWLfGO0:O*DI+
%MN*2_lY*@.;dR>$f)hc#(]ka)FB35e/Fr2,gfW)j?89fIA(_c4r)i9E$V1HA)m0prZMT!^YZDgf\%F2W.ZQf!4FuK,`rIcB-,V6n
%!QrBfJl-Lr2M@H$aYC#%FtYi[)i'>"PoP]Zopi0H7#r6IGf_]$c>.[8jB2(+>"*,H0gL4Ga\.X%7O?*68'/%"UqNUdS+K*`gZ@1%
%e/XDGpO+]Jc<Lq]D3n`%8gflDbC"[7<_JHQp*5o"99)H\T-nNN^#U#T4AFraa0K^Be]%IOGQ.Ea]T[M/]=D-Lc1oKLODO<[&@d8A
%#8<ck((#5!DCIj@:B/B@(._A/>4;o5'f,iPhR$dU2tPc.E#e=a=\<gfD`u4-O.h(/+ZUkX4i?cPbTE=CcN85Pb9l2sQ!,8#"S9W!
%+Um\DiBit!58A[amYT'dV8n[JesKV&E*A?t9tpak)8cR`Ao75A9&gTdV%XNX8%T`+!4TH5!\SdGTTp#CaA!6gO2:/'MUr<(#Iqp\
%\:B_"$.FE/ojQF8$-!D],/Q/kC&'',6VKbg0/n='Z-01LR();'-+biaKS-j$7gcHY5<EbGp'"NsS<:3IiX:[Sj@6)jqE4[FW%,f^
%I@@2DmJ=imfKr2/GPU\SF,mlVfc0%($Y\?C!K+?4TXCX"G[<[_pBhnAmBR=M8qB,2W!fKiTE.ZbXH-b[1a+XFhN37<j[ch8*@.=O
%*03!9qlPp:j=+&6'GAdVm[?.m&Fi7r`\K?7I#?`j2P@&+N(G;@n/A.iN6GRLk.>i:F)[I,a$6@MQgQ)ap6mY<'re'TqA[C!7^#/(
%-]IJG0TLZaMCg#6/SH=XrCe$G.ob4DYlZ>W2@2?"fQ>;X5unEbqR:pf&po<qrPrljX:j9Be'Eq@2eoXMcY77b!Y`_Jdh@?.\'6]e
%Ggtm;%RGYD(3et/0d7DuL0JtZW4KpDjN#Hf)"d`(bb"A?VCa;O"Wf"/C>HLPL[unEiYgT\MH*jLHgLV/$pCiIYY,,l)8E?0<f\@(
%4oJD`S*%Jn]1@JC#`4)#&eD()?k1U`Rk$`cLGS,c^8i!@%nW2uo4%i8=nqPZGkV8CB?f2cd0XJ\*^_LYfEde&V6cI6SYurZf-].B
%8tblTWH1SiA_7:e#Zphfqt@YV/A$8*)a:n87#^a/O7B]h?@1U.e0PhBSnN>b9C5:qZmWMR-1'4mjMe;a`79%#kHUQUgm&52Y#<.'
%.1mJY&q)/J,pK?K8i_IlPA$\dYfW01h9,n5ouC@urA<ff(Pt<]=FU-=`%Iq&B18IKi4&YJ/PGO+'fXG#[qGr.Ye"("$!Q)R/d]@l
%`;J;AC;l%?$Iu`#7i76[K(^H-IJF&-H[WIO$\=IVo3k\sS:&:RXpA[V@Q;qh4r0&FKU%7f=bI@5FAlA!2at+)j_]\Ha5%sdZ>o**
%pk%nGK.NNY0t$=l&$j*S`mFMVc\Bo5$g^drW;XbG`dmDj\'4U^%);@o)$@2QR%2)@SN6+ZTCF4o4SSgEj/"[V1hqq3W`%3V5)Q:U
%XJ%g.!`PL(AnB\8OXL-/#TaZ!;Tb1/Olkn_n2#!-VZkq\9iH_W\O"@/[/q-:=_E\$/\lD9(XRSgl*"6!Jb*(g;)P2JoKN->eB`jc
%'3&u#6F>h>gEs/aeb2_H]ANKd6X[BjeR\%?AMZX(dCm%4>h?`F>8)kcIkM*:l6_Po.@R%=pjU<qleUH@PqZfoDu2<(G&N<D;!ZX>
%G\\Qa7S);U0&pAYCFrIUGQf1ta@?M^Dp?;#1J;j72UI$T_H!'p9?Vl.3%;HK,'S;/kKZU#WO/4_r^W@^^suVZEWqXkN!D.afO-ei
%5YK&f`cCXo@c<^aFR])Q4][/TiJj=$NW0o70AWtS55pEp)hQ,2E&XhK>FO"UaA'nNnl2n`"cL'RnZo*,11R-Y$a99-i:bF7LFX`i
%GsCe8-HdnHlElE5AC/WH?'A-%[E_R&\&0<'V=DjM+0dJkbF`(DAE%$TkM@$cn2r5=/!^SkS9J"g@h5;p`F_PlQ&Uc8&Xsn;2`6eD
%;q)a^@BAalrYYY,c%!Eqh4^4"JL7l[3;fK^TYu)/1d$\8Vu)/&S."_Wc;[.ZZ@MM3S:]2D=9lA7=q]T4O?F$;DoXS3O$3'*A-LTL
%%l"]W0FXg]7R^DY,u9I4$.@D^+%.H%,tiR:KO#/:W9W$&E1p'[HS37AldBRH_V<6dLWVqCW!d^En/D;4j/eCY=/g"ILH"a?LgTe8
%fJW0]89[<6UE+[H>u^$G^2Z9=OCE,GrnV,1EL/\4G!9jGm1jPi)DhFuX]f#]$hkOaDL5M*\3?=<E]089;]h!\oo^_rMMBo7\Brq5
%/T@N)#hDq5jK>Y9<TXXk)$)kb$Ym>28W`eg&Gr7>iOhO#,UXoZh!S=Ud&\80+60-&XG-+4bfsFQ[@_Y#=ud)UI9TQdklQ;/G+96E
%R_)&t'@K7pm'0n7S*P+`3H@!7-GFQ<`MJ*NaXR5Q;H=7A9+PHT94ph+U5ES3;VZ7ZFl`Wr`Fg0^UpMQbCpNdbrgA:[aU?ILD#R$S
%I(V(u9kF02ob$aM>ID*5?eDpXGo%?c7r=?,>TO<a)1JjQ/bX9GI7>5)PJ\Dh\ZHMp&`p_;B;7$-$Qbo("J09B-GXdaT-P^fVn)`5
%nQYkPaBS.iAl$#t)>a:-$U/j(Jd_JD\qDE/G2lu6*sicRU03rB#"j0LO$FKB1]a:Y&%e*9)F-9(c"Gu<2nR]p;j2E=Y/1@i\`o0s
%-c[>>9f\NP`?RMq!ONEjp.lJ@=u@^`]OXRV$QY>3:Flh_l2Z&?2^6fOj&_lF^6M3:fCZ`$:D2Y)%ArmI[jC@a?;%`HqIDt+90jP%
%05Ga^G'dD5?O*Q`1Du$<6d))`b`OJ1K.IBF2o4H]6c=e8,*,-2$89XT`LPRWFFna,qNK\\:!9B3C74BW3h.]ogAYe(b3mLRNi0g&
%pA[!i3JXShi;uX'+pIA8L6c@c`[l,XEZ1S,g`f;0E1(9VH<@HP-'$%85a4suq.*2aYl`2uj;]'In$;T?3$$5L<#m's1@sRY'e:Qf
%8eKGDPT*/.6honP)@q2Ih,C$+aK.!@(p^fE@%UWOCpLn^\,tt'[<%YIYdrN,>hjeOh'0$*HF^JrL$JQ@an^,(s!nJ9D+i\92BE)%
%Z$f#\hs-7U9t%7C2XR+15stP21!$0bI+e%sD.^:Z^#fP9?N85%G`lK[)sb!mc5rGQpot5tm^K`=LVH.$X%Qh4Kn?qld'+s-6phR,
%,a`+$B1>dj>c9-7/0k*"hNFVp3`N6*73`PmjX"L<Zj_Gu>hWM/<C(CXWjdbP_m/%O!c6SSOH((3*uM1O&:#s>DT?UEa/I&GMWJiI
%E'A.qHs=atJGRL$CjIST6J.1eG.?,Z&ftoE>[hD%h^pf^X=99J<*;D#s)Ie2Wd2so`BkX\FMBITC3qY)k!^DHZ3c81bhH7+]Z"T9
%d3IK/p,8cY94q>-lUEod_9?HPYVs>5a5cYWAhB[sOn"do$YV'TInt;#0V2!"q"lU79PfM*cRK*_3+1\5In9BY20ttCD8jJ;.`/^&
%cY*(!Gl>1\-'A:frO%aE[#8=_C\oulZ14VtW<n6a-86DPK9)S^QC;UrAaB/R6e(Xsa!S/KiO)+6Lc\$A7T>B!+&?`k:kt$)W6k#`
%NYWZk_*+/\;^7BgJ`%aF.h`XI4LMFB.0C([%[es)LNgkB]("^BDp?E)bdG_!,U$1k7eP4m>f[,!]*M<_R6jF88b$&UUlfE]7E0O/
%\=3[GFu?e!^Q_=I\_F;1e*+?)dN"Yf8c+E=/Rk8![_>TV_GI6t_Q3ck7c]gu'TlH@W^L0GreS271fL!&-RJ2<]]8D"5DDhM;],_;
%G?=2NHEACa0<l8R[>Lbb`R\Pr4M[4DKOh0#TS/85KG?S(j?Ao-4ccV)JH!2+8I0X[5NJ5$!/fIF!N>nl^je8te*n'$[%-LkDS7V'
%(U1NASsfuibkI?#S+cid^SgPB0hfF6rFB:G-%eq<O"iu\9f^P;>/#)%Th4V!s#u6-\G;Qm=/TVTk*60'e&2U>=sgHgr7253T1q.d
%g_\?-ZIJ@n<B!K%?iZPNf9$X'(t6c)$=O%'Qr""Mlh#OC[,U5Vo<=P#<b[p>K@shbDo(bhdR(&HZh=2;Ao>)28>uGu#q%4<G>!`[
%bKU[FG`04<67FD:/Ko-i2bR8G["Jal,pY;u+akai+V@^*@F-*^OJYT=/9t,EiOjZ2I2"Wua)Gam?O+\`]"ET_&"CVPJXVWY/"eDk
%M&XJpVV2d7$W7%B?9q;uq@cGRH3H/B7geVjWe,L:5^6U$dAV<o73n*J.&&Z(TP.q_#=WGWG>Of[(jAfph7SB7V'pOaW0hV1jZ=m1
%q$sFa-B_Y]k#]st\h"qDIW>4o.g:fCHLX87C0HI70e%JT`Dbk[.-(tUZRWP=Ot>\H7I1NL"X?:XG>JqdnVoqSTTDP+64c(P=KSLu
%X]""@bt!\J'\=;&C"8Z0faSXH<TFL)2c)>GhEVYZjT^V+bo<UK<o-%Q#KluYYq,:8Lp=MhZgRGY:TIO)s"CEUm[rY<*g)h7<pI1Q
%d95=$Msd3DYYfFdgcr%^`r4@kEH'8$VhmT`Z'XPMdtDl1E>9Jf:Ilfr6>c>nks:O13,RaTdrTJM`U9>ucHnNaYnsbP'']YM;[s9Q
%cC`KLY-Ma(kF_dUW>`8[p2!@4NuE7sa\u>)6k/WJncDrdCW?2F'6D"S5;L),pNea7jQnhumf4Ds(E[\nP3"=tLp(84]ZY>"]#q.s
%-iukic-Vp<h_IO2Hja1O9+ANRe0D#S?tlT-T2p+R:,cY<fF0I$f$,iLGTQt/^?d(h!]t@L[dJhKm\+WGq-)Ei?L]HN><=&S]>*[$
%g<)tLma+U8!UZinR2M%55(Yqq$@H)ND`jYp!QoKK@VX@,@'M!Y[Pkt=FP0"^:/@B:L8]p8(/CdJV1F[`Q;-6>!k:@nhP6K-+u>Z:
%\0\B-DdW+;/SX5*0&SmZIk'>ZDp9?"'lrsR?+a-Z#.aMA_5n<90P3IDr;AYYQeSqb]Y(k\aGlS/!qnJ#)_NI+L5k2GbDpm@=-$as
%(FNU.CUnM[[0aW22&FPlfQuMN-g<S77.k[^Rl_hMfC<tIBGrk6noa6t%;GN)5IBU.lGN8k'RfA&0R-m.M?H0C4>uj0Na+`LaV#&n
%,+Z>!1+SmbHg-T"(,*Gl["li^H1bs$7%qBtl[(">lCfH(/2OimhP'Q8*P%D`,ps],/3*J\C::`E![R/"f's_Wf-&=1>aFe6&hc[0
%<'3iERahiRGYqXk%iR&R17&*W'M8FcoJ5a'n:ITkcdFSISf#N!BdpFY%TpK_`>GNc<q'4?q\)IU);r('W^th`kgsW<%aS_-UO^h^
%KMFa>$GGhM2b+l7JC`dQ^e;4rSn2o@FPGP9J@u(U#$0irphNc$UWbm\?L+#g0d0k^QO2DE[]l+CSn1oe1h5)"oe0J->R9$R<)<J5
%fG(N$L<6So`(PDCRRj/agDA9/r"9fqQ,iLqU(b]Xh=]4b2WO)!6hjik^%tK?`Db5p!]"%QT:3b(IS=,Bq`<:4XpbeY\2XTu52BLK
%F^4!3IdB)5j>mV2Bl!4MkhUWE\bmpR"&f3Ol41tM]lV$/'HVS)/:7h@L*C#),bA1<(=mUtR[QlUo;4V_;HgC)66+feBR0^C.Y0)h
%_hGo.g5F]piRQj?fJULa7gOL@UoO^nQ'[?*CRWi[fVTW\V,-[OVMJH=mMh_jU_)q(Q[<5GUNqPa5C&+5Y3t9kof9`\ThEK@l+lm#
%50!$`kY#9oJ$8-OIW[m@e`H[l>:#_cg:rAH-`M3<#Em20en:MQqEp/mD*D9A$J\A>2.O1P3Yr.7r>M1J'"+S=!dl'.@fI;5GKnCU
%636eT-?0E,D(!J;bCHf<>J1K].r1Q#f[K_>"V")YnFg(_g(a=GWSL`p.\P[.>I>oaHUO]B<1=AAIZ2=1YWpp,/uo$!oGIIFjMcIF
%7+%'&:Pm5"jNnAj$ilQ^%_7gbZpQE("Xs8@Jm*%!d+Y?f"EFWlNmKSb.iiZ?%o\iTEi+jXNoT;f+-hH,+eHg;XE.r=#j:G'Rt"+n
%XegkL>b/Gfnc;\!5;b`l7B(W/5JBP!.IbCL)lTo]^^f2OjIkEob8R>9o\9.F%!<\JlDaXTf5OlM]%E&j<S3h<#o5d?dUHI>',4>`
%+rOB*&]!VebT&$].<"dqa`!Z6>6Xdo8#Sc+m[1"8EniD=$%5^o?9pcm^PkQBi+Mc'cj,m<7N,+'mSLgmU$(H'rrnWFE<b:*Dp#t[
%@8d",efgnT9TZX?!9U<c3AO#Ws&234OoK:RPnGcVg(f2k=]/aYi-<Q*Np2D13dr+^s#'6[i//Y_[Tir[AT<Cu$@cjpBaABNBl^T$
%6OQuHm8"h_8JV]t,HMm$J)#:2A7H5`mm]?OD7KXZ'nq=g!=c@)H>!C?P*qA"?3`NpY5A-->'.C1nB%bni.0jZ*[-gj:"B;:F/:'2
%rJB<c,$=f#bbjr@$#nS%GQUl0H,e>\D&6>BHEH>B2+GF?eC.#1^sl#F1!#*g*?S['L2E5UrA8Vd*L&dfX<4H@Ae8i]41sM7WQK0A
%Su"[Fik)QRGSi-DK\V,>'cuk*V>Y4V1P/mW8an"5+mD0VJfVGMHT`]ld3^+HV4gMN"M#S!Cqu*]9EN,.@/P>aC)SJ0M74X/mRt\s
%,e:(R::^1PD*6,L2m5YA?,fPr$>d(n$if,3`JHKR]p1JNCUh&TT#1Z+HSp(S'CE&*llC*'!.7Eu"(VqBW!DpN`P!2M9lI3BjB3o-
%R9&oZk-;E,8;%_2r6_eRJ\:+,:W'LS107RhVfX?C\rcuO*\]_CqTSJtd]ddc2?W0UcC$DcpNd6>[Z%oENj,D<"'+".[+rZ<KQ5%k
%HY@i0n!m?n+=WRJl+9>nH8*YE]O*73XiCoLG0Pc^pLDDY$i3$p&CVQG7WV1q]K[=0r;MI^mr(e3kL<&'0#A,DgrB%.`#1m@ATJM=
%g)\SW"aG-[nq2jN=*,[L1asFg="b%9o0(>qCQ1<`!1+b`^@)>E%K/apZ;iLhA3&B=&E7;_-1!jfZ!7('QhEfk&sTcDhmF&Z07O?M
%JI,4dI@:`jV]/s"*G=00N&@.]=LZB>HQ$?K!'_CZ!5.`\7Mp`dZ`T91g\ZTf^7uk$CaR!uX618V1UFBogS99h[.I7?%H-&`1I8I%
%YM<m?<D)\5IZ3_sk*[TW^jA\CN8qG"@`u;nLpjILd3[rkJFBqR=>^'1#\QeZ/sg'pF1;SOXpK8j_'$5-Np5IWnN`iQ/MGjEIuJq"
%gY;7"W?32Ek9&aQHAZLm05UlDJ$]pn=P=,I]B%#a[XtifcaJE*93]5./2o&qIA:98[N:M-+n8d?8sH-$9G:m(JL?!;<)[Lf0:W"t
%E?RV0OsbeDHh3_lOHWc,V.apI4Ni3&TqGTqE+7G?@uod(bF@sumo6Km_eTVMjSTaP"<Kc9a\1qE>-$m,1%JBBLurMo5SS26`f-rn
%CBHWfWn&%nhrI?5!Q0edG&L;E.R)L(D:i!G]eoPXcu<-O:7m4RN!#r%D`fl`!RA=JiR5-`!Kq))olYfG/qSLdH>"`]QKQZc\j<&j
%87I!=*A63WEdR_Y;a6N/0bLe8HT*qpr7to,EL/8(gbWmqZGf7>$J4c/rh4aQ?+??$i!aBA!H>V.^W-T38`eft*ZG\7Ej"*uWk*r0
%,k7b^ejn[L8>8D[f>!SZ&&"-9&g3b$!rYeG6s4E]G\18H=kFjDjBB*u/TRp(=t@h9G'M*oc)g"2rn^]$nXk<4kdSigo0)!PP:4&N
%`@64'="t@A3R>`+_5o3us6[-""o+W;+(fBeW?)%DgPVi8-/>US6Xair6XahgW+'UX#%;@_WbEo=0?)Z)=M$a9\B8ma@lN*>c4\CK
%#fI@%R+4%&L`BqLT:&n'n?Z*<b\^_?d#cN>Mbc!9$Zh58%I[gFjqd&"1B]Y]m5X*HBl:tR'c1:r).];<\=$PB2U!c#:s:L'SE?-7
%QKFM.^ugr-QKFLCS*$$&U6o.g[kP:u^n_Mj%E71QdAgYo;'4oR`V,V<@sa,pk@)U$D8.m#O/;15,'C?'0.u(kMnR(SE&0C,ZaZL<
%6ajJ^[X6b;Dt2Hj/[sHg$DqVn*qknTFaHb,'RNLFVS/goV7e05'RNJ8$[YOj9mb'0cM!Q)Y1VJ^/,IfQij#u=/s(-Z&]I<*P1RPp
%^!k1Wb'rb<<i<JKQ\S2^g5\:KKXIpa>$Jl"g+jAn2STpFQ:NLFQKSih9+t#]R7o'<p-(Zh.s0UW3Sp39"2)o%U-4=/!ph-51X5dN
%"/]p'CHMURfqhKj=p9h^F;VFfO"t7a!9j#Q+1C](%oU*TUJ,FVdl<$`#6$M0g@:dEQ[0+M+*d<)Wc\^)Y>@dWa:Idc+lioi8uFaS
%3iAMgMa&TP@g04=Z\;-kV"0NTfCpH2Y[60`BZU#[VRC3[YYNBb4.$1Nh,-.$eK"gk.LodIMWaP!FU'RA<-OF#89'DJ^qg't`>qI6
%5H4$HR7N9/4";fS*-Fp_]p.t]4n.f).E:La<@H<I0ai6Tq_W0edJiRKmOuTKmNn(L^4LHah>#ehK2HI_md&KYNSf/(PXCF;`R=Mn
%m`(<]0Rihg0RcDf0n)N?(dFH;)6R@>21F2oY2Y]r?"c*CD;H`LU980LX`#1S4P5c31$Ufs]J^Je$a&`^kZL.0dR`[b!7Ga6ng>YM
%-G,La9KX>8?[e`9ld$T1pQcY_*$X(=,PaiI-d.:AR`"^>R*)Aii;(.mghWBA=*$'nUmaZ;20k&\%9&j'!!dXT7S9`?5<DWj*#id9
%3:p@R.^28Zc$p#nppc-j3sV]^@m6Z`l#SU#<6A)#8YmEB,>m/f3P_URpn&U57HN@u7.#u#EWCU&a4N<HV<\c;IqmRE>q@B%d"%rc
%C'723Qil!3ntS4&$l39P\/'/TW0.cBOa/-:ME,@'&E?8*2J$>qc7rqm!gds^bG(MZR7k.TWBBYCZuT`es0AA(c2hd-[V4#p_rn9B
%FhCpH[J!MC!O1Hal/:)371Cs`$!,A>?P$+3T,jBk%T!T9\93^n#?>hq=j&IHW1!fhU\DgbCH7nF*Y3fqod^a#9*CG54>bPSA]AC>
%m#aCnD0(r;82X;;*87t!hq+t<(Kf>m/GK`<1?*_,JF[0Ad@p$U8U>OoO@0EcE%:,'*#sK.R]/;,!3(`?gikEa''*aOP_6<h^%ID7
%lC*>M?q*kfP'6*E0t%mE%M!H(_a/?_!+($0%Y4*i+b;fYGO12/YF.81P(W?I+L;ps-/eju.hYXp!Hr#f"MN=dfH[(PEc;es,GXP@
%P=*..W%9'5EV3l'h["+X*;MMn4i9)HDZKKI"VLPh_!RE^beI:Y#Sd0Ks#h*_7eY)Aq6E]n(`,3C4IU[#OKK-WqZ\bI%@6W*?mGN>
%C%ff7mZt[X:VKt&nX^VU#`dmCdOVX25*ukCHir/..R`h:^j!]N,cYEu:m!.<JupO'5^GFUPAca\.R640#eWKs2#4#!SpXH@T]DRg
%=0?g)lM2X>mhQgZmm&+g\]%"Dk)03b6P]D@^nWWH-]BUe%c1Br/?,$4-qD_ifc+&oUc=!;hZ0EerlDeS*hCM;qaNhs&k(/d!0W<c
%F0sH?F&195Cda#MnH#D:MM;FTU>dXUIuTpF7J)5%aA07J%q_R"/$J`-R;!/`>48?e:He%qjPuluA+s9-c)?OCfQ6c??NactLm('5
%Uf&QneAZ\9kg_PWeI6@uS9>aI6M:J-,s-T-D*S`bW03]aiC=rX/SSO3VQ/m<[/0?'J!h\i/_*-T^rlM=+Ee=t5,lK+Rgl(X^K9&)
%S)9nS8>>Bi/UgmFf/BO!;Xc+i]22(nnF\5000]6?8JUZPp87%HgoYsl+NX2qe]OD$FP>k`TTlF/=el<4k0o)pObfsATJV:'I%"eB
%$1XjJ'Ts)hNurRq=&iOj].6FSro:8EeW6djTuT>6k8?&q;[,3KZZO>\`GNpk96/s-ejjV.om<;7Y._K+.Sgp`>\DqP4/=T7$gSe?
%`>_[>Ju5(^$FPjne#,VWkn1a#OXdN^7,LV9,Jo=odNh_^Bt>bh`1+']iVr?2+2?q"b3BQ^-^n&U*rD&Ll&g%d`>5bD,G)'DGAE>-
%*M;o34s4D[]_'b[j+V+\2\#,G0*I++[enPMaCXqQna+el.+r'FZ(%'8qXck@aXGa'`Eu-ug%[Um5BXAg^Yl[T/Y8BtI?T<R7:=,j
%E;d3G2Hft2iKW*p=:09c<g=h@Oc#@O,n3N(E#`fh`uhB9EP.!SGt58En"7M0NX$irn_\?7>?l/T%!\m6$g<$/P(n02NcfAL]Z-56
%L@0tNhgIq!V;)k?oQ9Cp[(=V>G=R]!ETFjd.eJ8gkMj2mi/IA)H<n`3h$@%`hiB<uqIMAp^mE#6D-RkJ]]?A#cAKOC\h%HJ`FUd1
%p@@(aZj_=`bY.)B`OrXT%k.c(2ZKXRHrmuW9]`kY=h;A;?odY,24r_B="6?PT*6`O&#$UEi6N8uO*Xk97`>a&6_B-7meNW+FB8l_
%+*Sg3L<[Z@j^Ll9\RHg#$2[/2):L3qq>5P:bf%Li0i';PMO=^4dHUpm)!2XRbZVLR'bXW`%K*mkS)Za5=O(h$`=%[s]ZgS%!a3%I
%nLQ2ogKZ[4i46&5j5'lHnMjH8$Z+a6*\4U)p)6`>Blp1+H(k;1gMj>No2/?Qfa[H?dQm9hrLWC`NhtHU.raEp74Nkq%0q'9*iT:*
%YJ,Q5+G?YGjJ^qqS13BNkY,l9:ZmR[Rrr<E[q'-3[BpOfgZG'`Gp,eU//PF6$[H(7k0<$k'H2+k?T2<`N\/;$N4hC"7QrA\3V-XC
%,Rc;R0RE3S]ok1`oDR.TL3mO1?YA%T[8fNOm@B;eQA%SKr/@(b>;\8$];&5c/MD`-$PbV:iF,*lLk[+66u^:$bq,]]fMGP!GaA1n
%geCM<V'p(Ml]sS*.nn+bBc6]?Vu/W!V?`\]e(V&1+,G\I4VIlB7UI<RJIVP=ZY+]$^MHS!)"!<j!IAZfm_TDq$IjF,#od87[]7Tc
%!=&"k'0'rLR1O5Q!R?o0D(r\T,VFaslgcg42`WNJ:e,US381;%e@a*gZ[l;c1WuM@4#8f6^%4j8;g;WWa<72LNE5YiFAQ=jfU7)>
%]BhaGUMU[(>+/\A$'Mi=c:Y9^^TDqK`?nb!AnJo)U8(`XCZ'q![W>sF.%T48'aA6V`KIpmPP]q`/q[^K.Cb3D%iYSi1pAeL_'urP
%ZP7H>6ICVM=DAAOQLl`[TdjV+)JO.C0Br>2?24$9o8n]koe\&i!t?gMB8]oddq(YsA%,JPU#R]PN*E?>Se^cnLYZ.YVQk=KmFLP+
%gDq[?$kqNsICZ)3DVSFSQ?HM^aKf##\[md'%si#F!G:tDTT*pT`PVWnh-/d3GWo=W"ka+3;dqIB\`:l,&D*Ou]Ei#V<k(<;P@*0M
%iO6.,%CFc6>g$``bAOGD*H>>Vf2g<Yo_H.%_8:JqK7].lICZojD@<":=*%1fS_[PqTm\>JRrNNBiY1-@CaOILon$/aDq@i"IS5ca
%G?=#%QQtRPBp%cM$Lc:'UUP5eKmnk]LTb@gM$Q@#fIjASan&2<`pM<Po%_*h-[&@AnOe58+tp,@HE&2BYOH`6\2M0LR``K"=>):5
%_Z&RCZ\.W8l9U>t(a1N8!'`J\]t@f.0!BL"^:ZeQeL.!AM<br8=V,K&/T^$K1i_?'%['UMg6MCaBHg$--ZmCj-B`-P:SEF%na&1e
%\fTPr`ddpIUL\h!Kt#q1%DKKfP(oSpJmD\WMhh)O`2<a*VCJ^r*#WbX>:KpKX=lC/R%?Ju:9sK>eZ%oJ\2<'qH'K_;aj)DD1.l_Q
%=\'$N)YsEYAn^Wa/T1UH:k_Y8o%*S(/s9mZhu`0gO2*Rg"IO:u;fJ,q%J[L\EX>i*"J@g@^`$N9.+lnD0Yd#D%7[GenqY3mX@_7G
%.0KkF5ZAo-%t/!-l*;b2^B+1RnPkVm/eJ6KMh=@JX5s/=Ks7Ih)l#10e,3c-q:^\l97YTe815G%T9)SBX%50gNS=K@a6iq"0:a,J
%6ldA#E:(nML:oIH\WC4\mQNn_HX#F3bj<nMj-:&Xr\ecMnXg7\--0Z.b3_4%-e\fC+s4=F_dsPh&$jP8BH<H?8o4-\NBgj8Zm5ZR
%M]^h)*SE`(;o;*2gtK$_@8G_(.LhhPm/mL)Q=+!2G&"R5AV5Oq4!"?/k>6BrB9UVuk8HBf<Z@^3.#Gq\R_,q"k89ZH;ZptHbAJrj
%lN^\Xoc]mQr_[5?;'$G'<XN`hl.^njXH+l19J"C%F2>ZLs0-WM0(\rNhDV4!_e43%)?.p#s-2m/1YcIkp@.;bCaf#H"m9b6$"J=L
%E3Y0%eqUC)WO.GX`C!kJRFR^kW\8E9HT:Yqf&;N]=Ydu_s8/ck6.R.4.rdE2X^*YG#_3/.b`1=<fM1reT^^mKN=]k]P`<PLFm;;A
%_6*N8i%Na\&Q]"0JHnGeTGq:Rb]s:C=f8,BP%tDd1rMeXK(<%dJL!HoLg`Y?Qj/^$VDi%HB,4CfCg_,T,3lcuXJ)Hr]/HbYYCl@h
%]!q-<MRm!ESbhdQFEj\=T8R9P&BO]5GYs9SRtj8$9+QSE.inc:,?tA?E(W-1LL#S"P`HnZO7K(1]bq=^n6/,3\d/<'oM\uti79e@
%>m,]/gal`a%1F%]_pq1(_jZK[80A_Bd-E;NR@1YmKamAmXRUlACcK$.ms2m!$\%$mGe/e5E4X!!MZD+-;\g/M3.4Y0"H[KH)Q&Fs
%J`.degg,RgXLealL3+"7^$[)/RCS5PfYB*@Z]/5n`lStRAZ9pW@CQTUg>O6[BX!E1@MCEr$XC1I"XFmm_qV,q)(n7LJ6[aoY.FsN
%@W&7S(YC-bZ$;a8]Zu-]0:K#cCC8,Qg_,BLm.$0tN[E(N*n)>\1*_8ilBp9<=CL_M?L[YjQ0]sr\F'_Gj7;"rHF2oB=H#a!kkb(S
%J7;I\`.)tA0g*?'Ab;%1rc,87?&n@/m3#SRCs\mS'E-5`5P-*4)H2O)<=tAo1s5EKI3u<s4\:thFlQ8cJ#Cd&AerT-(iO4Rgcr'Q
%4CniY&9lr=*?Qk=EXSurAU.FsK>rOA/&FX2i#`Vmea7GRj"nWHK;K<a#p.t`nf=X7H#m$>VX0?sJ+5iV\\)_Y:qFNu<&$\lHB:pP
%#2\^ECL2H6]1rP,lO?#Y::H%pmji3q(OcHkQZ!CHUQD:TJK"VeBB:@O\Y-$`armo=[Kd*`mGN'\Rj&TV*K'*MXrNgs#+bjQGl9?D
%BW<*2Ie[i"+*G/o5;-ph+Q,ThZuI!H%\u*i=]lo_eJFBD4T71-Jr$K/O5RqCn)[s-Y@+-=2YW)``DhPN[m,uJi`;j,$RBS]+C*Js
%=I8RqRj8pIa6_3pA%V^7"mln?=^UFR+B!\WK])R(H>&/KGU'OSF]Y3:O]&?V9'0'Y;C:#:R,)70=TIR$AcV8>F?2Mim?Hg(_0X6*
%ej<bp:YH^=p=hhf9SB$Uf5fAl78ZF?'M/5FPublGQ2Hp1s2r!/^F$cj5g=,X;+V`H4a-GXXjeVs[EjPW@DABO9BiL3?!*]\UZKJB
%6sVG%RLF;=A79QYEKk8HBR59uq2_03-,A`Aa_E8U991>3EuVQ'h`Ckj(#TA0jG,t\HqE7'eEjHbXbUK!4=O;rC]gi(p7/YNrHe+V
%ds[s.I_D*PNurHqh@&)8\NdA_hNo1IBDCX2IDM%3gBM,?`+=YI1r\Iq4]_O4cmg$-74e<Aqg)s7L&"[<E/[nD4+n,+!BV[2IC$FY
%,1"n#g>d(*ChIL#c3QB<IoZY%XQ;g"`U'U5aaf6E/t[%,TA:**^TZV]E9+tO3a\.6.k[Ku?akeN"WYSEQ:HVeO,\,7/%.AmpHpO6
%DM2n,$TQ%pWOP*m`l#gdM.tnS()%Ym1S.biiKt.'%W#EX&g@1nn2A:0%`IB0D?$+g;fI^,g047:-^r*ac4"REPUi.!WOO[HLCL[J
%%D5/(E%ED5/XE"(5R5,DntWqmq^70,i@],*$T2q+#4Mc&hUNKf!8'(?ic,4='ZRKNN0Nd"fL=g1"f/X1j)n45DuL"0j*]eTd<>$T
%a2i&i-HA"ZPk"FY"s3lo</a,8bhP&n$"<EF+8j,!U*";p\3%Qco\nQ.#:kqGp]'C_h0S`pVbSB+RrFDZCq.K1pi@&1@F@-\_t3@W
%%o8Ql1V$HW3taU>P2is,<q-tg,O@'I^L>^n=Z!RtbAif:+R.c5TGH@>)X;[7P0.gU_TLh@#IsD.A:CLq[n(LYg\#7WlQ(ocq1:8L
%$'U+_+]$7dR0I3R`b(Y2+u1?&DEKX5A!I3gj?5&qbj9q>VTVVk*DK<gZj$m%auh,^K)Y+M;8n<eguWNjl?&<HpY6TUoG$lJjaE_Z
%3iGC'jA>:k^8]d-I[60(3Rj\t]*Xqd/nj44*q"O"K42Y<@;UH$G.u![O*$B\,b$$?EgUJgm=!99__mcECR>TWGYX=0>`J]*3#7*O
%.6I*T;[&)P'jMi>/#,j(Gq]P*&F+<B;8rDnLWL9b01Eed(N9HI.gT`ipEpN?\[7Wab4AY'/&sBhD_&uD*2#D.#>`5FV&Ec$9mj+R
%nJ>"t*S88J?9I;hl??Im@DRs[jL6S9)K/"fkeE*+B<q\0P7?Tn\/i3KWMrOJ,=ldoQ&)mX#&^DC')rnkO@<0c&K9gVf%K#pT&qin
%[!c(F6-Rdorp7ka2`bZ*re91;^P'bIh/NmiC5n!6[$>D]!V1'JmT92DNlA.TaSQt9AY6$5m;qp1gujL#ZHpo\@\9D%dhW\Bi>Xtr
%+*SeCWjM2lNqr*"B0**hrFm]m9^Cd.qlC,ApNqi8]?PTk2nh`hOd),"M`I$prOCPW+uQu;aW8R@_-`<TKE+pPoN[)//[R;X`J",b
%EA[nE-JVta4IZ;`3TOjiWh!cN-B-Bo4NqG3(e'D;R@@[&rU:$#)ADOo2ZTd2iI9i0HVF3l(NCZHbRfP9.W-tL)Dbm?6pQS8';69W
%VC?(MR-%ab_SiO7$,</+LSpLnQGARj#\1-HgAqJ2Z)V"fR+B$*K<_!"Bq'Pk%IQ(ngo%SEFk>!X_:T:S]8LV^RV:".Wc-j(CqUn2
%jD]'FhL-`f_18*c+Za6&G%rj96>e@bDAoWB\^V4][V.?[D2VGi_8*JS2MHbap;=RE$O9`e_nd(sE%hq@iF'mrH9?#5iSYb1>#RO#
%ZKK+p4ST'j?S.9CKBIHsM(Kj/pNX%q#mH"0b&g)93!7%];ql[?m'Ma`n):q6G)j?&diFC+#NO.;:G'P<qopaNKm6`73?ASj]g>3d
%a5+A(:cu6Xs.(&=L5)etT/3YZ*E#fT/KP<(o;Q^l(j4e$]8-]erk#f-CG]/i4<K#l'[^;:q-c3:&Ih4'G?PlB#$6oYO`6?ce#4,n
%-43@%3/EPr0[2%V_8Lj:$RTb&/=?4$Z!^ag&dtQOMc_YbD2*7[9B''Xgu`N>KeqM37r]!+rdmFq"Cj`ik#jPW#o<>#4:l9U&Zhmc
%>=[n.]kg,W@&V]Jm>,RV"IqI^/;iaZFpeCF#NF\ER#:udi0WXI#4<0XMD-_LGO$F]bTM[l.rJd'&]e&j$Np"03"-5LI)Q=.eoAZd
%>8S3sCCK+P1CT6=e2U$7'H#SY54q6>i,8"UR-PD_@$jY?>bNi*9L'$gJ,2%7k;-9_i7XqJd"&AAJDirPa*(?%bo9%cmgKHqHV9(p
%B[%75j^XBXC;Pm%?#apLl#Z*d&o#=]V0Rak9+t&ZRCH1CC6YiuYO4Who[Hf/^%/b::iPM+R,hRIJkrIukuAC']P>HM`VDMtN23R,
%>Y]neq;QHoMSh&.+6%G7Y*F2>j"lN_^uq)Q^+@8)C6MCd`ihhOT'_O=g3>9;!o'Y(Qne5j>JQebNR0f:^i=`K3.h,l[?QZ?dhjhE
%.K*q,&[3@pHg=lYo*)790RXFrX6u]:D.lD=O&s^smd;_\d?H/Kr2I1\PD9UU1C^ud9Q2O2:G%m(q7qQL0Cn.I%/9'>I"h\,*El?;
%dJ9JST`F_`*hT,+.K/SEW[oe'B;HfVfWE*XRN=cK^[Ru>N5nEh`l;H:]pR?qQC4D/h-H,0omQ='N'ADcgsoLVk19Cep:]f@7:Rq+
%Er;u]qrq)fQPR-_ftcJe>?HDAju)1Y!dFD.GC2e&/ItPEaMtdh5R?k<"ad$r9u,Ckd"CJAs8<Tc%QRu(G`f"?]O.[t>?i"%582ql
%CRR\K&-(;27M1Ur]K,(82kU!0r@`YJ[>YAS9#Id%OR69AQ$`_8J/6iq_stH.>e4L.$TO4"I<tC2eeCV64$P>/kP0R)6hSCMP'-'b
%F6>L4NHr>TVeKjCEm=#H.qKn:*gkd<H0VIarN3aa9^J2'?d5^c6oiZI2f]THRCNkjHeGVR/TNrUJ"\9apF,pLouA;<?pc"D<:GbW
%j:L`(S4UVnQ5\ZnH+M][7;0c$T&s1:=H,0J:P_Ro@%8eVj.TrGUcUM@6r2h9;&gp`5Bk;&!nq:r#%%eZTDpHUHUZ.cA1OOS5Js*\
%cf"o]g*\3R!GH%h9Jk[C[X'qA&B2P@'*TXk_`0`R)m4W/IkEiG-B6hISqjq<4Q-iGjpq8#Y9Ea"f>lIjTB5P)dMNA>\fP19"Q9,;
%]`k?rlWo9r5<X*S_jqg%%`>bu`*`aPo60"C%buIUW';N,,E5J!8mScTH<fbD\nj*8S3/B5*OpT8=`\jr_f%'tG'q=SAl.tq+*?[3
%,r2K",lrf3Gki[bMg&(7RPM'T?;=qG(_QKbG/9<*>#FE4:4R?nk='oWHD3L)(rT[u,F=_g+iJo;U;,q,2m^B9LMdR7\G]X.b2JG^
%l[0Nc)R&BmUei)?ceqpn%t"Gf<i'ip(Vd1I7?$L%APMO'eCd6uZhL[?7\B(,ot,<7%U*KO,SdNh7DU:0V2Qm4MYeq=5Uu_T=f/WS
%B6Kj_!eJdDJXOktXJbTgHdt;92*uSieqX.[f$!TUJ#q\>/lo1?pLfW`\ml_X^YBP9KQ/!gekeeJb,QS_g\gLdqPs-jhN^\#4/OJ2
%MRFb8iYDYk5#u4M[4jQ18rj:uD,PJ&?WVc5o[3_QrECE_&nfesE*IL@Ar@`6d+W8nBLm,F!K1V*gdNHCQ)Cn,;ebGrY3mMo_;.1K
%d``97&JZW>aLu_pHZH3cD+NN,95Q0e+[2C+WOuuMqdSH-H/gZ47=fA@`pkP"ATg.bI-FSIF]]oVp$kVkp_?;2,o=pcgNT4?5^mUC
%f?ONWCX0f$ED14<`JatFkIqP/!.<UWqi\W3i9Qc<X"<ZC&e>7lZ/K+Y^mG=l7OC)_QY.(#c>6mB+I7`P,\KKdGS+%&H,W*uH#6L+
%5>2-V[Zl7_RcXJ!E9VI2\;YA)GLR&cg:pj)O3L&o#>1\tr).Fj*?W+La5'o>@b-"N6;2jR)'&3HaDhBAYiFibJQ*3^RjX"^[nNH7
%i,9A@#'f=ZCKJ@S(-*gg)uitD71^=gV!.[]NdE1@8];1gPgl3;DH[U6.NC\f^Ej+Pd&6SR@]n]O::=hB!phun1aUa(C'&Zlj1_Kp
%$bDj[BmJn3Cd/,bEqckJ%r^Z:BRhCUc?0kR!FFTP;O\P_iu2o+GDD65HfnBH#1-/rc<4QK!dn,T0ue[_k:6aUk$HCu+keg[GDY9E
%6ai?`(.=lT7$a_c_TaW>9ji-ug+[#8^N'pd0'8%Rio\sXMLX?45MnS_ZQ.?/dl9GbWG6r/[@V-*Vh+=,1\*$4XJ'[.`F7,0i/+@m
%_P](TJ3oe%iF`R0bU9I8#+p\-!uGa44F6b.MeQPP4h9t_bM*<nN^7&-)[5uL.#6&QMeFMC*"e_<+\aOHcK%=F@u4^++VSd8kGEq]
%RlmfVH3CdikrOnK'L)[1m#:PhIQY<).$+4LDpXJsLSH_%0-2&pmqlZm<hAW0%Jc_jEi^:DCR;,>f(F&jLDTE?iN[&j*^Qg,>HhW>
%_'(ZmB$(o%:kXt0:!'5GOc1XuW^7uK89l8:S%G-N3`MZo73_u]j\8JLYR/;!i.#??"0X=g-GJ0,oCb@HA?k30OXoaFgq82YDscM\
%n9gDDiG)cWcP`QeiG,$1i&RQMba='BSB&sXk%^E.j1rqEEr#Z%*6q$;1u7G4&6:'1@IZ0f`:PnMo>T<(>1;)r=f&;f/7;h;fG2+)
%Yr-q=>(bgMd"8)m5YIU7"'Z3-2-ufq:Ai-J7]=42g2-)-L0&N#^<qisMZ'OgCO&4e4D=)c3PS=4fUT:h;7Sns5+(@gcY^p%Ir-F]
%[R+L]#nMld5uY.HJg,t</dZB)VqK$NR8A#L)+KJsS4s117B"@r.n5tsCJ-_fBb8#T)@_,1c4Y[,CUht+8#-RO8,3V0Q7YoqEX_a0
%G7BN6Uh3"53A)FCNZ%$$nV1i?Qp2CL@j[0[a#jln*:nh.lH@uAaRMNhK5\O>3Z_rLHW468b(jYf/Zs8R.[V@ck]]^'p+O'13hnB*
%X'bp2J&>.f1[n.*HTVA&a[Q96FbZMA<A5@/`<c_B.Ms3bWaM1uY(C)6UC;lhVH#=o!j7,`G"!,S1Y/R6GR^qck-Z?][o!<-:qG+)
%Gfo'nhQp4&LN_q;V0mN3=4W2tfq7T"U6Qah8YJ241/4d$!CsdX,jJb;p=$XkBGh5_YZb!1"9+qLR`ro^JGInh)2p,22i++^(uR$4
%<WrTh8_MK@QiaRd<EuS4GYg&F.0NHZ$r\*60KcHcJmf^>&Ie1[C1*F6O_R`-Sl..be[PhGgM1a<%.m,o-[2m)Q+HB\70fYM7gPMp
%>6;IDF\:0!']np1(kCSLGnH!c=W%lA0UQX_kK+p8dEG0`I>oEf9I7Q#<!3;nip'\M,N'4BB**gSFsHf4C1(T1(2@Am'X:CT%/T&I
%QAdQ$kL\nq.+#[U^&Yes5q-sQ"f$&;ks)c1T6%=RQbAekX9sTmb7S'(\Vb/]3;Hg;1b&%KKX=9PLaI0uO3DL'$r^Ok#9k&'=8Y>8
%QB$Ui:;3C1!>ftWUlR0UNg'iU_/5W=!@(U*EGf;GE8\.rN/A.R2hVQ`[7Dt$#'WG;C844(1q3X:7maHR[i:KO&6,$I<&"1'(&TBk
%I+/]=VLX>VW=?](H%h&0'Bma4;p)R5:'8fC=j[A-QDBRCj:pj8;uGmOhiOV4'N^7WitUZY)"n\/[R2\\Ur+mRB8eW4O%eh$8gB'%
%/Xu[nh="]j>AWKoT%Q-c0TS;<:R6m%^LZ7?[1OWkOO".H\(CclRm@CUTgU_hg^JYYZm&+//1;*qA626-Lp%\oTg^@q*Eo_,!7B5,
%XGFff"I;O#)MJ%YAWO+fW'-%W$4.q4fTY0SHBC"9L0Tj?Q<Xu(Mi(TtfU-C3K!fj^k5JJ8JUalHKsqXV;a(u*K#@],6Y'ZQ'Wq.V
%O[:6K7@%PMU.s)iH8%70Eu>(T/g.NZQCt0c/m#&)X_[4rLFFYN./u(nP_93UMejWe3Qq$\>Ul!^/[?>T&3G3pR/;FNYG_3XSfNaN
%D[nuJk8>1Fok#fmETe8rMH'4]NZ8XD)kZ02SNV5Wcp-s"VhjgBK1/B>/fPrCRc+RITYrUAg^JSW`%j_I>i9Qnn13KN`75:Cck;RN
%%]rf%IV<:K7`:UE"%r-;h"FZkV"$/]oK>\9pejui*Z\)uB&qsqE4(!@#7GcFn#]st:(5u0/=7a`DnEW5\U?TJOk68PBJGYX-7*W9
%$+*Kap'\`)?tdn$/Y\oZ+d&6\9+stg-70F4+GQ`P&8P4ZEZ(l0k*hFlSlmZ,$N=`K^4qhh\n)E@!m0cSk$?aYfBCjD?]_p7Y6Z1o
%mH"`u9%2r.hM#*PpTG=J!7)Oi7n)o4<d2mV!Ss''^jWa6_Aq/ha-JV/7"+/=>=C6MfHUV#GHhbeC*>8A'nsI$>qQ7lqP"OgB+fp6
%4Dc\RAfaAanAr([Z4L+tImfGle,mfKjlo$p'W^I!hXD+dh2=@GAF-Rd%0Q6fmm>>o_aTj+^n3-?`pI]:8=/^M#Ro&nF1Dj,gon.n
%;%tLk$ts4-_:-6!k+kUW_4U5GZsX>Ne1l:rY^e<a>Z:b4m[6OaJsD+@%+72p!_!iC6+$p,O>K<<:r,6L4,OqaiJV@2GmuICO<1M(
%"r(2?;unPoSk!W($.,9)apMO,LF6t9"Yc7(.W)R17b2nh#;)Bahmjn.#r(k?[uX\o$t7ob,aL^PVGLfeY,D:6Z/Qh:T4ABtddLRf
%eGfS6O8,g\V!c5pW:dn*@pW.7$RMU^?L*(AdU'*l^]:S(E#6AI@7@fS_`'9O!$9P&7Z2cf^Ie;HYG0c!I@)GYj\Kp=0@T)Q^H@W,
%qW1k$d4_gSMLLt];=mM?kF,aa,d7%*eVlh$g2a.O(T=f)TV'(kC[q/mI0eeu,VhKNQs6>V=s23E*.3[U6N!BW?M+[[*.4sd"k\l,
%a)_(KG]s3AqGg7\[H^h8qM:SG]B6W&<@1`EMRDYF,-4eZ@TAH0K@)OH!`IS;L7:7L7]=?>?E/It\#ARnn0=5RNMr1n7+JJ7m>dF_
%W;77#H1eM/rQ<uYB-/`&'uT%o%4_5q;POn.H<U"m2WTm]0(VXmk@K\timG4DgLM"<Q:Ete6o1<sf)1S=3V2p<>*'bET6Y#tHGkX%
%R0D1S9Oa*9LkM*;@`9qY7\@lV*0F:]GWC`hq9AKGO2V<[2^OPF)cMh_VLBRElBSu(+TP#tmAUME'^>+4'egkhKM*]j@*YNCOHIlL
%plu/tRaDVLNsJ[UW_:gt?8`@GSj,-Mm>!S]\dLJH3b+\)\<`'*<^Nqfj/$Z,'XhR)?Y/!OVkBPsMr->$eK:;-RM>E!1:"C^5Z+(s
%kjl88&VRKfFCi&s0m1Y6iA"a,;s8)l@fq([fs"NRNqY%ta=T(,$CK(J+5$jKh.[Jh-g086mX@7:=&`jI.t&R#6^uIq?b"Be2'6&3
%2*\JFM&0R``^.RSD&iUEd&=NSXlt-f@!V(VQ"`CEq+l;0lXuRCVC__^q-oQXZlZ2=A7ng/MG6\X-2Z6F-DdEjXl>uQXB)sbqKQ**
%YMj-FhWjShni![](.&"!]rVkVR'(LQK"#9C`hFq5$:oo9EAjU3XuQab\]?d=dQ$E?kM\E+4Q4Y-jppPo9YBu$iBMp$d@`K(!LR`K
%1_)S:>eq/Y[7.27n<FG)&/Kjnkq>#R9#FL-jt.[o'n5Mq@2rIX.$S3C^scXlH1_.)@(^hgn0Ka<Pu1ts@4qrk\5dt$9jqdDV30UX
%AQjmra8qHLJFihkR?I@,7ssGLU,HKGGS(qF`Aph<%KG+$da*NW:]g7rJ<\p0%qh]6YF"*HeJ$lNX&8_nC`MUiPapG;jR4F5NrKq;
%0-1u`]^h@s"!,sRVP*C<31&Q?/Ec]34Tnmp2F7ol^p>k*PciRgO57=]H6k.(AYDRs^cR6@lg"m[,d-&S0JP+&F&sk;aJ&$Y^CQ1?
%J[ZL1HsV59'ma9i+7>P,3:JOH2gH@A#=\)1omdj=;\-SokdPlHM0E.g7J^ADBbOJi!ncpANUW0)T4dV$1K!Ho>MWin4Q<Z_jdeXl
%_Mkf5hJi/aoQ-Ls,G^$K)buMh,N!>O#>4,?7_&P4hQU&cpj':P,81S&b^.MDN*K""?tDkTM+tI5VH(ENAf9dtms4V6Gl^;%9BM+[
%cM2j#5DHZ_#8hl3kuJe6gkD6,-K,>_d0@Om`A]KR`=%,.%5DZi$.D-P`UnoWn]X<pM$nDWr^G>GHh#cmqOXnYqJFhP6Ff0:L;2Y4
%=8Ei%SOafN`lDp9n2&sRe+PTh7*$__/8c&f(ONPJDT*1UdfF'8-b:=@!CdmPbMMP7@+1><D]<,'1&CKuX%rie5,(i-qD:N+*aQX\
%!P\-o+[-@tEBJ$cOVa87gTFANG=sGNNV8\qjtf5,.e)#m$]*BQhtL7g0XZaVBA(Uk?ZLT,/A_eHYP3MN%_o:4Q*b46qX-5NL_.*W
%o?-'SfJ,X0/I?"T(-@93[HQ?sXT\k!NZc\;h)&5U%FbD2I\Xf1S<q,RC<s>%K`^$X[:^_nVfg=B%I-`U9L'e5CSPnYR;quK$>UMh
%aX+SjDT-IP)_M7[RS4XRaN'0?FP<9EKe?q]P5O*UScD6H;3p!L6/qj`P3995\lQE%8\sK--;NufGT0AYJ18-a(ZApfN!#OH*tbD.
%1P2M,<chqIS'u6bIB%\sch"eaL9-MubuP?![:6a,'D]f-A[)`NV4WKd$bK-o6pB/'rG+B8E3^Jal&WBYfNrQ_r_9Z$>R0^J[Kcgq
%iWO23'nbkP&7,LHijOm>\Qj+uXb[5,,=IA8S2*Ui.0>Bcm:SLb!ZWS10fcjtdF<=&A#q`%4.MS0ql7pN.MYs6!Mc4U>t8o4%Tglg
%fFQOHUCAf8\#r%QOa_TVVu1`,70m^YWYp,OhT'4C?BCV_g%&)reVs!<KO[+IV:-GVL_M7!U5;X$+"#BJ4i>BXmk"a\XPmh+ppdJ4
%"408YCkL_)Q"Z;C"<8$&,[q:AQhd]qA*Hc+\_;$'_2;lh?j+o-9UrWeU:7H1:488#8XIS+c_`=@r'q"eRJM6@=8bae[nES?O'gjg
%l$;n>3MnqcrnB7U,ko\Lo>g>s2kD,M73EFCbAlek<#]oX)Z,YGb3L-(A[bnl>GJQF]0Y4h->plM#a)"/KFY)tNJH`lZ%!X;2:fh4
%%Q\i&DZlDpc>r,86XZ%F`/DmA\1?\!]ED<n,d$A.i62D3$9;NM+3C&d@REo1WkRe[iG5U@#,.D.]1SXZ#pJ&D70-6RFsA[e@t)!,
%RaRjG,.miuefK.E6?kFn#`LHi\=PjXfKlh\!JUYj@nM>(/_p@ecs,$$"5:."DO]`C5e]FVTHBMhro_<820mnf#]k;NH4S?SW_:DV
%^^+]XpJ,\fE,QG=f1(gjldP*E]Hm4#IR$L-Ks^6LHN@UZeD//sRR'%Xio[Q+Ep"gF0#*LuN3Of`=sJ#IDF9+f4j&2\>\$H:h;tNr
%^oM4Ygafbgmo2\;g5;)q1s(@m7:Unuan>XS"b6P>Z+2C8PYb3N*!3ZTqR_Zoi@`j1]uof/U+;O6Rb8#2]3)Nb7*Na_Z]Ls:7&.<&
%M.s+(a^q-o<M%7#QL%d=IV\(rr]O,9Y#*I@^H/7uUG2j1N5c:d0\R=4=qap8VdZbu4-*mrk`oin)'u$Vb4Lq=[oYt6jH^D9doP8A
%q\;#6i[l,.W,(0Z6J^#l7dnMgnjZTGP4kEF<RqsaPqj*6eucE5UcjB8S?`XZ/01\9cuf$T&V=Dk"0,9]-,Nj=E+X6'i>K9p=`*<h
%C$dUt;AcpI[c@7"e'`XK9sGFng9:%MiRdbPEnMn`MLCCe\WPP<<UiVS&V08LLonq07Eub2I?j<-Y?'GD/3fKu.Zmd*<LQGEX#+8=
%&sGDrKa18BFaj6JRNKPJaS9\G?Mo_jI(@YHSP4W2XFTQS'4.1e`fnC;3EhB;XXm^PUF`]H\;8$T41j7%*%cV$h8S^"D:eI1n^,*3
%T5D%jh^HFV5?rVY0Ku7tc=V/??foWVM\k>@]IIg"5bH6m,1=WndQBi-BYl2Q`18)Y87LmlIf.?),YL[S2o']l2g@ca$-?@69W:F7
%IQ"i6]&5bd"?G(W^.7nFrB-^9If6K,<5KuAc6:dTJ<JurlgoKWfqI$oq!lO`H7jZOOY'ss!d)k92V2+N;6PCW"\bI2]]^'i.9H=*
%P/,&UW[Y&1%?g(J0^1iCVjr^.9\)BAjs^h>Fh-EtRN61+HgHo\(\af9UtWt+k4-PU5Y4e1Dold2^J-7HL8U>WrG6^igW<(UCnlal
%PATKdqhpK,gqq[RG"-P0jMRm\faZ?I"_]HGBC`gOf]s*%Z`>/>]PFiHADPI$rT,eu+7O7TM421A-Zt^D9`Blteh-`"6mb.fW;lNa
%r]+2k_<UmSGBWn@9Rbpia*u9oCpl<'82QbH8uJeqk4A1pOjD?\kBq`U1@k6d5*=1;PNR=Bk#CF5$W!m162,bUiVs2FNdQ:Y/BS\>
%?YN]%@=XrGcN:m2rP6)^SUS5MF6<AWcOhg]G=q*)52l`Y:$J:rWCai3C.^_+pPA=$dLSHf),9?#o^o*+f9BG>^#p]<oE/IRiC^FR
%"f)W0HHuUG>;JcA^Yo(oYG_"C(`D_0D,[[OpFia_obXX*A_G4*]g)5?:p(=Jhe-KmM[DX\49?rLr'!C<,+8;r5/;I!q664<Y]j[6
%?:J*__!,&3V=ar*T'.,hC&P@"q7`7BLI3]^,?jM)<^6(ulI<0:+^)8pUa&mSL`tmQ6Y:[gAb7(ZN*]SeY2o6XUpe*Zn=2j!UhgMZ
%H?__R7a:68rJF+o,-;ru(j#;UIXl8u26D@#+9"6/HWiXu4;un!>!Ke?7Rg>R.n5tpnEIA4LPupsr]I+R1Td8.c]a5#IprCjpbT6#
%_k5U#)?-uGSDhf;jVe'1Y*$/"2C$B7#;5C;lAng8'A\>Q;*Ze0;iX*3jin/ra'Zd>RkK&I^Z`Ol2J=<L_;g-0j"L6dmPocQ6+T6%
%p&Z4N,!EtR1d$igk*V"elQ8.d@d-p`lSZ^i$q`tn1rm@]*7_'6>+b"Gi]6u>*l4u"nJ<,AEV)OteXbC7nX!CKd:=kMr.Se0jmI^\
%ZS-M_Lo.(uXOn1V@]=VEQ+ZO(=Cd=&!?n)agm&Drk)Y4=^+ecSXYRjuV#("%a.%f_IS;<K4RVuifADM%LBocP'V1HJ+1Pd$UNb$3
%=rqG"#iH<R;TmCc?q,\s0$1p+Ya2c<,]Kb0dsG1GI[SmJSgUk\^g-1B61>u6]6>Q[6(eVRWZLS56Ag):DB2MjNT!-pU!9sEVq^hN
%k*>*G&bu1J>ip`.K)+bnnu@,37.M,a.F+\Lb3u4.cGBO<UC?qipDMda?FVN3>^1CU?U%Cd/,rZkA`.R5mZ''<X;&O$+6mkEY<'hA
%j,_G^"r:51l7!O*[\aL8?^\qC?^V4.?^V30?^[f+^,"$,I:["kpr["1OcP'mY7,BQktZ6nb#kiBQU*tU#\,ipYKSc;^+sZ2;PG8Z
%OFf)14cuVZ^+sZrIMC)u6?B1fX0W3g.ce]S#6(,ge8!W3^&:hgb5`i_r4hMJ$U1m/QC.>f_9I%N9RUKg][ha`A\k\Qf0iHNG_/\]
%jUDW:H,J0</p,@bNKqiC;\?)b-f$_(#6<2Q\QT1F0NsoA)6E=T6jjgUDo_-f)H?LT!<$k'mP<_WU,H$-AQe`:F\kR9U2fpP^*qcJ
%i),oBc8%d\oUl*>,)>516YL$louFR[D:Mc)O[&G+C%mq49!.lnHHQ:[*S%HQL;dXDi@RD9@qtE`"8'Vq_cm<^*HTY5L73H1I!Eh-
%o&7I2W4T]nUlC&"DUWXUE1!$pG*n\&GF3Y^i@koUfO8B@Ku;-)%>U@<JN[UO1\[8^EPi)8]+TD5^nlNTrUJ+=M@h<nZdBG3beW8@
%Gk[Ro_P?_kF1Qldc7O7-ThFj:e7YflZRAqi6^pP:rqV&o@p[qJdQM2md0n8`Ai5'X'FBh'bf=ip(\?C2]N.#Ul7j*:4Q[)SO'/S_
%MbIpVR*2t[@i!d!/>S\70k&J0=WD$.?_`$/bc>:oJmh*QZ=@G<R\ok:SS?Ju,Dos8Nq?_P(<)/2nWMr%>!<pr/QTBaaX&Fq!aRV6
%g'>6--<lrQXU>a]1!3$2Hl&#_>kB3Wi#.J0+6pH.0l***(QZ"ThK\9j[pSn'/e0Sgp/HsFSJ1M1e\sU7XUD7-Y1cjVJ8B<WY#u]+
%CilXc)RuIUd2T3kG[fMSMj_BZ["r/<H]'o=7r6D[%%URJnX=Uhs2BncXpk\(nUo2RDEc\G@s$62s2Kd^7bJC<\k,7Rj%u?Nisg(e
%Qt'kOknpZ[-6)G6\Hb-cAU'TT7H4g:m0e5"OdG$\BCnHs-0nV:4(<1[QqUmM`$RuKq+:^G//#3:\2:7NE+2+1#NAhM%WOClN0^/P
%A?HfLDm"!Cq1hQ:6V/chT;f::L5Lp\D`rc7EbBqnKlps1*VD2ijm@q+#h&SUQo!EB,[oEtMQ#pihG=Ng3462e#EPU/PP8bmQ\0;-
%e-WW1F-oUoRmT\L<@klXMCN"rP_.(r8:sC8.]._8>;<\9"cF`DrN_due6@hJk$>KaYL0M2(P-p[nVTa[0OELU6J5hPa*LH5.%oJS
%=]D#ghYc@\OYAOV39`lRco/-:C(lph_1EI=#JRG.26jma-Y$M&cKh7=)"98_g0P1qcg@BR6=_nZ&!<PO;n.X8,)J^*MChOR"e:rV
%["0'[W^Eis'r,=gl:>\[\f6Q#9)`N:rd;i&=\*tbg8dc+=BOW*n#u%?kE7(6;%k2T`Zr-AH+H$_]DF`A^pYFS>An$[8-oofF0<<5
%CO)P$/lDjPQ9e[NXBLj&j?r4t*b2o/IX@GJ8`jul^lnSiGjm>8h!b'g;-sblj+<:>Qtkt<\MI>_o.".D$8BcuM+[t-])NJWVi,D^
%7uj$,5GE$-TS/(7N4QtSYDu*#]#I1*m%!%1S![//l4sbV'+H[4a9g<\1<&m?r:.ut;OIuYmJ0K3\&u[D/ocen?dT*@Vg_t=[D1?-
%3QSaXUYk;E&^RR#fhO]mBn!n&hVlG+!7+^,or#DVX9tcu-9+NkKYiX5<..6,=LpUSb<=)ZS%2$Kp%c-Rr$Vd&LfW:n1`A9#3MN5B
%I7/&NLbuMY-A`2NnKa^&QV-%-J!QCp35;h<kpb'_Vb`kh;#G6L&"(*p\Sg+j]j!tLR"Y?7XY9>'W?4.,(E=$%8hSom,WKl3cLSb]
%/KT%!^T7OoDa,F#h%gIu]HX9/<juJTK7lU,BZu\o,+o2d;4E_Adn1KR()22,2qoS"6]=_sUK&^'8P>?VbUkJRdm%Y8n\46pg%g*U
%BR^osnf<uFZ$kLh]maklB_[madF9b0IW*%Yo,h:XA0k\G)`QIu1p:V:rq'PL;N]L^62sMh)7qs`IX@j^n;YdL/sb=`.)Ljp0J(s%
%NL2=<ID5K'6#!ob1o#.:C&718'!&l.-'kDAS*Vd<D_+la`jDE'7?`R9LKb[\7[Uu?40hRbN]R(A!WMq2]&J.[TQF^sgmA^h4OXIp
%fus(K2GR\1IHIUn*Hs>3BC<\6p4sXA;N6e^86aLLd7-EH#RV$0&sWS6kp'Y9<,#Mbd_p_]s2;'>(1M)nQ*3GM^JS2"RB"]8P"L5&
%s&Vu83LJL>,<]m8_qa#`A7=?R=dYs/m76o>>G1CVVZ2<[fG0tSbgU$_rG9?/T3ZG2?00C$Ot0DL$*cT#:S+E9VWUXCiTd[*>AgcH
%4U-;AMSJ(b#/$\Q*edeh'o1PaNN*6!ZU^^W4ppuN"5H+1+,'bU>)uUn57.Ra?FR;GqkUr#r[?8#``kS0pICp%fQ\*fC#DLTR,E3'
%MPm>T64jb';(-$X4:9&d[7?p8%J!Ap233jPGS>s#b/.^L7.J6j7O<_2*ne5r"ajm,FR$a&$K0F&?,OfK9pF"W:h>OV+;F>BWXhN)
%hr<1$Ih<#qfID1Z$@&orYns+<*n5s<+7'$\c83TDrC&-mrQGnZAO8OXEqDr%!Z!L@\3:4!7eJ^6$46>O'[n">6Li"*^Bqkakk$29
%Z`JM62`!Bbb)4&78Js*"=-S,9:OWo`$5*fmg#,2j`k8A=TXA6P1pD<sAE9:Y6PN<_("Mn'T`Bgck"e;E4Ba85>;pD#CEDj7-_\>U
%a/\V'8LR[K$B`8j:eO^*j%M'W!!LLiF;HWa7m^SB8LPJ/)JY>S-kP/*Kg@dZpNnDQ.;oe0fV)^JEJID3>eje25U8q$>3#R,P>"NM
%RfGQRDV_VFbu)^hRbV%a,06o*('ZGGis<CQg>aZ#HQ7GD`sLS^LpRuB9oe?:QW#e&RP=TRlNTf5EDQn-3a2J:&r^<'mIC8H[caeZ
%QR>q<1M_rGbG5FRhGq!A0/-:"F<Q&Ha8Ju-T6rqKj-$on7Xt.f'7"p`7`ZZUmU`U-/Wn8^.',NeVNlO!9;M0Y$WO?hM'_M(s0KNb
%-hrq6UeQ[I?.Oe!V2s=kV5.S'QJ@WY9oO)]O0R:6,PpdJ08\&S\**?!!g$1*mZ#j\Qqc$RON!i2oP"dCMD]U7)UV[h!p)#/UiO=5
%9)s1Z$+E7D>=JB@Vce@8!:utrK7?Q?rM]kpnJU:1EE6U#3$Z1>Ej4A;68)SgmqaQV4>`'G89g7'`m]1VL^TE7R1Z;E->A3#-1a"I
%,c.3hXl=4XOi]Oc0p$ko5OH]u&tJX<g9fhV?.T)4Z#3p9f-RZGqo*u3KsgXK???^DkjJJ&o/72ooT64i&Q_qKi1)s4!ZQtPB37\R
%BbnoqP3W(!e(fgi/+B@tCtJAjm'gCgI+Z:/8kAH1%=]]:,U9_^a7/ocP)iPI2DDn2Rt^%(g`^miak1Z+]I4[<Nc_dSmlE!kCZhV0
%,?;d-p[[A!HsV?J'7GV+18cF`q?[%%@0n,.kd&Vo&:=p[$Sj(8'15dCDd/lS2:lY)anik+'=E^i/8?q8i792AMPZ%RR9IiELq@TK
%I.`hn>qZ/E%*o^ES@5<Y=E-MDK0H\.'h,'7Y-(J.cX4RsK<77!oUR_5qGlurqG?Z/?DmL:If;)$IOu[fO"0[*IF,_]/A>!U8,ul_
%B=*9i[KiZe/'HAJ&__OZIHh[*8+u;m-VE,)oSO>Q!bWhr(OY#0`#?O"*ku)$/q%BLBaB;DlU=jOQ7A>>\EKl?TrI$S[f.Ad]cJH>
%_#'R5q?6Z&lg\`*6J7Vqml:ii1-3;#fRtcBgo7fgP(sLD'+)<:9Q$pY:Ft(f\^9U=ngQZOq*M6Q>8Ze8r4&*%3gNa,l\Yr4F3f+t
%;V]osOO;Rp<nL`%^#s_mGKa?R61u0%Y=mT%["%%GX(=CX$N"s`0$Vr>%W\2a]0KF7Mju\",oO(2F5L_ZO"80%o6Lqh7!El^)Y?OO
%OM1*,UKs/qj_91JLElDir.\X74S@/Jb;_.6W@gI!0Y?\<mdXUhcnkG?8)m._EPGi[e)-IZ-P[G&/-#=I7,/0@Fj3E`>$Ski;mXRO
%\)IH-o:B8n5Qok$'c/-d\EqVs!h'ZQFY&_+B.nH0?<`M]Ji7@X6-m$Ki;%/&!E+2DSCb'RTP#9s#c5J_,t#o3M<<E3,QJ>>#ioUY
%O7*X2gTh6hmk'JtPSPAqd_[J;B`YBpB$bIm"UN!?H)aeW6'$\+Qlc.$^[ZJ;'!I)X%?/F2i0J?k$_usikY,OoN4;1&dK4sMbSjlR
%('(hEOZTRI!;]!bHYGbLZa?Cb<a*:lNR3S2o!\'T9U$=*\9AXu,B"LVNI9C;V$.-/q-jd_/Wabokp';EJV:@5r)cT"&@T!"iHnC<
%J[>Joc?@qoU^e_2Bu(r\M66^t3#T[=4bL7H,:tRajf]seaD1"E,`8/\NaCMi=m<t.3cs3$$R#02LNb4$J<a=.A+T4:]e)(hapXkR
%5.*]L"oZZuGq69Km1E(iDQb]YEnb:jT35NO?AQeP44>>$dTCc\"\BjD?Y7i/:dgC>8Fu`MT]uS&(=ocqQD2\4O7q3m-4=F\ncIh&
%Md(H-E>HrBPL3V>)"mCXC!@2/Q2!!am_%=pi*GTAncJ'.(C+s[nVBrN!0)Zd)mnY%P.2a'JEu0L+]%?n&`5r`aQ2YM=Za6aQPWKt
%dVOBYiOq/YN(bV&+d1KT4&8[[93h\'jTVCBQXLZm&IWio$_GlPYTOtnBO4sEcoNW%k1'VD?;t3,EDI^*_C3LS/shW\;2;5*!,X7;
%1!OK%AM,VhJ:/NE%U!*\0:#'A6-BW]S3G`CYjqj0\opIE1ilL^GS+n<0/%iUaV^+b/KYJJmK2>ga<(((4sqQ"]bU!-^cj[69,`6'
%O#S!a?o*,jR9ZXSGEpGq@I.q[>XGe$[K%Fu.O0X8<XC;='I!TM;pAeYnYLmg&>3Ctfm__NpMc/H,*S]5cuKdnC)`Apo."-;2Aq#:
%i==sD^.eE"]^W5brm@"c:m/:3"0^!]7ClgLq`aZNY/2<gZ$P,:\/Xn=Ss@J#HGq:n\u]OAU#8,0IO<0*dS>:<SQH&ZRtR,l$KE;2
%oXU3$U5_$\VNKS!'2GqZmZbd)Z''2_Gtpu!$WN@0Z22'Fk-C0d&m3YFAAm=eqq5QM+*c`kj8%)%"X5VmVG&:9N2E/g=H(aId<;8i
%2lP9Rr*R?igWIM"*:ic6ll>N>-%DiDp8]WfC3..Y@Z^C[GgY'!]1DrdDsuD[gN&hiIM_34X=jUbak<io`Vq-"#?kQ(J=D'_#X[2W
%N^E1ZUW>1hpKc+Tf6l1I>0Z;ki+UGLc*q<8W2`^i`mm9i(B:4U%6MPLiOc*Qof!\(m]?hQh<[l41>E^@Y@NZK,b)GgTNet\d+]Uf
%TYlXhfVf#3qm;,=;sO4W_E<(XXuZ(sK_b;W?7Y!FC0h[AVeWdZedd#Zkgm'^/"/5o[?oDS8"7%24,%^U4\*5X6rL4[#>*f[i8E'/
%T*j'.h7De!a5HQ-@h%bBl#JGWrF-<\E4^+TEsn-qLmnZ$[iioD,8V(:/[o-+Y9Df5N#A9-IV$_oTHiUnCWmGhk49YcS>LN%ED5.;
%o6;-014kagB`o;>P1`m;ea:A:d">p*U-j-+gn-X3$hV+Hn7sgKgt#I"S1hV'\%#8P0RQ`Q!W2Eue@?&Pj@e7hjk]:3=ACFRnCg+M
%SZ+HhLg+[LRDXt;l?4r.$*Bi*b_!ZpKZY:8;8hF_A1<sP?9FYX`Lm<KYPcF(RK=FIO/@hD4IOBVs/]WDOJ>-`FfRo>=+f%td9@<R
%X'+,?W6ef"r*`j(\Stbh%uo]PMdAkYT=I(.^[!\<Zq6GAP!X5$.qa>\1mchU0SLj:(J/dm<G4iMC(>,d'Uk^i=(m<u>RJa&;:fK9
%+h:(k7XsYY"//tn8L-14\L9:91o.]H'2qn_m=h]iQr@PtVP4LjJ*Aa*plg*M?Zrm`\co9Y?'Sr%QU:<%]A%lh$I,uRia3Cg4.2/m
%V9h?78M?gcgdrKs?(VG%S&rYBRD;f9B_orD>l/@69RtBhB<KP`/t(I!T*]I1<Ju\to*/KmH/kXFN#f5u"W6PZFf$K$,gqL;"+ges
%_/34N;I&cDCfBPZ`$1$AJ[]>$::uS<<bCU=bdB$dntjQ8W/tg??sP+VHl<_g"h();Br3@<?07TA:=aQU#>F+\ip+Xq%&5Fr+o9+-
%LVDQgR-qQ0"ZC9[9@m`-LqNGekV?5!HVnmQX8:2;0(\F!)kH4K(R.KiG<W&_=)f0E:h=*sM`Zm`1)H+B(m>P;jpd'i(i\#:L/qTJ
%)1$6N1VL8pb7(.d?"P4qV99;>Ea<:MXQqXZ1gIW90P@9+%$U#Ba`nps?06/T."<$G_6sQD#LcSM?b/q4>cC3P\kFYp\(llo'Dl5%
%\3uUm4<'E`1;VDW\(XiMb;1,DW_Dd8q9W[#*]M\4OirRT'dL/d1;Q*&NR:^n?o,ct=]&a"0WHmHgt>It9dqTm9`!=@,.]6;G\ooi
%j/ci[2H;)Y[WEEnP6mCpZc7kNMt=eC'V&<fk0(/rQ<=djX3SVYb+ug+0GTp67:(6OD:BZg"8[D1-*j&.Q<E^oP@kHF(T&'F0A,pj
%JeMf*-qRl6J6IMCCeH;b3&N^q[j2a-DUF+q?in3"0$k4=5&a7Jph5s,$XR+@Sld]?(Dj`erA?+R;UNsmTU='t*"dZ:>TKn4)r"Vk
%-q'lRH(4Kh[61W8+8a1iAKusZ`H@>(q@1$VlNd%]EE^3Q?i9ODs6f'bm(`N1huEEK2uiT`5CW?t!5J<b5Q1S.Je0$>s%DO)q$i&2
%q]"=fci9iN%eT_7rU_I%q`fT)S)=55O+6irrr$Qkf73bj5Q9p9IfJM*^]24G^\Qp)^&8CK^\[j%s8:'THi'9kHhhU;IeNA?k4J!2
%pA)m=^&<;jpUBo.*7]P!s8;.h/cT7*qbR"5@K#@a[GR)=s-u*5qLs67W)nV$SE"4`[pT(<06=m(1]N3-s*4P957[CjD`PN0rS)ht
%YNbG`5<XMoLS&T!qE664B]@0WQ1dqMAW\YDrIJm_OPd-HNpZ`U*nlJFQ&b^qSB<n??0a2bY7DTZ>>PP'S2U^G+=1[#2!(\!Nk/PF
%?Q`D"q(@%0p\ckdoi$2$"J6?DLbbo"%QTt'noI@'=VqS\/AX#f[E5!lK@4s[mM\u6:"0A;osM%A7)m/dc(hEN^@3"2>q7<i8,P*S
%SDgkHg>YN"3*X'^LiQ%f8hC/cM4lk]hgrALPh.13!MdBo73)Q"3q-#1qgOr*r)'?>_gKeHE),!e,2B;?ZaegbQ6liY\!<\!dmfWp
%nJ2=c2k;@p=(h[MXuJf5PfO.@J<d'c!(#TV#3shfouu<Qb@/66L7Wh#Fro8oJb\(jLLDCCE,mXM`8T=s+o2`=b>*h'=>:27?@>&)
%(J9q<?16m/K"ZF\D76hI!4<?e6GOD6m#WFUdVPS@pYi!6G<!5TL1\\Z7#*EsQ$W4gdFiin.H3l:$iShB,:Guh]pEZ1e$[aS<J&<d
%b;4,ITW?`G7QNtc+r)IlnRAi=IR>3[`?%'V0?9bhZQITRb=?]4:f_ZD-OQ@W7J82IB"9na6u]a,Oo]2p9j*u_``Vt97E668Q+-Yl
%%TN]NRM(47\Be]7ffZ`ca?MrN2o%[Bs7@ZTIWZ3ol)uX&ifUWII2-o.^@>g\V[6PN.W3lP8[EN`+;\V\.\D>lV*/e%)S-e6KJMpd
%7GB:imP?eTlXb?l-m<RuD(.p8psm89F[(QZ^gT)ZPWG$M#V9n&cXYPP'V9IP01Ma!Q4V,k=<>c'SfkfX,c"^RDd9?t(ZU)`^)S57
%jY"hGHEZ+XSuuDgAg<\h\L#*m`$[;\+-N>Jb!fMJM;n$7?0Ci>9=G3J%h2VY](0!^<OV!MU1^Va3&i?4h(!M'*=>Z*2'69u\%(0%
%U=*Q%WeUV1difaO7'f:!ps)sg\'4q!(DC,>"HuoV^PnpIDf->b_qB3E@6M`[(=2bE78*HdJn%oLfToO"\#jl5j;V7TLi0o6S+4J3
%7E2elZp\cg0*bt'1BVj?)r,Bbma?^IPSOLUn]LA!@$]3><ZtX3mT&h'_IcSIN=Bqn`o\_m/5kuq&>797!NE2?(I78KF1LE.LH.EI
%)a&.1[WNJWNC(^Z%^K6B3o3XW/F5.n(W^+(C>8?/3C0(\L<'jm(;r_4mdm'o)31d,'j9-$Y0TqN+>NT#0MMD>+d2_],jhpgnW/eZ
%]mEj%c4e:GV'/=0bJltFQ-S_:G[&BT'dk\P'u_(2NXpjGAQ]tn/@>MT&t3k%ONJDJ9e=G\Mup$5hr'*-!=N0Fmh?F+'Dd4m$u4DG
%3%VJp*CJn#g0M:%KBQ:2Y.\,9jat2J.VTUX#*p$FO"W02)BG;9Qu[K>!K(2IHOK"hr"rJQ5_78PCI+Z/482Ap%"-,VB]03d8B2[8
%&)s>!SA74@%%j'-miDW*^foh@0J\,u_2CRIMW>Rb^!O#.'?KU&QNpEJO%6Mi]OJYL@;9elfO6Hm(-oaX0$n8L?sS0K:Y\ucpmSDN
%d'^+U_^Ko1K^no)$H,e<afCZ=?<3MMApo8?%r<^_?[^5;Vudh1?X-C2J#"5,d$NY1n3tCuqi8/I+'=0_PfQ7?:Bc4-]C03&:G2@N
%+#P=\W&I#W$D-Bi;K-"q55kDs3!_KnDX8U\>5Mf(_#8`6a/C4"koB3&5AsY)Z%'uaHg'%g2o6DZ,Pb_q`s'=bgCoU6V2r[?=Mss>
%l]Lg)Y>/.8:<2%g2"haZD)pm0?l*M21VhVBMRX>P^D<]`]+ud=7hOn8`uA'rl`,4_/D+bu8NU8+pp`3hb3>u-,O[*MI6U])ZYuC$
%=EQjp.Yd0<Qc=[[L[",4PUs?O5q91Y*=r7q,0o0d/7MaLqJjdk"aN'n2E>/63M%f(0j,%nXLW?ZY_EWj!q9`)Hr`uV$\S6Y?kkg6
%ZBoV7N\+@3L](Of:jgBcg*Y$_P@u%!!-;ri<Gq.T`4@0@]j9ZM2^'[E?:6aU/Ocr_7>aB=S->sF81TiL<"jWK4NsAgjQRSo9p7K$
%m/q%/Bl[idH(e<,7,gO0O;i_%.FlJ^n.W'--Y1$qU*Q=Q!L=^CJ.f_'cOe-QTZtA/pQ.,FedW06kugLa[3TZ9=CY7W4*"V$?63+F
%E%[rj491l)XbHYPF9*/G;?]6pWr29g6[uiY<'UGmXBHm4K'>uK3*-6r/ep?n0K<UtUZrJNr=ADQ;jt2Rq!PK'`I:Z>W\3=pRN)>)
%:j.LRF(Y].U9J1K!Z<r/QNQ$4f[3)%]IKs7WAt[^\T-m\j7#7,!j%[#BrcSS"tNo(!1jjcD+L&9hX/b$$OmqbK>so$jC1fi9a5Vs
%<23q:FXZaTf:O3k"W!;!D'!D3iaNU`It)V[QZJ*=,P63DnmI/&epU`-^pa-=@%Zd;IFsAJ)SC>n@<hqiHRH4?g<,r9)>#skk[AhD
%G1kD7FGC=9<B(?kZ%+hRK91D4=WFD,><jKL;\fmsTFofq1X`Vk(5t"-Gd4,r@o@&k]:+Gf.PlGE5%(XsTq'(`9I@m3hQEQgHYBON
%%*4;.g*e,0AeW=H/>n%sGA=D83#-BCCKorLVeo&BQYV33TXGF=(0?-?gqk5kb4G-YP"feAH)<1[C1P:5ZlRp%eJ@Guh$r6F?KJ:<
%#gY!S&a.S&A[$r>MtfY]B&6#Q^6\>uV=0QnPd'#";QJbQekN^BpLG]4SR2!`K4b3clCGA,?kqi3jCH<%bt\#tRRt>eM$>oKOlFc5
%UZ*Pd1jQVIV/4sV39Cp_qZ/eTXXssHB+SQPKbY]dVoSYrI0Km/Fscu;@Kh5s.[6g9639(gd\`I-+<%V^^hena((02!q2/_Y!Bs<j
%P#anYYGiY^]SJXYS,S4-?\R`==oM7OMY/73U_joaQS`Nd^>e>*kA2>s'A00e?4r2RRDD"k[STFs`qgJ&nKu?]7i-_s\0#P:<M%j:
%d'V[\9]_]-gYF2/-N3p-e;3D9'0A:[fk?q0@6n2UBrqRX-tosBjfB'l?1?NLdHZ_,%Amb9gh&hk]:]Fr4mXlKmCT$ik-LEN=RY;a
%D25iW337E^$0+&A&"RaY,+S>;l@'J\\lqZ.mn&DKLPS,c(&tpu*E5EBQi"$J3(P=M&0_sp?ic<iYT&mtMLWjR1ne.*r?mQ?02#`\
%I]WsQ\aEj`f'hY9LAfdq^73)J*$rAl@?L3Y\:[(iYI?J1faZXU/ARTYBb0n'qE[4Vo7l@j)u1hQ(YXjXSEX&,"4L9`8`#12_lK;-
%:8!RloC[g)S$H9]P^FFdgM8rU`TlZj4ZM5Ib@JQZU:_2paMYeGctF<TlTQ8->HQk"^95.^@0;0;pg+9%oj-[D\Wfg>MW%j=GA,MS
%-[*;g0m(rY4:E]iE=9e:'\,fqp&+l>;)7/)dBEkgHXXgFObCF0K+>LI0W8&jp<X4iUrj;S&fG"OjIh!<)?@5A+?.(u9=m:='<\%h
%?5W`UY.)RE!X#tX*]E6b:)/5(oX/B_T7K,OgbG,AYX=:=Uk$e"niaQpA8B_BhaQ8;9aZ:9Orl?p)HZ'rfnK)q?Me[odAHWhm_V]%
%pW('%:cE*A.6\u_pK'kNVT.6_-[qlg'(H'eVIp:h3aCMA8j!T?Gsh#o^pfq/C!h;DAEP"cOlssud:Dgo*O^fc:"g3dh[cb:FO_16
%(mH]$5QM$Qs1g[F3^4A%I!GV^X5Lt!DYbBr]f7)sU=>njSO[;JefWotDo!ei!Z8C5^uJJ*@:niqCN]]rNlBHkNl"PW3*otKJN27f
%-ju_+O*;2Mho;Ek\3HG=.!/np^#&XE>W-U2qT(;9p-O9SS%Wd=Y^\7KKm,+DRu\c;YRNNBL"CJ=jKab;%4ZR&rG1Ro'ICO"KB$lP
%W6i;&10Gtf*DHLe)gNC&?C(5e*VH?X97!Ibm1l<Q9lJgaJ*due=[W-"=T8^^D;c\=J*er`L^lZ7?[HY"?*IS,qH&2Qe97^>]tg<'
%\8YHa`b%pK)uC1HYd)*CJrN,R'l9[5<5D%uR0o7Y41a-c=TqGs@Aelp?tn?iEhWnCRb]_P?0em2U&qb^b'>le0>j2Z)eJt`7j@u9
%hcKJd8"/pVni!OU4#GM[:J03PFt*aGFJ,LZ"[9N^i`Q'bE2rqoBO?=i8Mqo'!Ui$JX395KNcHmtlgJ!R9&MP^S7u>]k@E:7f"Mca
%9u4m(f*?!Cf*BUTf@VfV^X?e><`Pfl?\ph#fn6823u:00KuE7Xd$ErLI!=m`JX=Ma_t:."S^gj;2>o&@[Zc0`oWK8M>EYA)<W>[t
%0()Z8J*g3PHmi\)="KiIY]VRQn.j^mbls)lWn1to)H\QHSkF@A%/8JO98#1,SK'/fZ_i9?E%l'%(#c6E`R`.?0/`tb2Aq3aI!7)K
%Yp4T2`N1OsZ$dFT5Bd8^^q,<sTrA+%,7C.])GC/>:uXuM!IKA6B*u-u?t6O?J;nu5$J=!>;o$DHW<+u@+Y$kEbtJ-WWG;jn0G?bP
%)CNf%YAnk_V&IrPeA$0;a/M3d?=$ftc1J31P2eL?9`Ku]3p3Vo`?HCNWni`cYFV[+abPKE(&/iZp6A`a1OV-]?NEo!>=A-7D;_s!
%/PGqAJCQO6XFMV2+>.5&!D?*^qk+9u@Uu;ba9pQ)BF<B"<s:/F-J,6&!g^W,<%Ks3/G2<j)-+HbLJCdoF]Q9Zm!7lUaqV'JZor=:
%/=dd?Mej;69\Gls>[SIP9Q;.[jVZRa&ng/ADaB8+&U6\Gq[nCn$JSe@QAMSK00JH%4&rC!8a_-W]j7ZK(>TicBd9^3m8Wq[Ba^ej
%`U;A_$tH;im8T!seK:ZAI=S2K]l6uh?Hn?G2Kg7D@:Od]%3%fL)Uq<4W.r8rT2XatftIj.`)5A1l,`6@LR+rKBbda\<[h%ddQ3W)
%Vs.XMXI:4(!eVQfUF#EBMkTp4qaC3bm,3keaTMX7Z2g/FUlKO]]g'.ZJ@92r/<TrU(Ta\S1q>&'0]'bM*q*Ps/2rma28@n!Na3Hp
%0FGQPL%5$<.M1dSM[]eL543:W!_Bpf>"/#3rd#AJ3-iX+dGO5u3?QoXg0H8F;;p4V"l[`kLIYh1Y^@'5L8S2oi+sa#qaeN[7_Vm"
%!*_Bp>p0dI;gG_d@U^X[qG?`*:VeZm[_*h\_-4$j5b8&9XPVn<T$,EjLN\;>blD*0gPFU1%:A^l*P*"E5o>=EQS;b'=b/P0)&k#M
%]rX'bB#=b**e_)rcA#Kr@7;kf_mlFmde-dp5Cd+JN4A>)hZn^*pnilV`V3Hl4gkqU-M?G5:G'D7;7if`^*&t[!+>&j7f7du:St\7
%d'\3t,r!$f28h3?KHkWSh;e(%_s;hUc?RjubTp!>@%DTj7XX\jmUiHFb'<OZ.X-_d^A<bOOMo4"1>cVn$j'n\8#gG2&Y)2C&s@G#
%gBeF!CSP.,"$!@Wi`b5/lA4'*#6OC&jVm[n#5UH$-K`j[P5XZ5R%p_"18!1>FQ+r/#l+3#<f\L]mi.ZebNilRO_81Zp(r7ebf=G/
%&M]QBVs1AZjPr)Q#Z>ROmM*LIN<:6bZu<mCmIBB/CE#e!5DlaCO3XHMb0u1`BWC+/\IR"V)\7\u!@>L.)#j"@KaF)>dL]<JI.aC;
%`KPDY5"T.@s,O#Rj1sjMp=I(Wr_FO!r:]4_?iTp4s76,,hu;egs33e.md9<^If$`IgbT('Pe=mF;E\C&5E>N-p-KIKr;WWF&KIH`
%khAK)m90:5%\&NO]D;`uq#"W]j"Hi%p<_8#a:n<W?Lq#IRYTf!GWiNTo-?Wjp`K17e>[.tns"aB?O7fX:"aIece4d&6p=iW7nrh,
%'peV=/bD_<>i5cc57)-5-&T8@d%m`RTB4*%;I*CemOj_;$,j$?hEuba#d,XKoJa&P883bT8(U#blU'QqOX^]e&Sbke>J+=/9LZ3h
%,ZlDn`^_+I+KOtC^UTQtkJ/^3B^f.D&0+.tk^nUKaCrm;4C7O&.TaLoSAhGPacuiY%`AN1ON-RDZlj&p$-/<p_9(_i&dO+?T&A2B
%b87l@F7n?==5p`:Ye5GYeQiLmQNh86[R)2R"T80"bPZ?I/-p+SEgZSr5_VZ#/WARiRdi#s"@Tb3l_a+RjGrBH-=J8umc^Z-OhD=B
%YT!Xkm=uXIKbM14.kL>Z>)cr-^3%8CI?=d">W[P[#X>do,>6+&1qTU(f:r_C-hQ[VC=1,75->:c%2!QQg%uG+qYJ7L9N]@'=n=q4
%.JD_,MrD3e*g1c!QA!^#hMVbFs*_(P!]u0mLG)$pdZ+!I2bA!Ljujt,%;`GqfE2nTQD<'S\mUqVn0OR'd&Uq__[q2!KYdLg$'_t9
%(3HYFnZ#Q^P=A,.$;bcM;%KZp_NuFr^bB*EiZ&rF*V!p`2_IJ;^XuE?LC?sKp(t8p9Z_V0]SDFsBRN"_6(*%Y3'LktRBh%]rN[^(
%]URa=K+e_`^,R?/kjQ?tqGnTg"o;g<Ghbt)[KRC0jsr+Wlrp8p(qulbJ:7(ql@dt]\7FO4?Og>*2=WL:b;r*3hI\0;gS^k-Vs39*
%Q.04F>;2GG=fPa%=Vdk-!@^SOmI:+j,MDqDA_i-)1@*f$NJgWJm-^_g_BUREYQNLH&g)([-PM*WFJRM%%]X-L2+>Z*0$\];f[`ZU
%O4cZ9Yk@ip$FhqTa64`bfMI+e?$YD?Gl;Elb.VH^NppJ1mGe9Y)pP@W+E_O)@3*8C"m8!OToBB!O1+J[iEj'%pZgOrO74QJ%=-Q[
%H\4^*CV]I$OJ1WJ[8CMnWrm"PjWTg'452$uB,jq3`*YG,"D#Z:YC2E*qZB=k`6qom50Qbh06g]ClSk?L;0!G6OsgC,1pi3E!nK]+
%S4+-F17XXP5RqYS<#(K1E!2:4Fpr<*ED!fk2[`9!Y)bbWcIf*J=FW+H-DV/1ZHW%@Rg]?^af5%C3DkQ4b!*aXH/^T5$=@k6>6(L+
%%-mt]J370T-KKTtbnV$6\ae5G!_UVL)n(_J>;[0.H4\b$m&ffL0J$^3OT\P:s+&Q]`Vft\ST5`,`!hchEj'Y9#>#=a*G4N^6@i`5
%3NVsGUY<_?_6<Zc3#]WK$j1l3_]'E[&ADam,kUG43FNcMT#-#KOTk#T,0I_JNTpC^*QH4.fqlfl++77[A2a&r^>.fnU>2E"-ioBA
%D1nIqrin-lhQqRcHl-:TIDB8O]WRgg=hD.D;T1/NrgB)(?L\*5BqYp?Ti>CfjI92Y'l0]J:!"nh2H&6[h=b>&PAJoH9C2c@1@Rea
%s0Uo"$+L`?)uuM>+EsEe=D)BAYhKCJp^7Z/%TipnZq-#`'+_R6[=0=h7%S>t#H&<]82.E-mmJl#gP?5aP@io+YW5]BpHck#MfqbI
%6Lh,B</us3ouq2S._%8PMQF<_XsMjgj!;eVF,!I%=8[ZTkZ[GCB>V#>c1A8Ng<t.iSas,8"T-JQmMcpo?sdH(m+EUgC-p(IVV@u3
%B3.fJTZCH&bubW'c1Ud+67bI+[>#iqs&_,]C=YBj"N%_FR2W#oVN^O:Bmp@.+r58q,kV:ehV*Ykk@D[;k,&8gYkJa>ZKNc!f4rbM
%Ud>3]N)g48;QgHN"\B7r3N3+Z/P&e/qrOP>4s4<8)/R/TOW%F$H&-.>,Ci\s=9=scg>L],"=B..,qt73Mt!TR>F@ZUcG-B1UpM="
%Dk2`=!k4e5.]"1)n-11!9tM+<TP:16nc8:,3l*o>-9Xn'>FMA#]aHL+-+j;[!@7g8eL9>l@83SbrHK2+fTunt\>.E*(i/A@k.I6B
%mBWUL@]Uk[WXiAZRrT'Mo@[,fE6!*"g:_T#Bb5+=;>V&HE<C/KQ"r+-!:_*7>EBK[i$"V[(nfAg"1QCA2ei=Geo]jihHO'fL`/[T
%U8neqUo\jk@t0U_RG;%]ABO[/f7Y@uN%WJU@i?4X1Y"pnV(iiHf*DU0>$+J:==Shu-4o94;U9o)5e\.EI]I153\oFFkELM>S!K[%
%r%bI\BtEAg2_R]O,p5_((.U_q]j9h-2a*\E[*FG3_$=$\jNXHW"?=;9B2;[p32Eh^mGZp0"]FVlX8sFn@I(AghD48G#AA/4i8!/4
%L:l3fUj<9N/P^(UC*[69c8R+>0_H6$1oZK)^aJp]175K&ZV%'(;CM_k&^U;]k;Z%,"P'@)h:@3=HdgNlWfp<#4!bJ!9gnBGIKiTC
%.3!QIkSX+l1A+H3C[fL"UHBij=0^p3)4dO/M]uDh;9d(,YO0l!]QWmIqU@'fe-osFqra\oW+3GjC-rZ%Ze_4/FWM+^,"]n35UC;U
%nhldn,c?t6G`KD9)jdSK<eP[.l"kG"%(MG-g6lcbA&19pWEin>57r[Wi8E_VbsM4l0bLZ$."'J>[S^^nWNO'b]1.N#U6L]l;Lo0i
%8_V-S1)r"_9brQnabZ0oE@-DgV5T)%D0AX0'5ZZ'=:@JNW^s;VC1V[u_ZTqdjNsH;It"uAj*a@):cf%r<-`sCb@Esf6&'']+7q&)
%XXHfo!nBX'09^ndZe=%q@g1/%+t_L'#4Pe%&[taRRe?=gqJ\%+csL.j@:[*l!u^*I#UK#T'8YtdbU;E(OZmDdp\N["IK%A'^4ZX/
%fAG[LqC2kaE\KsBVK2^4\$JX=1A.j4Uk_o98HW6I[^ei36f;-gQ%W47D7k8_eqaGQb22aPP=^Q=LD^0<p>+@F8YD=._;#J+nA$TC
%MRTh*7j,'D&OI6bef,#J-/aUfn6XA>](>1g>]#P'CkFDl]$I@:$jh/,")K4bDHL`l,G`b(:qT\S];S@K^1k!0WPH2_'jE/6D//'"
%*,!kKdYhZ>nJ1D%X!,kt/lHFJ[[Q#]'K^j$;Wllh['_Yf(fis_bc3<Q8BA`^gJ+oZ\9QLlg;As&'UOA1%k/oJCsil/\muW1oLA=2
%4t^(U:2&4F=Qi+WNhO5%FMl1IOU!XH4!N$&C`fQmfP!G^pTCl+o*t&m)`IOC=8;>P3q$65.k(NA,48=(_U-8o$5Qo)"X'dq!"Q>A
%\R9MeP(p[YqBZ3^BP<j5$ZoBUKVPR9J[7fsISEgTTjpsC('e7t\N!hY63D)!V@Rq9YOC%Zg-7L2!i,uN>u1W>XkieV0Yg0U)Y/m2
%O:Om#`$$A'ZZj[7N*oC<cInQqfZ-@k$#nJL?H-53=&c_;`]\f7RlqPm<DHkKJFkbjh-]qr$Y/^X?(bmj,9F4](Mmk:I*>Z!kh3@C
%__?I@LB78V#h4\8=Q#s^rphgMHj(bt/Bu*SDRJ7p?Rbs>#$@>>iD)UJJ0cmRZY"a,@adM/")Pn#fuhiVh23VHR+>!?K)0:Akcht:
%lIZ.ok^JY;[dhLMSi<9rWfZ@7j>W]c]B;O(3`sPeWBqjo@*q;pQ[_t'QMkAJ;f,B>3L_rDQ]SC&C#*%RXBSSb"4+"G*I;JMm>UNS
%F*fXm[e(<W*:Xaj>d%IH?5BL\#upG9n3%`Cl?\WcF%FI%5WE:QnZ#J<-pZ5oGHPmRTPDFGB#t<U\KHi[Nb9*eb$m2Z_g)tnaq.GQ
%<Gr>&QrGeDlKSu6P;^c#P;][T<Q<D<*"&(SXL+BV%;D4/5T2e[rCX)m3&4ODH!EDFK@N+Al"-@4KbWGJY&*r`Pe<.p.UQ3nkDKud
%go#JaIBKspoKK[*G=:qe]3d6=f/B^p:,Z7a6t.Nk[p_q/P-iXaX2,Y6@TWV%kJ\S"34XaLJW%daXID\!p*OBISqmA5<`*.9`2d_r
%(r+"5TqJWIJ9_hD^<7,m)Fi-O<dQNA[2,-$jpK'q7pY/CbGt+$$R[B2R8%RFR,55MO<_5I!_oH&q.?J(;*D-Ahs#CMqdm)fY72?.
%5kD5I@/*QXE_FUZKmci2!.\VD@'C?MB[_:i$n%iJ-;-bMQR?7E_NrCVTX$)<&n/@="cU4'(u*>^Gfp/R@\AbG;G;5g8q8T#0TT%I
%$qs\nm_u\6[7QnEbU-TD'/NtK2">)H/tK"u`CS2AA[G,?!_YadB*[^eVF&u[E7CmH$<$DBQ3LqMHDM`I,(loR6-'iuWhk:*A?Hd*
%H8,3BRtdjbi69mGHH[p\/.B.Wm:?`kk%]),D,*a+*PF7%R_25r9Olaf>jC)Qmq^>p?n:?A03>`!JV6J,?b-eVo(D3.0oRsBF&IgW
%W)]:jPMOGd6?7b)i>?0".]be0.+b.G-eV&HmF[EK;S%gOfoj,'Q6j"Q]aZ4<3fH!j0NGeDqoe)"06Uc04>W4fdnFC'q>%+pY@kXu
%N4&#TH9R5fS8=&3"p,8n#X2Df1rJO=hp]Q0Z//_J:oiehdi<;[B'KEOaAc*)_/?$o8T^"t8l_(rZAQAqr2m4ILA;eAgiO%*_B7gF
%9R1>_29Cs6RocJA&nJ01XK-TRY,kilnF4bh&KlQ3?S`pOSHo8bC.a"4mhSdrn<Mkl9Ne^c[3_<I[=p-8WU[7Zlt"AF`8&DbFg=bS
%q')Q=IK:VE0'8:?.j(n!CEVcAlmm@lkFgINEF?6ll1%d%r:9$.Wg&MGl1TH!.WESnTu3TW5WU@/$USj2P3Dl+h>o_JCRM#9!qRWJ
%j9#:;*8u-LI,KCSMI4j0=6s)&X2SN"`@_YQY(2'_n[]!N[b"Sf49,EMrTa::+YpQCU%C74[3c=J!q!E5n`Wh?!P*(I)>Kre"j7\u
%PqK\=]n,R@?_"eY./8'T#+594</+k>o4qT*Vm9KO^:ZRkSb:k+H1?#4=8q9%.G`6\:(-*n5c8/._ZfU_D5$g8Hprg>?->G@_Y;1[
%WdWW%.k&<P[@7HT*Y)nHjIo_KT=YUtQ_D=27!rC&KaemGbY#PBkM#eV4A[fM^?'bF>g-XFf78gi[4\oJ_f5VIi+68eAP%e!ZGTDL
%mkZ]sJe&(U30smK;+fPIYg)+RiJ!TAp+Rd**YoEa/"9B9k%&[!27Xjn[UhP!fK;NpcI6[_CrcY0KJNk.%g?"7%9G,LLDo<B@CDs>
%$nC=ogY!X;21&Bf6F;0[m])g/Nlr^$8:tT(MZbh7>pQNip#8)%$XfJ]B.,sUHCp!$+^@/Y%[kc_L0'M[kOo"Un6N^ThVX)m^jL5>
%).ur_Z=3."V4VZE+MY%Y6]GJ-YA49#;YFLuNOWR$pA)G*#ob<20<qL9?sEpQDMuM=p!je'E%T&U>@4gI>e[uU&`RC."S7Td8F'J2
%beph1_kd+j%C7"^q(#*o(<Gh1_#fJ54HP`U,o#j?b\UI*Tr>/&1j&f-XfZaY%.VPnb*jm8Jf)&m(NTt'$d)K(%&dFl5&"%;JA"o>
%*im6bnBqRt[16X5;OV?cArY^NFH-rQ[8=hSc'B*V&.N!O^V_GL7qVJ%8;:f*M_m4_?)4XVo\rgQqd5jNZPE?'g;WMi)<$kem\8"-
%r[oZ`5MJTrFE\/#n#rjYh*YNc--MePW0Z<p/eY7b[h1">U@@<7Y,LsJ`V'ijJVldlIa8k2cqE%^TA'WX8&p>,WX6rHq?hY,CXKc[
%bLVI1l[.GK6JDp"?G:I^AUTVn=h$Dd:RQ--S(b*g?hqN.[`:[oAb-Q#^'``k,PDRSF)t%:ZlsC,2:cC!clcuPEf6Uko<Lo&QEi-i
%jgk`<lbEU8\N,+5"mjmJ.#WjXR+ra<CStg@9tUs4RZdTY%KO_rc$SX_JZ>kB\#PH?-eH,)6NlZBh?C*[*Y7`o?T)bUnZt"5bkF'f
%1nC(X%^e.V(b[,Uo2TH(pgT`s\BM>FZp^$@Dj]d\Qc9"#"Po_VCa'q=nI)dZ&jGGNauabu^G#q#X'rNPVupnr`<LS3GG$=7=\V)b
%g!o3N(<D.,F79)Po=>)nlc9,E[Qo@uU_D+#f3XPC]AsPC3P.*+6CHeIGUaI?Jl4D3eBDuU#r`#IZDRa(pdNf2RKhcp,o\F,LI%U1
%7Z_ma2tLqLb3qJg:",?a,7Jg%((k`hdG4!13DKC8NQQf&;/Y.c@S32<"NZ)6(a%A:;%!104F(QglkOrV=!["jqD(scYOrO'"ahm0
%&<e7<<6#^mHj%@0$1PnrDd<!JpmQ'Zd'IN*LLE/`#Qo6.&uZHG<X6d:]A:C,<e1co1"&T]J(#FM"`W)FF:m\VK(S&h2[1s7&)2VQ
%Y\;,C")#C@X&TI/]m:6!<j1q+bj%&>%9gHD&;!qK[6;Neq"k/S3jWlW\A.hA2pJ9*XTIj;BZqn/XTDE/7LWH(5,W,13G9/#AO+Y9
%eI.<PZlA0>W2j&1>.sbDJl])SC=)6'1(@F#a:Nr(0=$;)eI)o(WGu+5\B^d:XiB&&W7AC7@b>F#7M`EN(S$2]5!TQ]]jTUoYuP9J
%YmZ\p`;UY_MBaoh(!.!g=$P\hO20:e^4(C,$,6h[l@UD"h.+c$J)J#Ep5>d\G[':GjT1\?3(tP6=CQe6Q?_GSE\;_IN$KhhU>2XB
%1rN6"aWM4Olb(FjF7DVbV91)XEjrWL;8!:'1X2/s)P,qCdO`$#Q(n-d[SceX@KZ@T8P%Z9]0qtc,dSSF'F2Z1TLsafB.6fM^hQrZ
%_Fldp7hX1=U(Q651>cr#(T_q,!8L2MN3Tk=`>5%P+."d65QlaaQD%T'MP8=!ie?R&77BFu"V('r(f*pc%m@nhT6QGo,4$g81F'E]
%DDp+*CRr?In^,>fb)5$t\$=PU(,\E[:GUaN^>@%-:gIp<]p9K^bZmi?917$:XI"O.FJYN7d5-H?+p;)2HXb#L!gW_VfjDWtb5.or
%Sm.`OJ<`1G>!,sO]YUi%!ff84+t[K/lE>=&@'Ih=Nkt:%^f56QWg\G19`_Qo2e<%_.nVM%KmZKj5PE!,O/IGoX6\8bSO7"uEd:/e
%-Vmt_R-jJ6.pjoaL=O4Q8jNu(3'0oeR!goWSuF7DJ]2/"]%.K29L\%!@n^_s%7hbJ0O8=W"t%g<m9LPtlW'!O.Ysl["lV2M7PDtO
%c9LZ]6fHi$]ALHGs%uoqo.Vk!>6-9bpD<ZgM>7k\Og2ZLE4DU=p<ueP?tk[k,*L9%[-;p_buHS]7.Bh.n08b[[fBcjgPq-d)nop)
%Ep21&;u7tJrXQj=UFFRP3o5TQIpV<m_<Lm/)F;g0q8gd'QpJsTk$:?B%/6g^@0#U?XNPj,d)Gr&(ND[JWoAKo5ns''G>6kR"1*Ct
%W=V";YNJkXf/;LbJR;kL'gp[9,@"Ma>hhgqOt/m/OHl`T^ppUEKia`"/k"@\+V`+Qr<Pl$s2IL[O3O,t+8ZV'IIF:pqJfJXdROp<
%;*U3pMY[pG,(5iA-a*((U4/JD(\P\O\4$;"KO!";Mp4]h)`1DV_RB&GX2ZAn(Eu5'rAF!V7qQRP>gD"Tl@6V8St\D_CgNWP!5CMT
%!.8e/!VhdU%e(:4*!2a-3>WOb@=U"SGiL(#LMs`)+$+SeqI('jl\G!7:=c%$3S^m!Z<%joUQ.W,9'`1,-'<Bhj+AtR^np9@)IIfi
%CCj6rq[j<I>VLaFF/Yr5Ig#ISVC5)[!M!-4//chIHbf>(X7%GNV6mEN\2`W*>6t!AB]0`>=gQJn5(L*NEM\R6FuBnd#%<,+s$SnE
%<Gjr7!mr>Iq'ai,abqe\>'rLKK(06YG6D@Lr<W^K5Jk,_7nh7,b88I204#l*-a`$-q]b0DZ5rS2gPC[_YpXPmqYF<6MX--UMm)%A
%c>;d/EuJVeFO7/:9IQ_hdMB%U9U0F[ejWmG1jpi5VB\('C+E>]<87U,h(CEpgDiF<1!0Z+lRh%YeJNM:P9'%o5/;ZXM!o'E0R3XO
%=]usj9cpe#<#D/^OaIa%.`onM+qciU!+G=d)'I/Y,m/NKU[K:mn;n2qlta"V'mu=FPWN)ChHH%@NkhOGYf5i^F?eAk*a<Z9#<5s8
%Y>#r!Q@^!reS&KlV3ERY4X%i:?#U7F;NH&(gQRQ4[qi@//Q0W,QTfgX^\HIqBYN-I"n(*'R7+$tmt+bkl!t;*#$j_gL+."K#!Y1@
%gb]f30\VArC&&dn[Ydc_Cs8LLb7.8:7Hu26]NgpdL%+I=QKurcOLOQ1)J4m!lPmWUN2FrrC(7$G@p.UHBdWI%/9t+MQ0Q98mQ++*
%;C/]EBQ-Z*%jGt,=f)\n)5<W`>g5_=3-dFV0!D-8*fTWAp!9/ur!D(!NH6J5qGgpg7F"6!6\O[Rpu)C31f/@3k5F>kT+]T+Hte"H
%c%F@7E7tEHa&DT9FtgK(Z#S]0FdF=b_(3BgSfC33$kcHg0+$m_jT612AiD=1fQAVNKCBgb(iJ!/:7H$;n&1O8lfF[$GoD*FFXPLD
%&\G92/McWD*:E+@%!7-@Csi?FB75Gm]]!?a&YWjhXSF8lK#;Q2V=7_K:L1nVQAP!4=s(;>%8%sK+3Fk6'Y,t`oWibN%3H5"WVSuc
%)8WPc!dq,P)^dp5I*8ATd'67?%\n"-q]ikr8=W?NhMXa(!mWqj$iD0NQO*o7\SR+dZ5oUWXT`;5UteA(fT)6a1EC1PRSK!1m/[#'
%C'ln2qkSm]SfEiVm?=&GWb/tQD>OJ@*U&3X^AVeIp$K!p;;WEVD#3ib1qSH33^eCC,b"&R"*n20*p2H[\8MmlNr&GLa#t=#T64.W
%cSskL\$JulA[-HoE5\<Pf@,9M_1oQ)nBdGnDNCP$qKDY*[L4Eu%^U>a`Z=]Q)RUM`mR2P!18QIEbZ)u3<2ssDBF_O<jUPP54\b+"
%"cunfT4ule5JXM[!j4TYX'&H6?[W2PpXinQ]#UMLdQJ6%d^f[@\_]K2en+<[nY>I<PBMf>068#]mMP\'YGXF#.QAB6%;iLWM?+DH
%]UHc+\7T#Fkm1\i]-M+HJVA44Y'%c5-$o74]'o$3pg!,K.9E'oI$rP+GUjPacWYMo?+(lP40\!aO\G"7%0uhm.GY$%3Q__PStu;T
%B-Y5N<EZ9\8c7Bp?bU"@!,'AW:MUs.nGLT^okk*kh5XSNjn^TS80V)J4V?m4QfM$i/U5qN9jb-Zo!%7+C?"&M:os8FZcSY602NUT
%amtGebI5gj]!Du)(_p:rh:Ya3h;%?PinE:TC3B/MgoI-U:V&4ch,`KdP2$^aYlmU/>6G@KPS"N(72e.p$Tj][E!Zq!,\2!rd/9.A
%,M>f8haP*QC3hXYK*9hEcV&,j!k`ehN(rmlje-=&FC)"6#s%^X@I^u\ltK1%-@@&bS;:#L#9j%&'4)G&-`'MKZ9(u*Uj\S8co(d5
%!?SQ*7`nRe1KjY&\N-2jfceG!"^;Y1?6>jBicZkV^qq.$q!,)s1%!.(/iX=BTLDq,betQVlT#!spkhf"lCt7,3"c=$fC7B'[K4$O
%\W(<^#=.m"e6n@G%(;%L>F7uuecJ`Y+(F_3m'$]*`0"1j9Vau`T8=gLX\g@H7HMIUL`nm#g;6VS$.cnb\/7O@d3b,_^="$>8.r>d
%@do,rf<&S9G6$(Eb`CVP)6&ql:kj\Wo?[`?!A;WcH.N<kb()!o#`tod\L)l*WTH9qBMVDsmW0>_CEZ+$<_[8Yf2q1R[2?Th^2V!"
%I#/(P`9lLTnspF"l[(2,_R1Q)P_IrZEuXiK.oV8plh0u`6%m7:MeRD:5"ecnK2i^[Frr^P=TBM;V`;BkK,e(073`s@NFJ;o/8>5?
%jm<[1;htS_WYr/q('C6*072=U@*/Yko?8@!Qo`CoX2,nh0W^LhWt?R7CB5lh$ScrRp36;5qT(37-;Yk?cU<XnXA,Lm7HMIE#SB1=
%c7IZscE>+i>q@5=&:qLt?+7O14>"9+4$58AF90h%V)+CnK'R]HV2PeP-MR$s"L'@M@:99XaF9]J-mF2[^n1.:E4m:gU`D.)e=THR
%"L$kG_I_\ZApoMi5/cP"qWgd5N6E)`+N(T3!mQ,e3,sA9KmC3%A=,4.^L;;6UOU&o^3j=Af^fAg4hlm9-q0UH3=Gpl!23`1pC'5N
%iJ%iTeji"UJ/3I1(]OkbF]=$h3pM:&:,%,kQ%uVW;:-59@9Uc4i,FE3FY7ZW+\BUNoL5J1DC+JA=dW)VHI92'=)3cfQYQBZ>DN(U
%:"^ES)%(G&<#2IqBQW4Z6Cn<`##?i'$#h`mOL0V1_!RBE7.Ge.17nq,fD,EK>j$f6\^&R!'^NEG*g4oV?'XK#pRl>f7LB:ELl[ku
%6gqd6[ZVUDC(r[#GP^A8a!U>ZS_R([M,"^l:V%2f8+IJlH-I,1;ldQW6s9,=5j?f<'QRpj!GBLYNOfcbCRqC+)Q,"86>aM]1Lef-
%<=@7t@PY[;0AmY?9,fOfNb,ck.Emde27BeB'$U.F`='=M=^(s6-Wd*#I8;PY+Q-/`k&+5J3So0d>`2%k?ld7Gd3[EMAeY'I"J3*0
%4kZ+eaYH^6iL/'o@#RQbQAK!ZGG'/GM97I^pDLij\/"cT(cZ,Xa^_3S*bhBu\elFGU<k2iCK%bP9.WNB&I;>`;UohEW.s'"r!%%q
%gZ$DqNUrAbNBjNee(IA_>9Na2EOm&/&6]E6n0KIL%8t.[DW/ISM1i_0Z4ncQo!d,"Z>mhtlbbX4^P,WBggLX#4nNO&D%Y$0*lA*1
%?'Op!'?X3r[Wf]W)o[J)b\3:U0qW2rR-PB]B@A`crE,eiBS6i$_[dWi01uJVJJl%,05j),=J(3Y6cEr*;h'hg=_<q'RuY(n]OYd;
%![1@$Y0W`JL%So@]3o!urjAs6]OT:Tib[;WQB([mK[1ZcDsEchO&c<3=7MPpUm8EF)Sue;B7nYS@Ls&PcPCM\?9)<L_2I3&-I3fc
%2&Sb,p4'mEH(tTJ)/o[$$DI%pOhb/+("V[I"\U'=h`*I*H+r+:(B3LQK?P6E*J8K9oI]gQ&o0aM.O92rp`ageI-$i?QPXX]ogR<f
%CF0bV(5AZ]p33FtB(f8l]5_+^=C)<Pqg7DD1rj*:626FM5`i(I[Z"f(VcE!3W!cEZl#A1jS>QguW^DZiYA7CH[/en3ibN\m/2&d=
%.r8?Rn$O(3<J1]PG=3a20(RU7_40Tdduc3D&`p_6T"VW\iAAZ@pJK#'Rk0adXAGAj//-mGjTpGC4KYs'L?:$5+cnrH#!e$PD3Yf"
%OO!Wol6\3L/g6qJ$"g>tF2Q'mH!'XnC8Y#DG7XQGo5*!.FgplN\]/c0NhrnJ#"+84lW-l7d?UEL[u7V>j1)RU?Vb?!71Q.MUFk=P
%Q>&q7%Km89p=Mq0d%+W&BH0<5TW8I-=3HLHF:RiLAa77F./>QJc,4kkB#a^D9bVL^/m)b&`u$"kgZ:;nYD'2c4lNFGna9mMeee%=
%jj+BO;)[(?E+.b8]Ht/-?hZoadG9;ES?V"Rb`a>*(S&:&6)6AM#9hcO$hf7C8n*l\*t=CUlT+9=C8cuqF%Hh;d]U^_@s<BI4%!c,
%>+T+]>dj0jb#U36<AR>bQ5R1?)D!GuW7ls38'K&bLWmlNTdU/c@V-NlqKKFXL2!qETPt?N\lL?Fqe%:5GF%+H,1@I,h2S_nl1t#K
%alB+kT@ND&5+po3XKU"VIB&L2pt>"%%H')E(Tt)ECh&6G/Y(MQAJ%nMc!LjUo$.2<=Ntp1?&LCM[=#r:ca_qLqfO-2E2MQ@5P3JX
%;PqPFJGH_'_O9/ISfSCbD@q'MM1$8%ad%/)A:^>?#(-c]XeaakRGl_@a^iVR<iYu3K,Lq3:XFC?o"l#==H?f8YC=KI=3@8H84IQ(
%*Pn83_24'%?OVL#Cc:5bl=NVST&/fr#l7o.SB7"$T#i*2Bu;J-W11`R8,19jTFuoO7YE&%-Bb**='2Z"hT[UW:L%1sRQtr-T#oM&
%AoSa)+Nm9T#lk[t^dkDZbq73TTI[D6;(FMoGt^$EHYL0p_N3LkhLG(ETDZ<ns0D\$5CELcpYYo'n,E+<G67^%GQ7=4mg0'mkPqCM
%^N7#4K@8cG^[ls>XTNtNDa43Bc[P]O&)[E5^Nt8,rj;1\^]+$Ns7CNMs73)Fs5Ek4r:/\$re@XarVcVCroN%NrQUhGqmUK.qtVmd
%qXo.0r8Fj9r]OTb>Pn_`h4N^l^\V#Q^.<2B$3,Rr.\4Hd#50hVP<&l6iA/aAKe5I(#k4nPi+;?KC$+=BoH2Dorl;kSoe!)N^OQ,6
%s#%Lgp8@)7s)>,L*D,W/_.mE1WK-OUnk:Jn$VH3$4eYoX%n%rKUmKB`rEo10<$11g6+QI+Ttcr3&Jn_XNd/MT[0OqRbF.Q0fMRZf
%Sj?TqiP5Q/=c5GiRj\JLIr$_7XOXr-G(dY),!l!CSU*:'?*)5h_;A?kd-#b[JO9AR*0RCU;^b]\'[p8/WL@!<<Gp(\>U>065%jlF
%rVI97TYifRU6b07j73"d[kH)$rV69cG4jb%8KoT:@?&/np9]C#*"``bWfarMs8N?1LR)%YB1iO+PGF!%9C$@-gp>qCo7%-S1HBXn
%3eQCmffN.aPq\/r,;^kdH)>"87,]E`J>ad`e3*+g3)N_UGJbh^aGF?-(Xu^8f%]phmoc:\nLjeY(&g@oeR-#gp&F]_5Q:ZZIsV"F
%07NH_044_?lTb=+:VX`XpI<`iM[]:jc&nHh_aFf\joq)!\:DHB"Bj+_hnpsiUe1"r52+:]$%YhN$S+F0d\_;@!PQ[l,Z-]Id#J%X
%\K\IF(N/OpPEn`<M>_/\\ZjVT82']2MSQZlA[C[jHa@@^A_0=Ir&uk6d%3A[Hi3aQ]C[-elS[J;\=tpClDDP`R#I5p%7I\/rcGP"
%:t>3G\S?tY$?O3U<:+,hS.H"Ch7Og)=2!Imb&a@76`J+Dn<4qh`3+Uee";TWHUj$Lq>ZM[N/XG;KaR_iBSTPZIYb!nS>E5</^;[9
%eI"b\JLF`diIYuhr(*YD'*S7+N742bq'pt/(F=i"D]XId4p0382J[h3mn23m3r*`VP-VJKNYLJ_U^:-j:<%lj@jFB;4UC:if>&U\
%O21"nMc=^%=.``O=^)GS,Lm[l]X9&baBC)!%\.N5X\X$E`6pF4Os*ut!0^>6A!O;B"n1u.\IWaQ.>`ZZc=.ZkYYcA\No-C<#rQIS
%a=8Jt\_(*S7RAOiJT#O]-B;OaA6!DR(H_aFA.K@sn'Neo"JeXNaAkitQS[50T`Q4t/^a&AQR]<q\gAg/%HSl$;Xf>TN?mnjY^1?,
%9dG3t+$co[U"M_)dAd=/\d#&F4Uoo4q##_*o?b$ZmJT'=fiJ,AKb(>[:m()aQ)JZ3*r/\LF,A=uoXe#neFpZ3Pr1CM;H'(QiqF6d
%4+k^?K^Kk[6OZLo+=O2IMr+_5=_RSG:*:8Fi?C+0Pc"n0e[XjMbs+*[;B9#HigS.Rj6HBLY>Z\B_a8'30=5.Z[I24&Y.lme_BNc\
%KX%NEl+Er"@rfQ$f0;lS%,WS"`3ljiq:\cGP+`g;m_@?*mmQp8&h7Lj3,NE%h&Y+^Er\lfHZ]O96!:!S!>cR\ABI[4YF>nWF#=@W
%Meg>f]FDhkI/+^#6rG9?6jbIY!\.Ph"*:;"14?iT@]G21/(rQ58d"XdQ$I`7rHr5Vi/.%M*B#BJPp47gZ=ab,9XK?1YY$:2"UKHM
%.a7I)hB.P#oW7HCX[fNW^Pf%bU'Z`%rGGE@Z[GW@XZte=eDDsoDbJG..E;#fQF#Aq\eB`6+TF=`!;JQk]7'2?;?DO/V\Q@ZC#&nd
%l\2#(IXe`V+5cCFrko,bDqFcu%7/>!HP+b.:juQ@fiOs[5_S6IY>?T3'V8A?SqWj6I3iQ52aR&1^&7Y3Ie5#cT)'DGp[)!0+!%?&
%:!gQ=!7A,Pr50h23&6&=%=841jbt5Cl,\HtBg)g[PS/a;3AQ\!M>at7`TTiucuYQ#iu@a0V?rcD:JRTVpI.]2hX0M0Q8eP^kda,i
%Q!e[kip[C>9hN4XLMEe27+8K,[4)a_e1mA-(+`BcffK&'ArV;*TY-ffDAkQ,Q65RE,ST'%VkKVcg7jN90='ePPi+E$e66:Fj0_uL
%$,f9p$q[ShHU?#[PDZb2B.mKBR0p>G_up,fh%a2s7:8l1p8B\mee'cC=jgqTQ2<2DR(!F0qclQ7Tfa<_Z3j8m:gf@l5cei'.K:QT
%D/^gEi38r=2?\1K%Ke+)7teG$E^4&&[7X>h>(W)je`"3=X_?13Bu,A4*sgIIl-X4&bE4fmi?<f.%0B!,]mtn6,MFSfQ87;>F;o9U
%a"?YMDS+<jlSmh6K?M'%E@fd^?Nj5q+2dRMG.+e6aE:3t=+c!*SZBbYQ3Ec1N)I_U5O1Wg>,mEMS4O<Y&U?YeVtj^l*LD7NnR!]'
%=40_"M\8L6);U.lNF\DFX3M\B7\I]'U(>c+B4:.<(*4IT-*&j"`^sht((Qu=f9Qt,%%>@j![Jj9+]$YR'%uOp'&Ik'%ZOqY[!X1t
%\!cbq%ep4AGn?ZPI&X,10V#?CFIt1)KqsT\KX(,@5sg2UQ,K@H88MoD[7B&YoLn2*<1]PD]5!mPf,7@Wm\=6),ts5$U1[s3U'ZUA
%-%YEaKQjCE`jd9/H9c=q(.i=_F?OqDNcutH/ZrfIi=TuQ:cs\&#EJ9Vd3RlU'.5`NCeI*>`q`ec5gD"u.JZU0D_p:Q5D9*m*]^Bg
%fa]cZEXA*U"JB-Gmlip)9!]ICe+P9',1)lR2Dq%#MmVBD.0lN@b][@JOY[RJ/i\-d?<apj7s*MObU/O.p"YMbLa&"^/T;:IFNh1l
%K\uDA)$;bi=mjUf'DFD^eV5[jindLS'*pc6anW!K2_6ZWgnJaH<se"aiAo.lF"8.;fk67DeR0raPD!Sr<QO=)PZFIi\9+X$9YSj,
%`;p6o=.Dtl^/n0C\J.2na_?@poY`\[*!#)V3PDG6$S3qh2[6_=/e1-`ER1^g*@\a_2ZYS/FDk<h%:t@j,:*3Lo.%l`S(6ja([@.j
%&ouH_kFu_hRcS?!"h-Tq]t&B7Kro7j]s:TN<V>JuIrCD*2f#&#fBiD'iS"*0r?`72M>oYhrZD/i&9VkNn2AHuhl3`AeN;rQB8(q"
%]604-P=fcPpEXHfqmpI7d&a)=hq.i(]'f:RftJPW:]1\"^T8u@B3Qo2A66@Xe3s<fP/ft_rO`!_=<tV15N6mB/IiAajmW0<qu19D
%5JA4gTAQgNJ,ZeJQU`*MBT)[Z9r)9'2Fac@:/Op=h1QR2&:m,DH]IcW"Ibr>Ih"5dYnRNVs*U01-YGht!)b4I#[KuR[*+O:(@<Z[
%YSMEa?0n$a94U@M/<n,/Kc@KH6X)nfDMT*nUZu+(L2%p>Q[J3UoIe#tO"N\f;M\UbCSp+@P3_=N<EbZLg8cP.glU?\>4^%-:aH-A
%k,GN)Pt_!#OjpA8p6u\"G\3to5oc/C"Nku!c7-Q0JlBW_]>cbRa-Mdj`L>K2/JVK-Hn@f/LqOe[=)mis7,*E"#5Prr@N8aV*28='
%HihDM%e90+c2n%`QE"kokD>FoC_VC1BGq;N/,k_#OUpUkqD"^f\f#2hAKl_WJp$P/W$KY`,Kd^&)2Q6$U.[Zh-J!pd"8,Q6o[62$
%LZnHE"tS(u^IE7in3k..id]?K4PQB/"r3=OYG=jh#:*Tt@SG&en24'JKHjV"d?gkT1\2&Jm#ot!=kVA2fQ*EPjtH4uTuF-L<jumT
%F)be^"THJ?LbdVYCLL#\Q$"Zp9t=jB_=*)k1)'7_fLK&s+0Fn$q*r[\>;EiK^4+/OL9m?$pcO[K^Xk>k&,B!O03t!i]I6]i+9_:0
%?C19sb7$:UKnV417ReZG^LQk.g,CS-X=ESZ3T+W*;)PC5>oS^EVrMPc[OZ7KLo.eq^qKU7>V9Q"&m9t5r^+QHmK.*[6HVR8&>a?i
%IB##X]U$`+B^-SW2"K-iMbEBT^o16]Htt8mRSJ#BQs;7rq>B=.lWJ1;el0l(3P?&-3k=nq37o>Wk0MFOZr#E/=V.90R]W2[fT?Bn
%M/K*oPQQW7L&>)[\Ks8'9VJI_dT!C(b#jq>Gm?1ZMfO6<>uJZr6qaBfFX!SfE@,@6'rFlU7f&pkU_UTYCsSe"&1K;A4J1GE8ffm3
%('O1M_1K_Y^tcGte/Ar#E<7UDXt`B*#WsU>6i%nI&4Hn_KZe4]NWpop<SMbbXpo]lT$E.GNZ&)g!Hp)[7Qh=%j"*hJ!;2B9]1JWQ
%(07:!`-L]i@YG+!PVV`Y'5R@\I<b&1!@%*2)LE7&;maNPgdY\q`Q8'VG5j&W3Q%\"#]-#Q$fL[;B:A8j'n#&:YOP1MkK;Infs>(+
%PX1#NfT)?=\l@NR*.a!EAQDW^Jmq?/-ZIN!g(VLEoB6sja6AOm=(;<DYSn3\+T!n/l">:0Q=:BZQ"?>37OK_m8V?(H7^h#-Kat^C
%(VnuZ/I[UIWCZ8AKb%dYX96=+*fMI=hOFZ`l8pJ9WbEjR>)R^(8@[!$&4\pKNFB*]-h5IcdA0nB?\Et^ZT59bK2.3(o/J%m!>s;H
%jI2A)@O4a*$4F^/E`$PH"YXF&\1#=&i1,sJ0Fh$Eo3mXe(\X\4iS"-Xc:l,b:?7QXr;\:)SI.&c"RhGF\:q)S:k4cDR6]RA80=*h
%pD.<<UNQ[H.Y3QoXB6Y<G67([90eqD?..`s?-,U<8f#1UjE"rm(=!DH/DY>7D]U5!!N-JBZUpGb8gCf*0ek(Pl@+%XSN<tuT^1c)
%'Z4WpVC]Y;=tC=+R:_U<h_D`r\o@.rY3^GZ+D%hQ/EA6bQk?K=.(u\@lJOE.,l>th'+8)'5'_5&=99dP)/L[[i]C)`5IjBu&25_n
%&V,Fr*28h^M5s%i;+=M(mCPV]a.(;GGa8JRPmVZ^][ilj)Lr*DAY)%Ef-<j9_Y]+SF>*uX^EM`^j<*(.E1PMf2'A`=KL2n!T?HdV
%^Z=?PMDuC1q!V[ujV"BcX="u0H9IjPmf=o."diMr$GKfDXi0nP1O0]KR7Ab7)8dn^g2hB=ie&V,>DL3Y<3IO7+T&NY'dub:7E<,W
%LKREKcWO3PqOBtBFT!8ng"PVYY(*(__';(Sh?iYWd-'f<Z[Hc!]0Gi[k\h<q2c0_C#ELQ`&JWP%JcZR:5r=N'-+d/".#_@`"JnK)
%g[>qEMqk?862:E+me0,^^F.A!Q(Zpi0YVJ&#b85j^TdJ[UL.;uhdtTOctJrDs0ZjFQJC]r()="K>`CAt;Rl#dM@-rO,s]r_d]7>!
%EW4).NQl@Gnk<c(on"gCjL3nS_@!3L@]MVqRhel4R6s-Z^HRKTUkak,[4ud;Q"5)Y!]PS:mVi\8m.@nW\D89q:MdH.F!/^=C5_%N
%BH94l^Ep3j=e^M-7^s>81H?-0#g$O]aR%,9T_^7;bh&481>cOP"pl5_oC0'82(EsZI?m,Yec;^!n_d]:>_2+7a`nVLLgb.]:R'=t
%c0FI@cT1s7;iY1%9Z:$&RsbfDVDrp;[VObUHO#0eH9WS=WFiI@Z-4o9fjj5On3"[d!-a1Cj-s7(mY`*<pdK@V_-3P@^.8>XX2^En
%3`qLQ@+[)r,7,<?;jYUaBM-:d[8H#)SWs:b6#rY*FH#d%'QG!Vp)h"caKlG7gY7:BmfAiH1u^Vb^(LP>ia\FgEJ.)XkaD*-]dsgW
%Ddl_Kd?Qu`I$pa^#upBJ,gX1k^Wh>[ZKVd39=3bDHPh-'-D_;!Q056-ZmAj91(?qqL+lMDmso?M4Zn+#Q(o?Rr:g'_IC8eEHe#k1
%*hL&p`I7OHgGQ]`8l.K14:"Q.&4.M(70s)KU`U!J>n;OiNsN<@6.[VQQP4I(#eFo*o(V%Zo6;R[o\[^`D$[.VTYtH7=gL8t>0'br
%.5e,sC,1=.PT)E0jB9/__sbbq%?dm@FfD)(r%;%j>I!i"I'bgShj]]+%$siUfuNh]$&T?gOe?rJ&/:3<X??hm*s=/;&[XrXQ3T_!
%.m](,YWN1p07q4CK\uO5COG#oT]s0Z6%'Gc;.RBH\#?S#>Dk]2X[\q*b?hq")p*5\8rm1UHJG7Citdn$\#Ar/7A\$V.XgVeP^F#d
%Pnp.AB-uj7'h7nj.FO=kFR#8H"P"6^":`+aDk[,Q&JWP%K$sNi0Q0aZqaF?Mch722G)br0o?d<kU%=P):?S>2g@@,oCWkaaos3]$
%?c:];[jk`)N%Q1(hMat5CWjcebt!9#n)rF_^2J,9]CCCW>1ROa.+?-`%'Z[95mC084=:4^Wa6>?`8B&@g:g,Tp3eq(S&YueqeRqT
%p>jo@f>cX=pj;WlN:5L4e?#3.C6D8;<YN#44->iZJiRD#WFj^T"`LJUeL_\g:HVA+Q`E+$T2X:T^FLT/4;h-b8K.sFlX]TXmTdR7
%V%,\g+f]pQU`4t^Z#/XIp0"]RMM;]#U]V.DX]9jWe>!")??THU/@R*R6791eYu2/uQQYAEW$2/NBO'4'U!JN4c9"--_=E5OfiJ<+
%`@'l=XGCp,'IG7Z@SM38gT<:%&[0,.J>L7()5'+HMMT$FCS%u\/&K'Ib@.769`2Q<;RtN1BDnDcCO`MEO1/nPhh7Z^`kWWVEj./V
%g"S>B*8Mp#%9`=!4':Ut%T[k`K/NYB]nQ0LGQ`^Q83L$Ve&Can5M<L2RP&R]`@n32ekC4lWg31(eBGmjaWs*ZfL7UZ%49',m[M)J
%lAOllMjeiGLH6$7-%Zpc-sRW)c<iAq]u0/T(!X&l]VJ0j#MdA.12(fW;=;Ym\:Y=4\q:NKqKa%@eV^%fkN?E@^Om'!rM6h%]aIET
%g;/@hm_e$J2@CI=@*3<PGgO\\SMn)Fn@50L&u/:_\t9*tE"],&f`Zo$_Ii+:LnR_p%oKBuBqi[nG3P4+iA716.d3'lKqHS56fQ@[
%j<)%Ig=gq$Y5)u]]h4[O(a?Zio=M)-SZ9MaS,V)XWqfegFlaL7:AT<`p8Rf[\l<\9nt:Y6:<n>Bp[@3hRsPLS_!:#m^HQpMp7j;<
%mYfJeX*s^0b=m+eoND&H/](lN(s5:Jf\RH`([\u^A5ecs%NSVJE-$:nL.HDblSEoc.E[YJ;,UIlPOTg;ku6]r22%oL$A;QF(=oV7
%PS0%No/X-Y,!677'&o4o/81BnSl8duau9%F\3N16H.^.<ko/=t!?&^B#<jFK#^bfU`K3\@fS5X&9V%S$nkNi>BMGlh\bIm+:7ZC:
%HDMaW+-d0=>>(^gV(Ld\A$M;,86^1KbE>tb.W]^o/a?S.)<7/@]:ldkJQ!IDp@RQb0LVK4.;G8-JrK7'm&fT\C!ek3'gQoiLplY:
%%$E?kK3T[e9T\4b]Jb!]6d(t42\(XQlJf[p3,8bgd_u?M;UB"/-0m6E8\f>s!ZA=[2Ld`WXh.++PJcE7l-u"W+N;fCO\l@lUtCm=
%)-?8c\r*Ne:`XMT4fdnVkr4S`OfDdVpA@&?DJsN@b0BkYEq6:(l1=Rr&L2)<DdnlF^"UqJrLQ2+]8D@#n$d([hhIeCgeUZ5hJE'>
%js`XKCK*@F="=)OggD;;"'[Z@]WS;eFfHsf:kW"J2FH[.0-X-$5%hKA1:srUr-<ABFLA$$c8;M8I_g2/7I.AWi$oO'i9)bs,^DTR
%it"o.9>JFEVcX+UMMb>Y8#g"YeE.TR/=jM<"g>(#gol>2k:4;Lj>9Q3ZGX''`OCN+5W*$<I8]2u%>dc<jAMYa02H2bfnlW!q:^+0
%1;X7YX\=.12U<od5R!:DJtD;2KNgaG_ssNCBg,TNp9kY[l(c&M>/Q/X->po?.Hm+<AC-h:G&,h+MAQWYaG9m^!hAlp)11$9)Ye'9
%T<0D7n%s=#:oNh1Y"a`9_)"O.96bP[Z:"d:WB%]GGDT7\%I%Ilepk!5;\#BNDRE$61Da==JZBcG:raf(;tCHPMkiHa?9cVc-4iIa
%?*oD%/^B1[-l5XHMOUXYAMmZGoBOH.5\Z(4;A1[FM\e]KMS?3Lhf-f$9E?.'q"B/OjEQJWTt3Xg6;pj]ihImA`N:&'b*m9]5g1>c
%$)P"n$QKr%>XRJ9Mf]UIQkmg2SGK7'Hb[a=.--dCZV*:_8T(7S0K$ojm%r,>KMn[Ic*/m11aZ'AET7-]<>hEtf9P@;CDV"h`EBe/
%!%0]cI@m\ZaJ7*)2A!M4>L8/`8#07ADpAATGo+%]__0C":j4>&K#U\@`/TsB+Ji3(igJ9SD)t7[ko?Y$m5J9\Z$P+>GMr3;?n1/#
%nLrl&ns@=-+C2ln/i7JUO`B`mKTE"0HXfr%8qX(Y?):0!OL,tJ9ZJ\2+t[7%%1/8eOe;t'3'C]&mFiR\k/co>-rW@PYC1SsO3S3M
%Kfh*M)D(4d=EimCW6tsZY`\<g#c"3B4)+ef#CJ8BUpQsO<sfWGiQ5a*]Eh#6joZQ?O<T04Edo:)3[ii#)MEhfE0`]n$9p*,f+BWM
%VW!O<<C,0Z)^r,0?)%Z=:Y@Q0`N,XJ$U,$4l8[_._g>i<an$[e_[b((9"\*KbXGC^>e/t^4DLh?hpHhGFph([<<a)JFH]p<-dt*c
%Dt.rO.r^S"V3+7REsNVE>?:lC\D-=H['A^'f\(H]rS,QDkY4NGA^j*h_\hUL9-,$:b55+s;]VID\SE96Q08;%1C;kX.K^Mm4rif'
%o.^%2,$Ps;+OVnRA-?7K7r@<OSo_g\\0R1t@IQN./9<h;5ma=P'XA3#M_lim$PY9sUk=RL@GMYXSfdI'40E$Wi5_A,8KY!\PJ_T/
%AEK_A]d$9Ii'goNVGXlY4tDq(ppbms9:PYiQ[E[S5``B"HR!$!Mu'8KL@mB^!D"@pCj)iMF26)=q+fRf+g>\:!O*,XB5ZWHWTbl\
%82G>&ZfQF)i`r2Id$pbV_kBu(;Msg`U+ae[$@6PgAr.&I2E5j;=[qclkC+RO6!4chl-/<F6=2bIlVJsEHC*o^F`PrC5m7IV--ABn
%=2O;ZZ1l!?I$0['Mk=mkPUi3O[a9c%\rcP.b7u860-2mRA6/\[-Z$2F,(\)RMBd-N_,$RaW0(.fVgpa#,ULt"g2bgh;rYNI3)Tfc
%,W9&Cb>p27Rl;`s3SYXj'0:om``<#L-),0!#i.p9CUhD8%r,>TlT<3-JVh5YGSlpF/.R'-F;7TR-oPH_(,%4o1<VL82%$Op`1C1\
%"P'=+Oi!EdpXs'lB<FcrRmZ?&/3D-uNAW"`#cusPose0srP5WHEi'&VW&dRDPia'sF;c!o<Q(2u2">ls/^B;qA-3;FTbCM\0pKeL
%=i&HQ*$&kEFppCU$,.^L,n;YiGQW_o.P/M_<iJNJ.kRG[B7Z:kTjs$j&ElO7F[un)NV%aTb==9X=en7)+XG10YQh)Zr4<r%P"W2]
%q8:F%Q*mJC^pF_%K6*&0\KV$WqQ<DXBfFPDR?h3Ge=Uq4rGaUo9186Z=7Fb#1GfVn$7ht:ehJU*LHJe"]fab,R8T'!hpY?Np@WiZ
%e,J2G^[I6Wqr@S4pZ:f-s-Gs6ZTGl!oe4)['.;OaqsoNGs87Y%q>RjAs7=#*k+@.tp@Ss2rS=$KRjO8C=VA"k)qLZEj%HnVG"]B9
%G+5+^%4h@j^4l9]j[dj/dGK3QqX<P!g<]ToIf+V?]DDQ&P!t%o.ET0LZsaQQ(1pL)/5qR)--OeJ<lbo&cX`:6LF,p+@8.g*rHigu
%p>suB++@SSY5\HGA.a[bn<C(U`?;Qbgn^MOH4O#GKfkBi,B+9&_`>TABa>\`8W*;3\>FJUduiQTaUItDM.77B&<UYl'(M;tY>!Bp
%ZaE\/*5^k+HG=t3Rh*:Yr%G<CXM6-nK]T2P=!*ZIA_1P8;]LkL-sW.c1)qQd'k?Z2!(Te_fiZ`>!Kq?X'ISc=)qUg90PuB1(p@J2
%,4,c@)T9ZB]cD8$h9sS*AG/^4HQ>,5q=dPBYAj$-/A`Z_=&,?7#/]FDE6D5tP1u./o:8M@'j]:8A`7l39`id/ob?np=hDd'CC:kS
%e<#<d0TU7A_:ZinJE-3F>t\$+TaP(6'bAI,,[G/=6Ve`"o<75W(oOL2>8'NI@bgTOSu&:BTo`(h$M!ZIY?FohBKX;QV3./_)&_U^
%N0F?1"UPOGj*p[NAGM<mSA7>M(3u@>HM*#c+Gp]>p\$3kE&)Q6>`eK4Ya'@9;]-%XRRuuic=LaX.E35q+\7p=?"bc*1K^P-2893%
%eRA't4GbM@)B^Op5huLo:.<TW@g/f!LjLeO/B"A]jA68P1',gmM)/=FZ&sBlXq_<?Q^JCG%Seu8F#f^p$)AhVVZM%dDlAS8`6i#o
%H2-+)XT_iN08o)d\#i09.c`1f9B!EbJS*FN@DX9pKu'i5f7>-m''nO`_\u4e/Srm%EKl-lUa&.U8')AF:bnt]Wu"#o<!l/g.S.qi
%6%pkH+Ltq^Q8m]8=P6]BB-D,>1A/]9<+!Ei\N4qNCC5Fpgs^@u\6^c!G7I>h_H3uoB,^D]64>=@9D;;pfaoSkh_A!;$n5f'a;9bP
%@pIG#-QH0Z#$R4S/,^aWHBj%WnUdXt$_iY,98pBI;r[dkGF]'I>]Ikl#G+]r,JU<r=K4"f.,dMn9f5Go(7R#K_0_1U-"c1M<62LH
%f(l9^;Eo,]QR9nKhbQ$K:o2Dg#=S![E(.m%.6T9r9gp`(Wi$G7e@:=O*dS3#W_;PeC$cJiU_tQ7"%C]o8@_D#*(;N?<!\u)>S4@s
%B3OHVZ,NATZMj75P+X+H!L"Fo@1'fF=#l*iZIb8=QeK\h:674NkNmKHRZJB&opoI?Ro,O!-*hp&Q(B[K8+,fnEj#%U.0$hb'9Q=1
%i#&[:.GdGn6Ko;bH:jGAkBF#D-%8M+%^pHr;M=bqC:aN/]/%/Vq"I?pg;CjlV.4P8U^iSIQJe1k[FbU[C_=.uZA@L/#Y_3:P>ldg
%1rZ8Z6&@tS/1;3MW1Tn(Ip90HgcCq<W>eiJ-hsQYaUlnV9Z&Efi&#o5:pG@]c9n]s:7Y(YZDHc-dJIHK0h^(@k#nVqd7G\ldh(j+
%W;_?I398KsXOREUfbCi3"0gL)'^HD;`=k-T8<d_68V_9r:ML*VWk>?0IpQQ?.0E=kFafZ56$/"2:RZ!]9?P.;kCkXPjJjpNX"]d"
%Cj3ZHAeO058R&N`:Mh3jmI8W8GefPHQ$[\cZddbE1+a$=j9M3=.+#Rm@<a^^Xr&i&=f'#mh>P(/#Gm"TnAKOB"-14pmP"ms,>hl$
%-8@4I(BGm]nIJVROqoMK0B$sdQE;H.:k6ZiORZ<6NeDU:Rgg*@j36:Te2M!-"_BS\ECH<):/XL((7Is`c?[J9A'\ViY-J,#YT`f]
%&-%p#V=aYYQI%?3E@4Fn<!n=fa?7o0`*r_]/#jJ_X5Os9#HV-gA=KV<IZ]A-&`]sh@c]RT<;d"+BhEP:G%)e<Q;ja2isF%.QDSXo
%WXWtqPuNj\3iutt,a2`+K@6F@]+ejLEl9*j!En1=eriC,(>u="D$OCpN>,/JWVNdA9rf#f<1j".kuYF1K0stHpIeXA1tbO(Kl^ut
%.b'9D9s'*a?9n'6GPKsl(T40$j\a=<&!6',Iut7RcCPN9;_N:!SFNaLp7+fe8+"]5R)D+koHb2@"&7%c&AX[O8J4uP/=qup$:3+^
%^T8Ihl.8Jha/0sCEHD.*]'+1;4K+HSLJ`;7<jUpjUogA,ZG&<,W1@@W:lQmiCdfqlb6M/F`)Oo1qjEOSF@k89:OWnk=_$Uc1t;nd
%G^`^O^+nlo::`92'l<(J8:#4AS3!%`TScks:s'bS?KRr,o'H]ujC+l`,-HF*Cs_!08((NGU<<adaE>XK-neZIPXOHllE+`nX)g>X
%]#;MfX&.2rG?a1":?C`F7<%:W7XgKsE"u#n=i@,],b,$Q#gUeX5nP'b3K[#4<#:YF`)9u$.rphaH!u=a]/C:X!YjEFeE2?X'5aCZ
%&V^DRBHD$qmi3$-)_-u`AQa:=Z>X]!J0bAN^*?9A=\2/;qlX%F&Uoko2WC@HP%55!1'=b$Nc]eV7t>2I*!o6aFlSoG"LXnNgddUZ
%j%=u,DoJV&!O>hDjROMt),_Xf(S*2=(nC5'5:=FgON!g>.]M=BRPKoFf2jjhLgpoeY486Aa^!sH?r\`MCgs8&.,Co\"Vn^8?!Xo8
%-,CBjAqUX+'%9Zs=_=I?/pPQ_5FE+nG+0s'VE^I\UlO><^NcPFR?=4=NSqu@Xefur.CR99'Kq"GCDCP\>A57]lcVsKVk\'oeLs30
%o>N0n3l+BWL:'Q/cpa[NW+F(i#*>jRnJ@PCPJB>:8r]h%MlLb($5)bn#nJ"fFLW$)TaPQ%j9V*hWn_PLb<L$&krotj$^d#SQ=e\m
%_`F^2AEeqHnS\6"B$$"`WG4R0'R;F6hN?aa,I<!6c;[Z8g,>qg_K>N=3Z,E/isJ1#8WJTN:/c6b>$<rk=ejUfO5aj0DDK&BG0XKn
%pphpkP?Y:B&(Y;]lI9po,ADHs^AmD3LAR1Y#d-%R&!(I\aGeWFpVjkj+C1g#$p.M3f2ei/6(-')^.XXH]AS"5C6[:Mb?GI$%]TIE
%R2>[1TcEJ^Sb2EMp*g=oA0oKo-qRoeBtE$*m6sTePt%caa+P#,DHY5ak+QZhf,$qS&g]-6@i="ncB/"1F\\NBG`b"[HOq2hFO?:I
%i2TA,TI3c"b$j%(bL'Q>dR4nH^2oG<NkObie..RVbQ+L/S_7HQ6."_:41dc"n)4n_f/;)(S:6LXo`3Ko_=A;g]>F/dO[>2?&gk>O
%+GUtb+8L8LC_?Fl_8U@m\SSam8;\+RX,6cY0k6GHO>>X9I?CZLgi28b)`LG;HYtg4&dR$[+[LslU.!*r.LN2]Ln"lZ7^?!ZCKV=L
%!,Rb"oS]`qmlQ>,eP.07ZONLIl#WjtEi#G!1$"spoL6@`YkGpCn(<Osr=e+bW7me`N[FET6s2sH'[dLl.DR@N8r20)hZCZCAQHU4
%L?,uj^J_<[+OVBH`GOC"7=E7+78UKbc9ak-*#$IT%u'/s7^Et;?q4(Z@4f^Y^*Cot;R5:mmf#uRE^`m1-^g($,RH%@<h22"`mD+%
%I]`kja9AT=9"%/bMS4%>IrYVI!f@g!hqbA1Sm"NnYaY^SUCUGLS^+Q9!L<l[(nOp+SopcaF6qX&J_L8m_mYB@;=O=kD368Y@G_7?
%/HY7aA@3XW./$j4HFTK7lrO!bl<UfXU0[^m,SOId3<*PR+:02d7I`CV@(IU40YL`IX_BF;Md'+X-$-LpKo<-Z2SlBA>c/+8Jh9!<
%OoPVJYT1';Y5P>ds5@(1LXZ'[)B*S+5K#oEO];3Xi5BqE5nB3e2?GJ=7[Xs!ZkC+d<:OXfH$F)s0+rCteb$aMgWBZAQ!I99A"BXR
%.3T3s;dLc="\n7tG"j[A/V6?=;+0'f*-qJK8I+pSTK2S[mj[Lo[\#DRU\,a4a-H>F0*WiJ)Cu#*EunWn/uu&HJ6\&43B6%8Z+I0#
%0Q_>`&ggqV'_XtupeCL_A0OI="jW?$o'4jG7?Ot^$K7M7%)pCXlM&DIRH>StD7m=V,#;W>Mj?7_2G,Y]/AsVeJXD8_Gnj@'$Y#70
%TO-!qf"5N7s&!el%+,Ro1$_S4n;\h,4c?mu+TA"WW;olI*jN,FjqUm?<n!Vq\u,M\lD+aS0KQ%'W7q^q8G7dqJs<6+Z5&Q17J3_&
%THnY1J5c/O9!aaBSM05-W+$A#?4p9H:8CrqABNarWK6T^RK[0b)$O8ca[6$O_Arh4M/1jB^BT5<fGC6T.,G5be4q-S3/ifYcp,1m
%IcLVY;A+VpHf,&"<H(Q`(i[Uu:.9QF@ri9.BE2!jlN')DSA'g:'&Ng__*aF%<UhsDNau@S0#kM_[5!bCl"Yg#YYV*pqm@/o`qT+o
%dVSq.AbjF4n9F(cP*bD"&-=oBbhTP(g3)2'o$DopWQB3Qk6ui(!`S"A]Ks#@b*#Z4Z8`FDCEi0RK?DVe*)9\`R<r)b$^?#bq_su4
%CpO9aP@autU2tIE0JWe&-&SJC3R4np*K1+,U+(bcgs+KU2!&1dAKa_TPCk1C!rj:q(HHZ@/Bs2K"bi$bSqr8Z-K-R]ZS3W2;p>d<
%`(<7_C,@qU!U;IHLSC8m8P'pNZ+;3.SgpFPb*Rnk4<1t+p9:>QG<#1O84+]Z^'H$!SI*E:\2=F=MHK=hHm/<pR;,?#^K%1!eP/&a
%)Hp:X2CQl@dA!3`(`8A;VA0]9&Q,o'QT7_;=AC=<"$,Ijj-!>K5e6!@]PfeVY?Oc\40csXnn`>=<lLoV.Im.o3imal;aM"XFo7D$
%&;Kj%Vgt?\aXLbtcPf;bQR1Qf30<.&aKgSt0D,rK!,(#H:ZD)&q676p\.>sDMRq"DT=B8fahKf\Y;?-l'3+tji60f,M@t$1,uV>,
%8#I&DmTLI$Vu&LPr`q"]1sR^r=LL%hm$X=W!OHJRj71pbqqRu(0r.B^4OkdB`m%$fp$l;Hqp]-k-dAJ^G'g*Y8C8Ri5_I:$5Hjk]
%O!g61:)l+Op7[mGL1i8.jq9;Q[J6p@n@_eCM4%./Z@ME=qsbHUQ[j#O^7:hM&f]6qF-!@bIC=ZEH+&7lpj7>Ea7kS=`Zb!a:!Tk.
%Xr8j`6![A7&8C\qaMIonLELP>Q@Z2m6%H."['[tJ.NYIL6l7$M(K651e,,Wm4dNkfhDj"%*disJ>!]4/`][Go3$8QRs$[)#(IAM4
%^tt:u(:&B4=#+VhEDN6B]o[0/Jk4AgI2.2H\I.s]>Y;;9nZRiG1Jg:oFUkKJc2a(BSU*1A$T,`AB=CcK<S`IE]hH^&<]MXo(Cf'k
%ORV^+iZm1:L%pJUGTf912*N45hB*E'9K-E?m,Ap?iU"Mg?e_+%cfp\]C15W9`ZZWW&-!"2CUSaOb:O0ojq_u<^1;VR]=-3DC6\*q
%Mb;n9Wlr7Ma=5&GIRO&o5GgS+Rb08.<,*->!jH35A(XQGXn$=PVk+u1EfB=0,Hb[D!,efB7.[W[@(&T86U\hZQ]:*&Q5]\q6oR3R
%jP"pP?T`ZZfeT,ih-SG%pZ1$('7NaU%HI=T"RT9hNLdL`$0pfI:'=R@2C0b94$i[Chur`12gVWM>(:ua^$0Vt^B-#lFgoE;rk15Y
%re00Qd6Hi>^(EY"G*knKAC']gM^Um$KT?9Y8BrO35$?\lQ:*9ZPQ+r^dAX/;q,MS]fgZ97mrNT+\(B@4^"2WNK\o^X_t^snJLlu5
%(4rQ^V$W0G8LU,[47ZaLT^"7MKp5[L1P5JlQfPGO8aZ,MjMmW=+irZ-iHKYHm,+">lVI:=-Y2r@I2dc9:o+LQ<iVj^_Wm,P--6k#
%\i/*p>SccqT\[j)&3PlMp]fQ*&Wai/[Rc7@Z4sXt*%WmBY6fZ56t2tE&k@5C*EYa'2&'rr4#/@KEKs-4E6L7D-HNV(<G3%Y.7A2e
%.6r`a$o/<5oO)qM7E)9=J6A@>26G.i%bu\5E$0gJG/iDCTBtQfiAId7[EMk#W#,g=D'l`ahHQKtV()6j0ZCs7S92mlr40c!O?gL`
%/og&PZUBo]#GmMsp[_KG2>aaO,:@iIC3K=k;6;kP/>*:q!>79lY/&19:P\7,*4ZuR$$?[uUZ,j@(giP:TYKfU?ND5@>\YU6Z4W9s
%"&B9/JM2"XeS])7_O>Y<D[l5rA:,Qr\!^u5$'oG^Y;51X6fo*hb2g;)AI8TX'"r](CE7"u;=#J^8j+d\EN8DI/qtX'U(X<$XWb#O
%`I*7C-1&]+dOfM/qG(;]\9_+T2*:WaYngja8Rt=7C0?Hp,(Z<)>PGoU7am(oQQb7TV>>Pt7r\,qb;bqF0;RF_V&D<6%-GGcmZZ)V
%BHuiJTZ+gMqIld[\qj)s!t)%VP/A,B$EJlE/Ic%(V':bqL]YQ]jI=0O3frDQb3AkEK+rAEp6$/V6-ECf)Hp5I"Vi>I'M9iQpc341
%l55(2e+C8p&td=c)'ETd71D>2faGPC0"bt?>M=UrSe'[[/_f);GR8lYb>(WtZ@OblIM!4Pnh'XtHC@eLF,Q"H(?h?+JWPeOrZ.+d
%Eg+B)_K:QA:qQgp,c0Fo0sRc>j-3l#%#U5.J__,tjGQCV8U7Yp,onng<@g]M=*TBq<.$tCM`?N[1B]*u@m#9Y;-MmRPamO&LoBul
%2>M"a7RBX)Z:i14F".'`cYVSMJf0\AWM>mHP_;Zq0#rZXddu@[WD;3WZX'3[_isW'&"_k,iU--@>;tb-FrG,'ZZZ#kN0[X1c%"'c
%:'Wq-.Dn\!%Fl5Z]teta=&\5F<)RD8&;(n1ocBe&8_@9]PskT?iTWe=FP?@RK<qtC[gA=&>'I#_`=I#?.sCAE5W45@.d%bcf$")/
%Iuf]*lS#]jDfNk\[#[;f>JT+[ogt=0q=!0-W[QHUk[NG[LA@&]M2IHTmjG.J?R-CW)q$uLITa?Eph>0GA.;,eVB95&Dp*=CM(,mr
%9I?@A/U\,4G^Wn]LKL-Z=\>XGrFE;=oiZ>Mn'ld[$p6K%4a_)4<1Srohs9=se_:&In'fmhI?1#.?;>;IY,CtVnLuk)86Naqq4[W_
%?1.FI=_fD-1XY>J4<*ZSHUQURqes?^[q)%"S.73fCsT`sP8!l\jRXomOpjUI[7$<C2beV#ccSF]HO'_^mn(a_m_q%Qo_84WIC8eE
%HSJ=[QBcMSAK=?jI;62EjLNsR69fe_B:"(%EHIsCpjKIA"'quDRm-j:]mX+gA@miXqZ-U+ojV;Ai,j(U4O.b:J,f`u8Fdf=4,u,4
%Bi!Zt"S;)gaR:?"XkIs\)!uY7-?i$SU*tkoGR7a(7@l%.H[OcDFc&)dA]W9V_n0j[8(cDsYa7s<f[k-/:Y0mPMa,=>5I,Ou[$Nja
%`gBM5N:CGu(sbcA:[!=#"("BVnKcQ6T+WlUPNX<b6ndXIHDtP,K`1el&a8+"m,Qpue+mhOs4B)H0J1K+H#2^rfVcEp5M%Pa#etas
%Y(^$'%,<i%i@r:,fB/2o]NFC&dA:n?EO-C$aY5bom?MS?J*(@D%V)h^AnX?GDZ/,?pZcTXH[?Y!2SXI+dQ'!]Ig]e<=<+3VZ/0Vg
%OY'G.D%+4t-:kZD7Te98jHQnJ.uJ5@3UKVg%>'[Ng=?T#Q`M16i3BFHq$mi<4q>Fn:;T2UeK4<ms,GRb"qtSe?,fKUY.l'gI_@su
%9lq8%4]cFFl^N$4<du;pqY)Jf%f/4d`9(Cq]&#)>2XQn13R$7%i(7q)@?,R#:Zc`f`P7*=J#S(A9]=dJnl!V@9"GVQc't\A`ICkX
%i[N<=/'3-tjo(V,l!514;OCSKL/b@fZ\OM>.N=7@+n=h97Wi35ckZNL,ZYr'OCSt\->^c_3JjgB*LfG_0SDjb3+EdQOosQf8GKBK
%/Od_7XImEY3ZKdcV;TWjg?D)i^W\a-a(49m?9=25W(=lQY%2*u_[G.@a3NTnH/Z(]g4[T16s^91&oKjG1'q=0pp.b4Y->$=8\Sl[
%=)p[j7IRmmAFW)m%!<b2-1f<;@3m:u]$2-D3S\b),EYC/jfqa)!Ip6>Cm5>YpS=0dD(T=&@M?59FG=SIl!=$H=f62Ql@_0[,iRUt
%^*e86/%P,j?@4'*DnfV+,r]@?l`fhLbui+Wo0%@C3T.T+I8@<4pq#ocaeiPu\O[E99NQQ\FT0Ib,@5eH:J-kQ-)q%p>o;=[bo*[,
%hbe7JP@AaA7Ir[Q,CN@*4k+mUp@PZ-:Tgq(AG,?AfBKjif@a:#4k\FQ\es^#g.IZt'uS[Un&`$,8I<2k8o>oC^*eo'Mq7o?A(.'\
%Y.7/h!UPkpaH>JP,=b*a'd^hF&4@de[2^_hKefOC'+I15M+*&4pWj;6A]L^hdAn+=pCB'9EZZ@Y33tg<iTWU3d;d]`?&l#7&A?;9
%Gg?i\1Y@$()4ksGpgL]fJ!h0.l_Vk=^,SE"P!K&eGI>K;MNZbQHrZBP,eQ``#4`4`kj)0:+G^(K:1afn*V,j&]V2u.nJI44Ro];$
%kGNTnrh.3rdXA@LeDsN@X.,fSR+&OqZ9OoAA/X.0Pb>o+I48eS$h'$TKHkEp>hb9I_++\l9,,++[EHsl8bKc?K@rK&Qcu19Yc/2^
%WOk.SO==?f7P^Hc#33/`k.m\*LP*Y4O0GShKY>O^JiR/Jf?-^7Le2;oE&]8]_7U=0O.E(.b,I"]U/8uEX)bB)DE6YSP;6U<^<X$]
%gK=B@(]62\T!7._I9;hTK5J$>b@m+$hq)[b.$GSFMHq8NRh_)pRm>r&4W>DFnZUfMBAd*dLO2e:p,l`C?,ZQXDOb+;4)_]4A,DUG
%gUD:_1t*8fqY;)T/NM5'YhBGf@#:nqFHD3MobuV6&M:IWR='mYMXnGU94"<#5`1mJ^Q%Kqm%$0l>K<O8O22:>!?^%@o!`;,g?42?
%#fG+(<u*VF&[aY&^.1[qj/#@m-&b^([l-(JW"SH&K.YQ]_.KK+g=OBrJ*$F5+]NnGHH\O@=RdBM3m<GTQai7>\Y03i@.Zgk7T3]W
%B/s[<UMMQcRNruV)%a+GPGVp<8B<1Kp,jpUPA6Froc4?I<+d8)II2)t??g@lo1E=AXl-%pCN"KkaMA;D?uB+'K:h32\)HV@,K+6i
%)?[DS'+SX60mG\(XT$(]XR@lbK9(eUqP47`^Bfg)OQ6;uJfK#sYSX@rgIHs7^;`="cuXgf<qpUfb?3a:,0^MLiI2`hphDAOER=]%
%NrU@O18SSdij0q0l98'fAcXA9McZXZMSlC=_.D),5gf&`L5G-YkYl;OgK/)pgdXd1U(grlpD@brDLJtlX4g(u8+t^l55),)7(ITj
%j1*mR&S=p5noZ)5;S9:jdUC=?UgP5"`Y6LC4N'eiWJ!IJcVtCc0K7fO_VuJf[^J)5\QF7mhU\Tbqtef^Nd^4lkI.K^k$3(U]_N&_
%k.!R?PXUr@_K,:7@j5&FHFo@mf.a[G1-(%mGAj[:fEuZr354kEpi7)#Hf3I^^3qZl`j<,rO(3Y-3VT;>4iZ3n@Bf!B",b6uQB9D;
%1<X]NB3j]2CM.'?hYpRUh!B#D^d?B"c:7VXb\)D[TAMFP&0&sP?M0gG^GcaHqIQ?'[9ueB4Q:Ccd`[9b5H@SQ;L#JREqiC[H7k$J
%T1s;e(GLQ,+=Wo\&bb[iG`HETh]Bi9hF#XH:(C"k2SjDH,aFQ<;E6`aSPT#Nqs`87%jn`W*1H$3U%rdb0\F-1G`?@m(1b(I6b+L@
%34F8B03^Vo[Dh<GbE(DDmpBr-^2Ngrg[b;cbP/E`qeaN;gQnI=Cj@&i2S]!,W"IN=a9]@sQk#2t3,]ctDB.BFim>D\BYSP#J*#%k
%33qF$FPJitI_h]pms$WS90ESriDW4m&l4+FGYWdn:U%d$!*adrOS*Mp/bLCQ(*A=hh`/@*G!rn.R&rNk>Mi-$]IooH2#A8Z;GQDO
%jN1h)9M+Cn5r^MPk<+B<rcVO=\XdAVmcPITa0!*rqqeiBVk9=(2SVIOcp.9$!Q&e&0>d^;5sI$$AjVjFh;R??D_4749dZp2O+5QL
%\?B+KL)r%)r\p$hZN#YN1tAB%Dj`kJi+]k"G)!]#.IKp?'se)##3A!]cGqi4Il0R[Y;%K*eOdueh\Xf%VSqAb&nkoM$i3_#aq/&l
%K-A1Zj!EXg'iPsm%j0"KI/d"NYH6FO"o0rCHA/Y1L1<M6B]SU,Sam=m&OW@S8meg(AnTP*Z3Ao7Qa1pm\<kb#mLJcRA*_+)]&c-)
%?eK-=q2q.Mg9U-Y'gZo*MIALt3#s2XNWH8Bp4;sL-%Ol3o]1KD\+\k5s1!K,[E&'npcj84=*Pbt?DONgDSS.Meob[Z>\W$%Uu?d5
%B=#Jf[^d4pc0i$LfABg4Y_0(HF'f@mY4VIeH+!K)fP*k.`cJMR;f%r\H`fO:Y[eM1bU^It:^MENEd.&DYW8$_:Ateof^JgA5ID`h
%pC[h$k3c:cs#t>fL\Li-RhFV.DX\S%l4;o^o6[NWjod9t,cJ`"DZ_?Q">)`!r+-CXEa`_UVpFAr4k<NgKIQo6hqE;Cs20PqNM*-*
%`n*t;DY&4=l+NSi?,7-j:rqgM6Tte`GS-1E'4gFT]GD'0Y$_h?^"qDOPG!FB5maabeWZZ\r8'cee2'=Fj9MZ^78S9Ed[Mk9[K_A:
%]j1X3/T7k1ftBUuN3_nlbGS[,/Y?oN7bWk:I'<D@T,YG_\,+#;fDOLCTd+N.I/,>L@FL:-+Oe83R@nIQ'#=,a_#@`I[r7>0s(5mf
%lB_SFjKXTJ6AarkOs[L%#=aj`pUN/n6t#I$]GoF"q2<6N1;`?+-_<-KgZu2sFNWgq[Wt\A?p6("pYq0eJre>/MQmMo+DnMAM/;BO
%ao\Md->8&RbC.ZnFtuZ!(=jSEVceFc+qlaYna6aGne0;F6R./k4M*Mr%517aQBkTOV.Cr\94BU+@j808IkNMAbcFPS3QF;`P<"0e
%iL8uHr)d`L=mPdGK*Ef(TPW+D0>TGGm36H!>.E6eD!12p4hfSWG]&pa<cf2$P_U[o8mqV$*O,h''gObUCF`hCD;G&P+E[Wi*lj2R
%Pml>Pm.#G(cK^IpKng7XFsS!lj5'R\q/#Z[T@spR8!`F0#4"t?%mn:CpuMgiG=USipR$DtH<uVIh:2"M.C]!*UN$1?]*0&%ZS0Z0
%l#1duqhen2<6_;r`r\&243%ugXaN:O!][f!%q0t1gA9!8qk!Zg-&9aQaE^<N)<L4GYkpB\?LoJUBU@'@DR=nWi/88GQqG\GK5\#7
%.9?9\)bg_uEgrG2<c#RS8F>fT]TiK9AkS(1.'kGUUuJ`94$?WncS#;-hF%:kR(YGoRu$(-:A\_iD7&soS#sBL2ENc=,Gq"iP#F(,
%jM."&JiuSHM1juBA9At[`lNJhHGuWP0bf'/oEt\2eM(ZZF@3NiWt\F='DCs4=[1>F2:(B-fnbYd.pH^+:bQ"6+VYh/$4:!pd>Ko/
%b7BHe-.q<^4%DAKAueG'Jpt<Z1GM\+$Edn+k&MUg[inJ8R,iBeA;eFFqHDB;85aeYA$R5nFJ%nBk%Q#d.kihQ*T>Cn!M#G4Zu^K4
%g8ho$"RZZ&1mI.J4aF`('D>LL_Y"9G#E3'h]/-G(p3tpiM396Wr=Sbl&bbb]m:Erbr8.)*`",nKN-pl7XE0n5*bRd,<O&].EkpuU
%*UnAdhqIC[Re:T;U;::)UdYjn]t.3[r=N@SYj!.RhHo)-fDOLDTp+K;))[oa8^El8;QFfQTO_gXVXW54)L'8Nrs1:Fa=fGG<,Jg9
%M0Xocf.-b_hV(Kg+(G>a$nQpqJRn("mGCQc1`6^3H<B4V3/(RdFaXca7aYrAggI&9efSS;B`B.N^u3bsBHJ)Wl;dK`QVDQ"S$:WP
%!#N*T&9e#$lVCD/q=b6`"2j"tnTR]\ZF)(Hp&VtRm/o0"`jbf^pt,H#9@-RD#V+Ge&ZD3&orJT,LQeBVIR2=C[g=hIdnYG+#e8TP
%T]%/pB;I;lHpLSfJ'IG1%[q!tViI-I1WX[V]P7eQ:5*o3V/mO@7hf@_&Iimog9!Teq>>Th&Ucd=T<sUAo)!n$S-GIC8@U7hp8QO/
%rTS^<q&f$le[.Z>9&ndhR(u7WmqR9)hQJ04E1AiGGe0M*GX>`Kg#1fS2NQ>,@"1GoqNKCH^W4gCHhP4PZTV`HJ,nr6NPRfmXZmj+
%2S]"AeNUhG6I=_3F_`oTS8SN>-UI^<f_`j5RikLrSH*pIE4%&Z_b!ZhD%&%(&6-]bc0p(YNPB1r@r8U<CP">-6Y*`FLR3V6k?##O
%g,$SPr<I@S@^.H\]/hZ_m/aEi$2aJ+p,]p)r5WO1Gk92&#Qb+N,gdH3b15GC((?QB7q__1J(K-VnOrn/^U<O>rql*[>PmnL`rGS[
%F3?5MC9A]TOSN/^Us*`e+O`!kFfsYc50oe54f"n?kLRZs<-41XqR9'kTA-2+^UVcJhDN(BSm0b#=mDtSeT*-FFCK5C1;`Hj7X/2A
%jh(l#IhHk<(nSM3@eea(XnfrHV;pCopW!U:A"p`M?M(ob]=E_-cs\6LqTomAdYNq"hasXS/LdR)5J!-:WWkTeI7pCI2@.OLHm,O;
%JX*&!;(L0GiT9+RM>H[_HG&nB'uZo/)J%ulQ84V4>/a-`!@?;D.gt4ao;u5F-WT90curJh;id6T=fRG46.F5q6DiXsMAs.$UtTrJ
%#8EOLbTV?TKJeg]?W<=gAZXaj>ZN#DK8Ee2@hL*L6fc!kIq`Zjlca3_&?CQL;oTheQWU>d\QL4G03/lH5&DR;5<,INF'J=_o[+'Z
%&Qjf*#3u'dQ)&==,`9e_Cl(dnG59EkgP0RVnfr8r/f<bPkI0f+_!9_+P#._(;LdTsgg0jrD"8Y+C>oe5+0Y#UQH.DKm.9+Qg)dIT
%JHZ:qfdl!8)W3$ZTN8J'<=GFQXK^^Ai3LOa-s0]'Y)ejK1Or4tL\EIRGK]rJkSYZq-%#3,@M1HiGHJ/#e[5Vl'?Qu5.s":+[3c2T
%$hWDBWRlu;qiuqpk6BU:XQ5/R5?Kh]DQl%s5SHRhjY[\-@<[arW8r[F3&;/T42PC;,PLh6bJUUb]F)e!N:6R0-%@"Sr<<3Bg4t)C
%cOD2."u7\Wota!V4AN0c-Z17.,g7`dBVL2/ec%3(6u?V'Z6V&V'V0B'Q>2F'=n:PJD5)iKQ9U>L($t&([=4k&R?=coFhtJGB2+u>
%];ADa0lgeOmgr]-*4>Cn>GN03WK,E3Eq_&[NS.H$eF?r7&[NXg1pn)d7^ZI&PLB:W5M;-&dFj02EJn,bNEt\+?07,0kDamkHY%-]
%T<C("FZIUY,NK^TV6JT?*a'h>nh"rh_^ne"olWcd>"uf"K,uI>d6obf)0=Gn95:>W*:$r0<6OkK5C=%h.^TPjY<;7kAVHD(M/pbJ
%O[?c6_<ZE\LJ`Hdl?R==]st8m90o!4P`)_V,4F:;:L*43aBG0$I-XQs5Pnb*jFsn"2O*R@[BJFO^5(*>Fk6?q\]<>UiA2Lt$3TDI
%e(NSg9H-W2[!6Jmdq\2EBt;Xj4cA."Z`d;D*a1uJg$5DdR5VDZmsY.60?=g[[ID!["arlWPZ?75n/\L+HI8`-o),%,Z?+oGF)gKa
%9"K@<B!`3B-To/QY'8qbN#h:QY$RQ,bt[I^Y9-MX0?$[Z5CP)#]J"^$aR/jd=rr`.@V(G>1ZWONRFg4h(`o=d5td3Z>=gu2mck:/
%hN?P@G-m<4/&t$Pp8P_\_g@cTF\9ZT#1D4gUm4dq:I4Ce_IbMM/E]F0EoobmjoMTh;O[t+>+_Y!0mDSCe7=fXFSS7\_\A:^*i@#\
%?4$5@+%t5/jrIs9H,oQg$!Os*SpA1(irK*cDXEAVO7/@#\Q9Gp[!i=>)r]Y6XIE]5AK]f(%`Zp''40,e>cm/A/)bpEgtVOC@.7@/
%Yr&'M37e%&N7LO9(?K5G@8LhT;c!])&rRF\`"kEVloO+q^U;[ob5+oO(tIU.YE%T\r;AVP,CC9YfZ(8*cWbAu!T#G.-7MuZgCc!r
%4R`n3'5]67^-X6]e++d4KQDR4,4eB_H`Lh/h&mH<W^QeRSb.Vp<LoGOraKT,eN6q1;i3Eo^<5(%aUY+G]%1W=;CN?M7Vs5ujZkIc
%CBrf2;l-G>#DW;o<^Fc>#+nO\N2WQ#_mLm5`UhmB<U0!dM,G>F-mL#R#hMPKX\ib!)Q8("*#TCM`="o"e`;T9ST(ijeSr9LYQ9Y`
%`aEp=X`tWJge(J3>>KpB@"]-hIib[mUg?UU?oB@DmcoN,@tt35&$pLPXa)OsV!i"GTI=sI]@!oT-]2I!77#44k=(LoBO#*tgLV"p
%Ltp8F>!Q,NXILQW(=_Us^W`GcWTK^HlXB:@#p*FJ)FX-(=4C_QOI6k:Z1YT2$l]eHr^8s;&ee[l^aRaWEQK]RYl("2LK8-W3ha_:
%6u$!b;ZIG5=STS&Z;n0J>5NJgh-9@$eF`>DDtWQ5H4;doc;(nNTiM-)KNc0o!!)H3Kj_^HL$$pX)F*S8?=qnYe+iZbCS/:i.YISG
%MYs^+SBr/^@IJ"-'B*.bMnVc9qcISqgCs:c!-TG+K:Q%IIq/N8GaIbcPKF.f#@s/c"N?7-,C!ob_J[8DF>R*XR7bc6ODRaZVEO;<
%Nm(=qo4PIM&]S6#*b,(Ge(W=Q&-!$88+S)cHBWpA9kni7]W\J7b?9pJ2@T/fC".-(HK]HFd,U`Y*W'5]BH$e%8iEo5e8<&N3oQfe
%pDe!\G^X;(`H-YJX^'F%/JkPH[$1#..G'P3DK5\L6)icgs7Q6\KZulDYg)uhTKnbd(!E.)UmsQ_+L@l-);Rjcd#n'6GnP%mRC.e2
%g-[`VF1![/#0?pBcFA%7^^KYO72HRkgDdarde.3B(K_=qCG/p$eEhW^Zl?,0HB,@;[!pK`)E1N/@P3EJZ>W+fak:JD,IfR*fR,gk
%%a10Cg5!`"J+1uFQipUJ*Zck=^%GJ'q)uSYT"TQ$*:nM560F6#o9Gti&THM2g2@+2?P0[4"Dp)L[TA'h7DO'kBYP.$HpuEX39Kr^
%FfV#8Xm%*EN@.#-4=<DH-V1bLbP!3[pJ6D;pRA4j#=6l]Yk:N=^IQqsZaZQf@t*kmBP]%^9dJU%U8KdQk35tV/giqJS]fDEDZjWt
%R.^FU6I=qNR]SfkjWs%.cecB!Nqp@[IuS%Y)9M<fDK_*"=2EG"C,1dBV4&P0?$a=8>-Sc\XQXGV73f=9RIDsGDdlc)7>(#cWj>lY
%\7i/$GOL"p7;N7!1m1t3=S4Ne/_?67a$cCgX,@t;;Vd3AUQmm,CqTm6k"_/;"?1RF767u\A`p'hEnSQ7p"$j's"p(VbT3Xi6C/HM
%;!/TEGcpquGR^DTc=dEO'LXg!W3K2GXV!4CA`t'W@CQ.8?7\Ru=_%hc@%gIn(+]&gZ-mOWgW<p$q=gL#ggEb$l_`W,AZ3Glk%?SA
%S%fgX26*HBs#l`coiKamEEHd)],apfIZ^gIA;p32Ao+8mDn#H-epfdGXfq`/pj-cBpEkVLq-`u3mgH.-+HnbNF>nK_FO*@3<?p+f
%)sTKH-QZ2Ir[5Q9%q(.&$V[<J2,YJ$IFD:qn/;6`Z4ck(Pd"MhH[FSnf)Mb)mR&Zg@=HC21iItYMj]-=QkQ=p`bFtui'j\h`djA5
%eo/.BPOCskDL_$(B!RG&Q%4;W2ejCi[sr:olbID>JfPdY;fUEp7!Z8Aan4BWe*Zg$V:#%1JH,Jo!cG`ZJKM6RDXClXB)cKBhM,DR
%E2f?io4h15P_sUNdj0Q*-(Z'g.$`,"D56`q>hU:aVJYG)#:gM^*_p:Gbu;/f<6?"+8I&HLdoha0Q/RMOlE@6sPi(e=Wo/-5WUVK#
%&V!$jrWkTt!M4bn&GGXsr\0s]reL(_m.?K8%g+snR1U>AV,q>6]!Xcb*;8C"qWAU6Y1[.31r`V:.Kp3Wq(@2R<IN)r`M@ZMO:&[a
%D))S@WRosH#taBT=_I&\OmOC(]W^Y!+29@*hA>b9B:4ntYg\u@$UTmpNWbH#jmr##T.e]:rk_0*Dn%'a\!gVC!t^#989md$XhV\5
%:^MEfPd]I@cuPjok<2FD&.ls*L.^DAiuhdp:Eq\:oTaH]\CKP<@7i+,5(lmT3,A#aZ_,8.!pL"UkW3+MlS-_:9Zc\&s-)sUSLT's
%=@Xlq$:kfl&[#3%&OGo"(#%>VB`!S4MqO+oA$'(2F[2W/3C**E,DEEb$GFMt2UkAtfHOic"C)acXRnXfHu@a66?$M;lPSu#RZo!4
%Ec+t4:)d81j=EE`>l2''k!1NL_$cdQdi#UU&kgjoa-+R1cj[?"b22^KF@iQ%V/Lnq=A9D2LiS$Z!5kBfJ]d9cW#jnrH6LhJ%.f\T
%pBf-b(U6@L]D,F.FLWEm(hogN7>>2f)2T"A[_LJAS@2VJfnE)bR4oP;lX%EomG4*Gj78SAEpK'6-B]QA@XtPQUPQK!8ug9/Cm^&J
%P]"MH4g]^Do=Ulo+$<.@0hf`ooLV?\RHV2_q'7"b?uEo#-I=2JV=g!RHR7!XGpD,S-CL>`QnP$VS<&#sVJq1PSAd9gG4>%rHu%&]
%YMOc#kMIq\2PtMhUhC]8=`K@$Z<oC_.8][8-M)*)!F<C1Y7!=Sm2'&Co3cL:7:'uogC1_fY/?nIo%o(]Z^<"B]:NtI"XoHh?5LAd
%I!i=KTB<]`!sAiRTKU$>AMhmAU:Mo0HLVniO)9QN$,-V5%(Gt4[6K,DP)ag5gYqVof"QJ1pg3X^5<!hHDtQ'_n%J%<bP(d'Gi7"S
%2eQUl^2<A.^Eh+jDTd@`B"8auES5bUg8s,?mEe%jSqrL1o/8Rj:;u+GX0l$]N#GoMl4Ipk'0t<U+dj!(L*#j*h3$fPe"^t[4X?)2
%b*f/'`AO7-ChG+e0Dr8,hq'IUXfu&3ZL`dra5D"/8T#oJ=FTJ/5?S'f?681Nc0KI2hf%nGpV6(t>-TKgoc*0Wm0oh1(r>(e]8AT=
%D`-F:P3f'-]<8]B6k:d@8]$nrT8^&(S`?&9-XdM^]*Mp\U!DMMghS@'GlO@ACiRa;BS*ft-JR`5+W:cLS(i#m`Lc9+,(I>%fV>,5
%Nt-/pM9#AoV&=_G.9s03SX=?D9TUj0b6<LI>kAR-I!F%SN9l$i?Lr(-Z06[bDd+\1g:!G2qJF%R]hQ9S2VmZ%?,nrck83=BS/X]<
%q/T6U`U@%.lMWC8a*I10i;CatHCjn#b4B9#P'-t:lh5cI?.e&jNjnuZHdcsRq<E:NPm?a<Zi=F(3g$@`Zp9HZX0e=EL:ORDAXR9e
%$d\/j]dF&U\bq?h6J[];TR?p!Sd_tK?Gb=AH4dkXHIi*n$hd:V$COk`UY>G999cUKDRs^F/Q&Di'4X-.=l^f@]R8WiI#h!gVc\@9
%<N[b_?[^<:?%r&aB6CZ<<AN^(8&sdZL"7YrKGM[mJR-\7p#g,bq!`XOArd='2l`mU($DgE_Sal^D?8_k4+"AcDd/)f;o"aH2D[oc
%i*p[X"+8t$cWkn#64E0aS^(p_0DgT%r_krX(*me@_0BC)h!s/R6\B>WLP&rp^=$lrLNg>#7tW7OM8;Gj'(aLZb`<]-&nAD]_1):#
%c1[_NXH3G?P@F=dedWX9Dr83WI';Ah9T8G.`@KS>a$+msf&mJRW2)tG9f1s8/&9UG;<AUJlHYOqNP:mV'pGI>k?>-]>bJ<9C,L6Z
%bl[')mB^=A$SGU_k#SN$$sY.LV20c"W#?gW)j7*7H$"T96"O8X6Z_]sWUX8e9dD]&U?HI]>`#;/n=*_L62Ma4I^q9Gm!II0MQ%QM
%lPf&pRWc@OGi1t"j\gNLqP.^oeT:d#]@':7jf!JG''+I=\]SN&]b\-D;/t!\$uXeb^W?c7nB.XeLMi8M&cTr(1Xc"(P!PZUNi1$R
%l[d+B7!:^tM9^pI+\K-lF(2h5NC$DTbdS*ajK@5eqd80A/8A9;@ABWD=/!mq)I2Gfq8]t[&**\-\hq(CWs7Y%>=hUKg2n"4%U1qo
%K?JCfML34f?K%`])oiCW\Dco<f"R[Q'DCn`mGm4Ds6#HD%8s';%PX]EWKL7+.P]-QO]Te9NJ)n*BgJ3>M-1liHWWs9;b/MmlS&5*
%p"$k6qQIBsYP&gj)ZL<n925@-91:IK-OVM#4tOQ7CkHS.H[@nTXFE=[O:/\%^X$-]H0]t:^-<+5m,S*RE/U5_2f@#605uQVrp8El
%LVC_ZI-<Z&AVBU+qB'p!iSWt'ID,;\Dr9I+f>fWF^At_[=gll3c[m+eYRGCS\#a9amDi`&J)%SgJ"O4Do@ErSI=E5IfuO-QaR[Z'
%_jH.@Vlj5@UK\]?nkKSXJqjP#5WR<'35m1S2A]m1/B#9(Qc"e(]]K'8L+fghqNUJl,3,QI"fe>83K7p;d),/Cqo"rikZ$B('hS'a
%<D0;qs)FE;a1%@.`Kchh(60IU5/F,1pO)pXp?hJ1*,a!`E%d&nAhm29##^QZ+"j24/Wr*q$SllA^k4]S9*/EmPTljuFPWW"5%_mb
%(a#TXX/f+"V%b2l+H,B>P\m_Rn,g<RHQs3+TJ%/Q37dsn4dK)qYbN*VISu&C,N_gRb<>uI]pdkX:%4m!7-/l5Y;`TV5E31>en:%2
%7UOOm.Ag+`eC\RomX4';9DN3M.S$>rC??ebR*!-QeO<63R3k0l['1^30ou':FpR6\>.Yu,lfU1*[[gAKT5OS1@ZaHN8i2Rj6AfB5
%LSFrcihZ7??^F<Xj&8^pf9Me?V<2Wkk.+A7I'HRWl[!B"pR/'N<ep?9T8"7]Ekf\F03'9Ta1T6[r/'ocTP:I%I?'f.T;10"GYI)b
%i\Q?@hVt;4bM]X8ENk.3S/L=lUZYUq;iGeEP/QAl_.h>K"e:jRME]a$Rl:J.mVU=@`.gAcdo@Yg$PquB4%t\gD5,p_L[2Tibg7X(
%KDMu(Hj1<0mq/+qr2$ZQ@d,fa*!9aZMKO0k<8f;B?9LH[p<^KibtP_cgF%T4nTPs759]ZBlFVp9V"6Os@[<-92EA-AGXS(.#4)qb
%9H8=C'e,;.]FPk*-9\/BM^"i0_q8Mb2@s-2!@*Y\V3@d==f3NA<L3L1cBAV,[QMJd4V,J?;=OPpMpp\7[s?N&,=7)MX@[1'`&g3+
%UE")ZL0%nn$4]@&Rmn<8PS.LXAnnqWAL*YmkA.^bB],deD5=*7Y4et6XJV(bWhA#9I,d51ECpa&#3Ibb#W4?h3Qkf%Z1:_\H!`3I
%cF()3f.l+0H3"VMOTM(Z@O#G6@(!j6!RVPuBZ\`cBh("HN?V*-f3BRm4.%(]W%$GfgfjKY"f<N,GBS+/cm8P!,UBf'gK.j(\CCt=
%H0bQeao)CH7KG[8;kBSg9bYBD#oMiR<k)LEN*+Xt&b<N]XCeq]jN]G&Z.*lm=HaPqC->f?DN@KFFGX?K(5`FWRKR:KZD+4uX:cNV
%WDQ-3*@lLA)q?N515i)tb,G;"M6VS&<dL.kajT5jSqL(\EUm$Ib#lF@_lQ^uSjENEY6eP,!Oj!\ZWPUiK%H9tE#)%r:AcfQo]nE-
%G[lm>(R&u7`NV$D>a`NJ;tSi\?OT$?qaC^sI+IYXd5>UqZ^HLsUV=Zs#/g'jbJI=1=d5k?PW0gf4I:uLASoDsTkD-`9#EC8HnDgE
%r4;&U2NKWN-A?)`3!)!cZ08'j79$A+CC<0H2==/l-g$YVYhW4M()?iLp_ud7TM`tR+##'YH<Srh1o?)+rj?K'N+0oI]dcNsZmUTD
%$[$>h$e;ti'<V+q"rtOtQE2orH6W6#/T0?gp_-dV<&L^_Z\uJK`C3RJ9^JC18="M2C+kdVnDn8.44a;gg*i9WlrmFh\#<RB*8D>C
%>;suLI]T-FnQVc.WB4ZJQ\`Ar#Y-[fTHG3&/W'?no.A>lb^:>:ce[&l'h7bMF)e[W%-uF*S]R0MdV*AC@<0Q[28qEXa2/7MGu_$5
%bRA4FkoCqr9)O#$,[kkQ7IOmNk+&??@9P)jgtYVp\-<oEo/TrZ/If'8H<@$&2m,OmcBS7LVA"PB1s'NrMDc7'HMn[\Z",d1G8>=\
%>%69SYg1>#<,o^W&5"t$1b;OdaUYB;.'i+AqHPoEL7k[AiagBfZO;i5p>B<1%s-1C%&:ihh*(78,,5(t_\Tn>-3LgS2fJHRqHclE
%:E@G8M@jr]k<[psO\LY3FT#D1Sj,3,jV47E6p0^=HrO6I7.>S:FF9ODkVD'aW5p5Sl-u%R^>BI6,0J=A5#%(r&W,YeM<L>O]i,=<
%.$Dk%6Q$KQho.q""*eIpPK]6c1:fX&KJ%1KMI_1-.CXplghI@3lb5c84(&6\08,0l)cPUKMHSE9if53?VZW$W1:+t7=!VBoO9gtD
%LXIV)$@t]+o0"RDNbR*F<?6%=k/rV#P_b^*4c:OI>rooRN:mHAHO>=T>#7HoQu'_HXV;t!`a793Aqg+mqol0iiS0H<:dIQM()#[B
%U'e)PZ\/A\qVVSr@N]ZD/otJs<l)7)S:RCE9X8c5L>g-8?a/75kK]olMa)o8iEQCA`FpEWi%X)5)%')7Z7']&;eX[KnbLo/TD%sW
%d>:,lg\X$cRUl_#mhK[<lBt-NYK0t+4i9ci>m4ptTD3KTGA9`"V1`>FC)>"UT#BfK'40Z@ROGB9iuH<V(8B`'br8N64i;G\l]MT8
%'!Fck$TVH-e/sTj-HO':Q4dO`OgJFi2BeGV(V!%X$:cbA"F[*-O3Jd*P)1Q*@0QVj6*WbT3LJcJFCp+:Uuh:&8GPmP\(Fl]#[G2O
%7e@tS"W+-i[2lA/e_u$H_R3OcJ"<LgFmCs*9MNXC7THQho6q;oGmIZ,[E<7Z/T^(.e(bWdJ-dbpB<ffS_)!E4n3s\aWTNGW2>qOB
%Tue(i'e)SdGr/c@XM5H^'I\;@Dk8<HTHQo\J'7n_.ZW;)&4n-YFLtpT'S-DE+u4l[d:,iFZ)UPH-"!YNT&nO66,br<L.q/"n[[%i
%R.q%Lr"-Q'7<>+.ZI2;rn2=1M-:u9H8"Bnr@jS0T1Ta>e&J7CS+6-$7!RdJ^024%Pq(Cs?Ou3Kr=B.kUa-\:^Ei9?/O*-*<BMNg;
%Qop8r@RTo>GU'0-^m"Oo(qXbCQUO;ir0Zn/,4!C/Md6b#/K@`gaA*JD&LnAJDJ;P>3dB*DQ146Fnb(<R1b!U@96r,"N=`5%94aa(
%.[&mnO_+U)OJ/sZbD[)],-FNPm6m)DON>*gl#F+d=LdIrMpBQ1ZN\[%F"MC2/9NqKlqZc1p2+IgltdllcnG%>f5&i65-qK!F<I'<
%if7\te3rS4%3WK!-GI%[Y_<ChRZ4*&]E,;JdlLH7pgao#)0&)lN"V[)aANJFPp7#VgKTrRl1`Dt_l<k-7_`TI/>c!DlK+j$6A6qm
%-Gbi]7(n9dL80Ud3aNF6T*gMpQ#A",N4`dU[5Y(SN?BgJU"W$eY@eTk4Dj5J_8Q8PALj)F?Su`fC3f*M`?0,a)VSLeKS(rl8ST8T
%3a(j(/)RZPg<s;sUcgN]X\$g/&pLu4YIR^YeIPDo\RdS9>j'&`&L5]rh;WE2Yoe+o9@Y#J'm42oXrq5jH]aa4`.LXC.d-ruQ?p*q
%=CrRFJkF#4(7D[*b\_)\'BJ(P/Ku]XPJ)X#+ALGt$eLSe>BIE;oH?J10?`F2L_H&D/rc`,ad\[:-[UZ%dT_6E9kiBelo/+^')k$E
%0'+g$#81Yn0i(0!??r1PYK36$lX*U`4k(al'3R\#qF2N5nradn?T;F$HkINh.o=NhW-=^RBj,0V[T5h3;Q6;\;++=oikgldYJ^-Q
%@.3D#U"f>7F[M:Wr4PNEQMTO8eWfflk/[*DZ4dgRMA?kJ;`UniM7&1RV-Is_UKJQaUmb)&Cq"\RlWWbhjj1P9ns/S1=mo!V*2-Oc
%&D^RJM=2\M*=jDhfg#a/-5mOcm4k.e(C5Q\@IK>X;5Rl,DtLM3FN^1`geCJ?&7O]'Z?8O7OFRL1-;Y2WVK0L/DH43Vl3XJ#i$G8A
%aCg!"K.i7X4#u_&;oDh5=.\DA21plf]I_=sc-fA4.C.N8\D24X7od3S?*b.W=d=3MaYK8gF@Zg5:c-^iJVjMd)pM<T<IOk=RX\`a
%;W%1&&^e!l^RA1-=7C:@GPBTPW[XVG(@W]LVs9-0YhbX)6:B&0p0^4[3"T3O42IhW/RJl[%DrT!RSuWVOJbJmgEKWK%AqqJ@8cS8
%ZE.RZ5VCQMg[;0=Sin6C-rTt9["[)%rbctj6olA[1N3XU)q'JdH3#@<9O&!`0.NHl>p.kao[Eq_EG,iZ-hd7NWK/P'4c/;oN#9WL
%>*(\2@_NLA%GIhC1I=s#,/8S)U1ptjMZkH,0IoVij<ce4itZcP%lT$jk[Q7d0M/AT=J'6M.ZcGRM6_eKEbMSanOgnBg#&UTMbl]l
%Q@sLo;W"^M)]hO[JcmYDaLjR,.8nM9'VgLsFM3cB_Hi6X%O+OS$ocTLL@SX;3DMCcF^')'cQosYLnaq"YI.7;R=fbZM@lSUmZ8V#
%T8$@BL7MZ@6^^\U4.t]Vk5nUQ;;\:^D5jkl#<O=L4hslqg<m+g<L[<XGAeK*_b*ZrhT>bgop0UVZB6QbC\.,%5aI&r?,L$jor^0X
%BmGk%f]%:4WEH8hnFjGqfd8(@ULle(9rG!#-O(E;T][u_ZhX$0HV+2<Z%P;tpTc#!*Sns!!16k;N1MSPZXB:2fqft%%S[Q`;#ZW@
%h\pes[=X88=KR"/1p'`+.H^n94FX%k;+gddHeK$JWD6)^N-Aeu<r1q"aL0rp+KZF%2&^n^#;:sG.iY',o^*Z%,4if^\!'h!P2shn
%,J+F^pc5QjbEM_>lWO-;`@"L$rka3R9Sm)`#+MrDC^Sd_ous^kX)Cq+:d&j_VWFe/TZA%=D*>_Pnj.[l>mu21/FB&.>7<YAiJRf'
%8JI<-2jhS_*!O[H8AV@5NA@TX>:7>&Eqc&&LYsV'j^DNoWqck.r'6'>A>*.(OS[>&p7]JE65MDE\h-+%jrfstWAa_.]["K=,thLD
%lHdtX/gRQoBrg/(&/P4Y)L)Y`k,Zpk,'ch^H\_B$knn_jT+=q"bueRD^mF1^-DR[G5KnC!1[J_RT*j^XkW1WpmBi:!W]*(C01d`[
%_s>K!XDRUU3,!Rbr0rXVh8;MsbFj;3hGm`0O/g5m$)R^fnYo&0I3ltY%38LWqF8jO]:d(2"[$gN:%:_i`H5Z+0(kPC&!s#Blgr1F
%HSC)*gii7IUn9HV>coq9W$Y&p70Ko-<gJu0CCWmEP"V\(Ul"gTN"%XO"_hk!/]+<_8G=)scqQaL-JXPp7IlW*f4ln@UqG1TD'!gd
%mL\UXhR(Y[G90TGgU,=R*S+=oS3c/Za!FeCGqm3r'LuQF+n:dmro;3RAIWqtc9bQDR4Op&acWR6"OT'cF(.nhmNJ_C)L<A;Y,rtJ
%WdL(tSNeZh8>O"frYY;TA/=Yo'CI7p>95NdbkS6T=%i%e,)W9%bTn-A?Dr*2Q\rX9/"Mj,?eU]XFd"<&MBgpkV`/H,GI_.]]&!7,
%WWYL:/N)39\t)l3&Y^c9qTE:BQIXE!4`#lK%bk]>1T:Ll(:XIbD@]Y?V;:ibfP@>Aoo<*H\AnY)d3a@bVl,@X=V#,Z'dnNDT8T!=
%C*Uu_MXU($#q1fS\7glKcO23NEscXF#$nT5#k`DF2;%nOOaDl9k8:DL`O\:;Z()ASq<*%6k]Y7Qg&_^-8'1B[bY1&dn?%S_RT?<:
%&tL\mfe6]+'&BWMUmS=m0j0*\6rLJNcebf(*Z:_.V)FV3IiTE[qJTOOg<>F<bibUS*W#)oJf'+n1&'Qgrkj6_Va(+Xmsk*,lbEDQ
%^\Rg*kO8HD+9(L`o&EqV'g.AT5Wtg:&Jeuq(432jd95baAR+fc@]8(-*?X0nWb+=f677$FDqOC::$$A:.>Q/ESI1u!RetP"R&m)Y
%6e`E=rVT6P5\G+Z.un1Djdc#B*OeML@r4tFQYZ0f+O\:KNP0t/%JjGC`q%9Og.iPC^?EI$Z3M+09M#E:m0stSlatmS:dZG/oHd1C
%VC+o4Pt+OBl['_\r>o;sOr6pQ];;,B]2MGMf9P7clZ/1RoMIJSE&L_`(+\87^FJMDrWX9;:e6@ns%\bq.b9UE@>fg4H+/DQ-Y2qE
%78QKCVh'<,j1cU:LDq/K`fj^W99`@ulW#B\Y2mV6b^62<]q0)_01ROUY4dR*^KPI`K.XhF@A@D$Y>D]50*Zc1_<[9C>G:pr+O%36
%/1UD^mFsXed(&B74hqhd[.T3niqF)WU`(h4EMFo5`:)_Gq]e4o(?:o<iC1A-c?H&^HW5tZcG^k',d9<@C]c$N"9r\cgC`td@'AOa
%5-qTeR^CrJ+r@AX-TP7Tm\P1]%nH*31Zl511S"EgE%[3gg[Yn^Z^p:MCt*cpaaB]'ZOmmh?oNQ"j'3Y@aX7?Rc;t)13#@-%F$kcq
%@0FrlgOH=gi3_,[Scg@P#T?HiDY&2[5qgfIr#f6fa"._<:Gsj-X"S8.n2LH$X`TH:<a+Tu+!+YdReL:g^0[fUS/+E-j+<?k*9Qu8
%Aui7dIN7s+'8Id0F10,ZfH#G3">tepCBWbkmO'.=p2@*M6>#a$F_b>+>Q;_%a^K.ukFBQ\ogrTXO0F+pY`EF8O6bQ`o-T([N+qDf
%;B7Z>#pY6iS3p1jI\m1LI\mbO1N7-5YJJe>2.:#TChL<k7"7G<fcOZ&*oJoIXaS)!jn!cH1K6LDC)gaeh)MJfNa*4t]I$0oI)2LK
%+R@nj>3ec,<Hf4nfD!Lk5JmC_^hZ&:HQDQ5^GhQ.H"\!DX(bi`Yepof3=_F\V9gD;[2?5q]h8&DiaYBkW?T`jJ`p!bFS6>)M+<.<
%.?13=9a`U?'NLuAd>``]NC6._pcNeQ;X)rQ.b/hNpE[R6c#+Xp5"I+8DPL,&2,N>"-],-SLusGqA[pSO2C>K:-CmLaRV3EKLp@8E
%4C03.q2SWA%LY\Y5<I)oiAS\i1&h''VEKrU;]#J];I8T5l\HsZ7FU8Ihi7CMnlVk3n&m2`6HC"M0gLRWU[VDOH-$C4)f58T5'>NJ
%SM@NE!;#)m<W>8.p4TQ@2.=VMO=[EM;7Ues5@Z`hk)ANTR7sJ&M-969JM/Mt1o[+PcJ8fT;*!Z)*n8s6&QVCZA44A"A4`7SiJ\7A
%CIn!';:"P/)-jqLT&boOl:&&>0)0_Hq/Pg"Gh`&a[e"?,lN%c9d2KT,,Hso1PMD;@cJS+d^=3_YG7ZegQ9J=q,Ll3f_0B2G\22"1
%Di7PXYg5LO]ZBgR4#c'ZJ5K\l1qR4^O@(5MmXY&fSE7L+\CP+7Xqq;mcWVkWM;XLI;35ahc0>m!fVuU($SnJ1QrlE//<j5MWB'Zd
%GWb#e>uP&\*T,DY0DMRDUBK8cc7V(;;Fp3G3?&L$&Z3,2<1Ikh!f%^[)rdfHYOp_7(`?LSPPL?!7l61qH3B[XfSGi@2hq`q&1TbB
%'3js0+Bk>O,7isL]QF+6^.l0TL0XrArlk&^'_ni<>u[DJBK-'L'SX#E_.gGk6jb(H[@F=eo?h+0a_UD"%%95p9YRU*-MUH$=dn8m
%TR'mCZ^Sh3_l#ne^[@+"U?P\)55LI\&!d;ACW'^KYM1Dk;M3^%XqF8VG,B)_'ZCciRQ5IP]\DH=&e\n@XZEq=P9(og@VD,inRT/t
%;1[^]8qUL;n=9arh@"q"P7L4?!$o3Zq]X@0a6*dgX=*Os%a_nA@nYTsi%iAJ[r9F`4YJ]CL9+65R8,,6$u_QW<0PRgR_u^=BuMg+
%P_Rc2<0S:3L%@Tl5pC@b8Y96B_Is]0F8oXrCVe%Hkj/]W<ABNZVCS<.M.bu^Ff409QKT/E[Y:]N/&um/egp:pkTPm!(Ab!aMP']!
%<*GNi'iE_e`,EF/6,oSD+V<u/+<sF".HL#;ETKdj?7g1q>bmM52b=3L\GV1*"mVO&#uV23Ru74H]I*h"bSVoBlUVVOb^Wu+^;DKi
%0d*2pG:PYLf8T-pq:lX0DNL+n1:Y*!LAZq^l=k;-iFQC8dFMB_DP'bW.t_L0AgRgS[4N;XW.D\V?KFmus);Sp>?>$]]hU,d<h"%C
%kFiY=0B;+I>NZe.]Y;:t(YUXUk[)s9f(%HFW@XK&,!qb0a.NN+;%M<='eM!6B3cTO*kPAl7XJ2Gq>5X,YP\'=-\MHt%(53Q:tND6
%Llu8<*@Q)`[3:hpmOS9!;!J70p3J?0Rc,*Od><t6WH3::Jo($R)ro4ScT;W#cASk%qf(jSq"Ht\FkPs=.*bBc;YE+fS(Qk&g--m0
%Hpg5ZoV1?H$K-;`Q\VbJp__#h>'eI>]7m'Q%H91,jSY%b`%Hd7`[LYf-r1ADosbuQWUrUX,_&kXJT"!Cr2;^:BQiI:)ucCls7C+,
%&!$p5]W..j&$N$+:MgB&a]G[7IV!DU0%O0]/[r2,>dg[DX7*5/TB%'Nmb%MOqj+mEE(fcj5<!h,fBP#ca"b=fklj2Q>V#=25S5<0
%BL@@QFu>:uVi.5,7aQ)ee@oPuXm%*Ec+!EB,\YI%rT=BgnZDe2HQ;X(S"dldCgoueXH9;s"l<aD<s?]F;_`u:^%'$<I2'"VC[?nW
%>pD24OgbgY@6jl7[*=X+`iB=K4UP).`IW9O!\gr?2!2.bat"G_ZW:(,7nRdM/'nPI(;$L_7MFUo16u&njb%&!UKs1Mn_(k=Cd-L'
%f2u<IQ;e)*%b1j7)&Y&)qF_F)NBn+VW+a+n<MgDffAH_-:=@fVW6M(&,mRV*^`]NRdQ'/+a@"(_:p&*.Qr,0@+GcK5,\XPi2C'S(
%$Vj!4GZG&RAN7r1Qq@.K:QK(tdn$iL10mRO"OMC\$SoV=%jAFbC,9A8.PhG4WM1hh^_']pa=qF@6?X49,`iB71Vu<ZZabH'7ABnd
%_M_-M,C&Fg[(pH#VC#J%iKKje(UGkMW$(?>0C2W$%Sc96!@P-%Xt<X'nrc7Qkt5+eKe!`b:"pohMi@%if?O!/GP-lpfe<%S'B>]4
%mhDr5VDHCFf>GM69"LFKJOO4B%:862A.F_&J?4V&FBlCho=mrgNbR/pVWOZg@<jJ1M\+_+rm.[Zcj-n.admnFfEd.lcpg%p"?F%@
%7FB[H>t;[;G#OP3mTMC;?k;NOS5he*lXORZ1L\M!MZop]Mn>)r+Y`bc8V1<SZt1#Z7RA.Vc5e.p9k(-8KadT)baQBV;;)Y7W^Y1I
%,6#WTku*j"YRo"@5rhq-<.<\#)B'gkQD!9X0XC2p2jY56Q(ZW@a<hj491+%<br<\nMDb%==0&<U%tb^a,C:KlUmkBpaK?gNXQ(W^
%Ph9*@j%d?>GtTsb@S$4DCVp7(;4-<ViWYq4k]lFck9&nBPZ^q]e#+b#ROai&3CaIQ`-lL,W?HpFK_(-ZBdY`275ENm$=!=2q,V/m
%(+"+%k?'ike(WDp/:_O*mt#9!j'hD[bjBagE\>=>D85AZi:jLIrR!bl3%`iEhq2hRX64jhg:tn",V2Dl=]qZkqn-e%2BL4d-<bH1
%K*Si1>B39Z8,D";OV3\%!r7=/3N1XE/a9JB)`2H:,f^ZMX6,H+&N/uT\.L!(89nK=[qNdR84F-^cqp)68!Z3Z?V%th'poC^LaBjQ
%CDd/<5gKnY1i@P+R&gLkn3P=TK&GDc)K.hsp.EHD5f$cudSR1YF#Y"Ffa%K2:mkCfN3G"b]8"mI:p4n&RZf`UScV=.9[B@p_rlmu
%7<5P$$2"Q>;WNltC4RCk,Ss@39j3.4,c]C&ZGspNQfnBE(&dkk=rm8VDk&K+r;l^?ao%l-#6q<P$E%#:%PW-3'glj9D^aXq\`[o/
%Y8[7=r%DKU0Dr"^+a<nrokXPnb&B$3+"S?cq;3u30)k%u*R=8&mJH:`<p&;<H#ULA+BTga9p9)*Y*M-!;Fq6oX&oD%Di8B,qhjEs
%#'6:SQOq@(*,"c\EJE3@[@qE?WLmUWl_r\X_et6Kg^Sr1SOf"6`)'ca@`Y`7;<h4=PDqunBg(gaEQ(TO[#"BAf_:hUFLA\]MpeDG
%hmkFsK*>HF@;;*CX<;0<=1,oOg1#koEQ$"WmY.I*JQ9&k)'V^'=T42b6BnQh#>m*))bf.\AOKPZK18f?TA9!d0C.N9XhAAtj7b+1
%W"qHO,a9WY&<[5dP$@moZNfiD3hXQa@]I`,(Yr5]*QCJ""eHu7?F-kq0Btg3eK7O56."Y^(R#[H;m1YlbfnS/7B<$BA/X\)b]3D]
%,Or$.Du$')_+'QWnj1Znb!FFFl9Wgfg9(<Zj_=T'Sf=[XN?%;0I+!:cc@l;baX?8@MCjKb!J'cKi_E.g;d3tM&D!kD*G.;nK2u0^
%m4MINFq3+_+@.bjf6>-!>N@Aj/:HZhJuKEPNZG__eSJo<+nJ;sSO[sc!l$'3,n7CCrR;;4ipn3+,`gF'H@[$:f?;kp_bH*pa0i$M
%Gt7FP-1K$-mo;brLdufEPDfI'6dSrbV_)Ob`M_3C5TbWiKde4NMO_j`\YO:b1k:DKj1-APMA'ho"FaR-H?WK*m;PHGJIc[nHJR.@
%T5.64j])]9ac<M,N3g2G93^.ogQULog;?+-kD%-8(tL>4=FnbUkB(\Ja=,U_UenZ:`'(<aTQkaZ=!Tpu'\W-H&nGrdT-dl8\2`M9
%jZ"oUMj2J8Wd%5BJHa/eVF]D6.i*W`hTD/P>>d@p[/G4:\Zh5\.ir^@pPX^8C-!&Wc($I8LuCq$@,"q$XTMn#0Xsuu;+dl$)k>i3
%ZL=oEgKX'G^")hieR%uNHYe&lgfsa4>;h/tL9cKC=fZXV6W.1:XSKYF>n<-<7qHS6!\:44R&+$jM'k#DN_'!^3"::4ouMd-KZ"#7
%a(W<<;Q]]u2;N>k.T02OW)H5p<GZ)rR`XYhNJ+VD0QV","BZ-l@tP"aCh#jKl>$arjAn'@_-@@79rem\F_n6mRo;B&'/%#2dlrHJ
%6:p&!Jcd3a#OTl!@sZgd<tB[+Zu!/^&IVj^hGhS<_6PJg&Bd.1nENoI8/>#8UfII-A7k3b60;e"GbNKeBX'iMGeiHO5CL)ahQshJ
%!EaV1+e]9%pI)<TKiUE.qO.jfWhE%fe?qON+[K.#0P0r.VQCh9@;.u@!\FZ<@#$6B6rJsP0;`/(TWsODN)3pZ!rj,"PNqNbJ*t)<
%B5dbAHeh^-$ctF9*2Z9-8dm%h'Vr6DIZef"p%4q/-Kthl9bSDX`25s&2GL)ergSMK@Y!G=WgUT,o,Ab7%:2Lob;Ek#%BrJ0EMF?[
%Dj:;d]$Uh>_6&.[rd!;opR`Be(ojc7Oj*8N;&<?T5c4ZdI(eHS_Q=]ZW434mYpQbtg+-+9B/=A-%sH&t?,,VoJd_V-3*=VlR@/S:
%dD+4kSN#MWDr2U?s/p`SWc'fW_4EmF5`QZ&eXZ:Hb0fN$Ll8"K)>Yg`RGk8B]he%kA&N+^\hotBHBG9$!_J%S`mY0r.\JVDMgdGk
%00g2]8sQq^RG^u659LX':QbkJ,;ZlSZf1V]D.jrS=:p^l]OpSA*OuGniqK;&5gELZ/K2luR77e]-"6=WV4HsM[;n"dY`V'O?Nu^b
%%ip[QWRio&gG5ZG)f4n9/0[?]h4MF*-rWilkV1/`F<8"FGXX-K@nf.h^9sX1VNFKh7F-4aZU,?BBrb9-:Kj!?oE\!O"6'jPK)5i\
%<qY_S=s%+6bk`>!mT_kE9+J65j'h`&KY7/oUjID+%*%q`R!=-r7gF]CQ>AH!>anX_O#>a9gj4Rp4$A)(:JsAHB-:#]_A!J/_ItmX
%Z7W(^*-X^WSu"&e;.P#sGa2a;O#,i[a-OYG<L2sDEE>\1\tP@dV2.sGjI'i)CK;@U-YRHarR[*Q!kA7KiSfh_>8CV;]02H8k/Lm<
%r9s%(^3T`#^:ZX_kD#ub8pA)qLb]R%FKnQ)d3:Y4(p/p)Z(-/SKj9hBf/?stc3gO7GNNK0Z+"_u^!1Wd4e-S+JI?Blqi/q8a-X@2
%GcjkY<kShjGcppjGcaILE3)Z[Y$?)bT%,,AANoAlEMbi<X)V"E[qT_.;Pr<B@I*G_GRT/V3&K!LRnd./5G!!Z4/gEN#>c#dkjq&R
%3TIfrpc(KQ]>G!n$gL:t'>&%TEctTGO0XgpB[6d7_/EVRO7cAuUJ.QrkTA*J<YkI5oSkg+a4pHlp:>_(s*UBH/\-+>0pB%(akR]i
%;H?^&iI(lcg/e9Q5+)V"n$V'8hHtQE['lRr<GU.Nfdkuj'mb:2"epAK>HdY<&+`KrXI9'=;R,RM(YUf?d"ULRI3ClZ4(82JdrAne
%VhL!S2QScak-Pbp^fh$)-`b]'?S`?CRpRc$hHTYWYC6F)Hh"@(2qZ/Wg1"N9Vtf&l0B\^L.C]$4S9l\<F!mu\0G8ck]L:3.S7qVu
%k2`2'<>L;7`nCctg$4jl551Ml\^u45[rfoD>PC&_']W`2ek]bagL@R>'"dfQ@^d:L[!"3.CG1XDKbmKRPDTZ.UU>..[Cd'_Q'9kf
%`[EF2`,=gMZkdS$O14iQ2YZu-pNWus<+FT!D4`3oD'qh3!T[du*mS)=GaWmhkM5t%J8"O4p[N,jM_n1&(L%?gc:H-GTi[R\Pk1I:
%J?d$f3(oZV43Pj"G4f_NKu`mMF-A,t321o+\+\ALa7fQQGD7an*t)NGCB\e+CG28h=j];.HbQo6k?(o2>!+arBsm[o*s_2jG($X:
%YrodLVnIUe*.h'W=Mi9q,>o2*c6>"!4@.'l)(FtmWhZKTL.^1KhITM@H@7XFEucj\*5nAj,-;VG4DD>3j_g'Ts4c8];u\t=Cu2ok
%@B:V?)tSTh[5FYk0f-&g?qq@kD`]\F$`,MhUHacF;a';]5"YXWfX<7.NiN];aP!#`#e@bP%FL)n`O`;4g<ODjgI2IMSJ7bP[>m[1
%rVO78TADfH2tnIX2cN)IJ8A!YO0!H`^H^$8].`mLDh%F]^]'`&<<("rrVh:1J+KkYrPMDq?&2kfQf%`/\,ZC;^\Rc!J,>".rRLB9
%nMgL=gW+5]s*I<Lq:kpjrTWja5Q(3ss61X)nCtuJrpP@3^OhS;hVd##rk&4.++Nrbrsr`Zo[*~>
%AI9_PrivateDataEnd
